%!PS-Adobe-3.0 EPSF-2.0
%%Creator: Windows PSCRIPT
%%Title: Microsoft Word - VIS5D50.DOC
%%BoundingBox: 18 19 593 774
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: 0
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld
/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix
ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc
/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false
def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq
and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd
/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{
/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM
matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE
matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix
dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{
/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave
showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string
def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch
putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed
/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch
0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP
cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90
rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg
add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes
div dup scale 0 0 transform .25 add round .25 sub exch .25 add round
.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false
def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand
16#8A/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright
16#93/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97
/emdash 16#98/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright
16#9C/oe 16#9F/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency
16#A5/yen 16#A6/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright
16#AA/ordfeminine 16#AB/guillemotleft 16#AC/logicalnot 16#AD/hyphen
16#AE/registered 16#AF/macron 16#B0/degree 16#B1/plusminus 16#B2/twosuperior
16#B3/threesuperior 16#B4/acute 16#B5/mu 16#B6/paragraph 16#B7/periodcentered
16#B8/cedilla 16#B9/onesuperior 16#BA/ordmasculine 16#BB/guillemotright
16#BC/onequarter 16#BD/onehalf 16#BE/threequarters 16#BF/questiondown
16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex 16#C3/Atilde 16#C4/Adieresis
16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA
/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex
16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4
/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute
16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex
16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8
/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave
16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde
16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis
16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex
16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis ] def/reencdict
12 dict def/IsChar{basefontdict/CharStrings get exch known}bd/MapCh{dup
IsChar not{pop/bullet}if newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0
/degree IsChar{/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar
IsChar{/brokenbar}{/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname
ed/basefontname ed FontDirectory newfontname known not{/basefontdict
basefontname findfont def/newfont basefontdict maxlength dict def basefontdict{exch
dup/FID ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll
put}{exch newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont
/FontName newfontname put 127 1 159{newfont/Encoding get exch/bullet
put}for ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree
MapBB newfontname newfont definefont pop}if newfontname end}bd/SB{FC
/ULlen ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed
/dxGdi ed/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1
mul x1 x1 mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch
y1 mul cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra
ed/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra
dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break
add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0
y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL
sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed
0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0
div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc
esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform
/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE
rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE
mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition
known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get
1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform
/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness
known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get
1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy
lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat
1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin
/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]
def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16
setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{
/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup
2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index
put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont
definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch
show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w
Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup
rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w
X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup
neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox
AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round
def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if
dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft
ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536
and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm
15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes
12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div
PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if
iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen
3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0
setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd
/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy
div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm
pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy
M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0
ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1
r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r
arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2
copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2
y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div
def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div
y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat
x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat
m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed
/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if
sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd
/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt
dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def
/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def
/typecheck(operator was expecting a different type of operand)def
/ioerror(input/output error occured)def end{end}if errordict begin
/handleerror{$error begin newerror{/newerror false def showpage 72
72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont
x y moveto(Offending Command = )show/command load{dup type/stringtype
ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show
errorname{dup type dup( max err string )cvs show( : )show/stringtype
ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname
known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end
/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1
add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall
showpage}if end}def end}bd end
%%EndResource
/SVDoc save def
%%EndProlog
%%BeginSetup
Win35Dict begin
ErrHandler
/fPP true def
%%EndSetup
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
0 0 0 fC
1008 219 384 (Vis5D Version 5.0) 384 SB
225 369 558 (1. OVERVIEW OF Vis5D) 558 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 470 1724 (Vis5D is a software system for visualizing data made by numerical weather models and) 1724 SB
225 520 1871 (similar sources.  Vis5D works on data in the form of a five-dimensional rectangle.  That is, the) 1871 SB
225 570 1833 (data are real numbers at each point of a "grid" which spans three space dimensions, one time) 1833 SB
225 620 1919 (dimension and a dimension for enumerating multiple physical variables.  Of course, Vis5D works) 1919 SB
225 670 1865 (perfectly well on data sets with only one variable, one time step \(i.e. no time dynamics\) or one) 1865 SB
225 720 1676 (vertical level.  However, your data grids should have at least two rows and columns.) 1676 SB
375 820 1752 (The major new feature of Vis5D version 5.0 is support for comparing multiple data sets.) 1752 SB
225 870 1936 (This extra data can be incorporated at run-time as a list of *.v5d files or imported at anytime after) 1936 SB
225 920 1949 (Vis5D is running.  Data can be overlaid in the same 3-D display and/or viewed side-by-side spread) 1949 SB
225 970 1877 (sheet style.  Data sets that are overlaid are aligned in space and time.  In the spread sheet style,) 1877 SB
225 1020 1923 (multiple displays can be linked.  Once linked, the time steps from all data sets are merged and the) 1923 SB
225 1070 952 (controls of the linked displays are synchronized.) 952 SB
375 1170 1610 (The Vis5D system includes the vis5d visualization program, several programs for) 1610 SB
225 1220 1917 (managing and analyzing five-dimensional data grids, and instructions and sample source code for) 1917 SB
225 1270 1865 (converting your data into its file format.  We have included the Vis5D source code so you can) 1865 SB
225 1320 1824 (modify it or write new programs.  We have also included sample data sets from the LAMPS) 1824 SB
225 1370 1906 (model and from Bob Schlesinger's thunderstorm model, so you can work through our examples.) 1906 SB
375 1470 1669 (Vis5D version 1.0 was written by Bill Hibbard and Dave Santek of the University of) 1669 SB
225 1520 1933 (Wisconsin Space Science and Engineering Center, supported by the NASA Marshall Space Flight) 1933 SB
225 1570 1821 (Center, and by Marie-Francoise Voidrot-Martinez of the French Meteorology Office.  Later) 1821 SB
225 1620 1777 (version enhancements were written by Bill Hibbard, Brian Paul, Johan Kellum, and Andre) 1777 SB
225 1670 1908 (Battaiola.  Dave Kamins and Jeff Vroom of Stellar Computer, Inc. provided substantial help and) 1908 SB
225 1720 1883 (advice in using the Stellar software libraries.  Simon Baas and Hans de Jong of the Netherlands) 1883 SB
225 1770 1833 (ported Vis5D to HP workstations.  Pratish Shah of Kubota Inc. ported Vis5D to the Kubota) 1833 SB
225 1820 1637 (Alpha/Denali workstation.  Mike Stroyan of Hewlett Packard added PEX support.) 1637 SB
375 1920 1768 (Vis5D is offered under the terms of the GNU General Public License, which you can find) 1768 SB
225 1970 1864 (in the file "NOTICE".  As the notice states, there is no warranty for the Vis5D system, but we) 1864 SB
225 2020 1814 (would be interested in hearing about your questions and problems.  You can join the Vis5D) 1814 SB
225 2070 1280 (mailing list by sending email to majordomo@ssec.wisc.edu with:) 1280 SB
225 2170 377 (subscribe vis5d-list) 377 SB
225 2270 1866 (as the first line of the message body \(not the subject line\).  You can also send questions to Bill) 1866 SB
225 2320 1812 (Hibbard \(whibbard@macc.wisc.edu\) and Johan Kellum \(johan@ssec.wisc.edu\).  Our postal) 1812 SB
225 2370 207 (address is:) 207 SB
375 2470 765 (Space Science and Engineering Center) 765 SB
375 2520 690 (University of Wisconsin - Madison) 690 SB
375 2570 506 (1225 West Dayton Street) 506 SB
375 2620 412 (Madison, WI  53706) 412 SB
225 2770 1840 (This document is the complete guide for using Vis5D.  It is available in PostScript or ASCII.) 1840 SB
225 2870 192 (Contents:) 192 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 187 (Section 1) 187 SB
675 220 193 (Overview) 193 SB
375 270 187 (Section 2) 187 SB
675 270 726 (System requirements and installation) 726 SB
375 320 187 (Section 3) 187 SB
675 320 576 (Putting your data into Vis5D) 576 SB
375 370 187 (Section 4) 187 SB
675 370 275 (McIDAS files) 275 SB
375 420 187 (Section 5) 187 SB
675 420 285 (Vis5D utilities) 285 SB
375 470 187 (Section 6) 187 SB
675 470 672 (Using vis5d to visualize your data) 672 SB
375 520 187 (Section 7) 187 SB
675 520 423 (The v5dimport utility) 423 SB
375 570 187 (Section 8) 187 SB
675 570 331 (Sample data sets) 331 SB
375 620 187 (Section 9) 187 SB
675 620 305 (Version history) 305 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 769 1083 (1.1 Vis5D Documentation on the World Wide Web) 1083 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 870 1473 (The Vis5D Home Page is available on the World Wide Web page at URL:) 1473 SB
225 970 13 ( ) 13 SB
375 970 856 (http://www.ssec.wisc.edu/~billh/vis5d.html) 856 SB
225 1070 1890 (This is linked to another Web document that describes how to use Vis5D files as a World Wide) 1890 SB
225 1120 1039 (Web medium for exchanging model output, at URL:) 1039 SB
225 1220 13 ( ) 13 SB
375 1220 895 (http://www.ssec.wisc.edu/~billh/view5d.html) 895 SB
225 1320 1944 (There is a Web document describing the Vis5D API \(Application Programmer Interface\), intented) 1944 SB
225 1370 1824 (to help system developers use Vis5D as a visualization subsystem of other systems, at URL:) 1824 SB
375 1470 810 (http://www.ssec.wisc.edu/~billh/api.html) 810 SB
225 1570 1561 (There is a Web document describing the Vis5D Tcl scripting interface at URL:) 1561 SB
375 1670 861 (http://www.ssec.wisc.edu/~billh/script.html) 861 SB
225 1770 1728 (Copies of the api.html and script.html files are included with the Vis5D ftp distribution.) 1728 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1919 1195 (2. SYSTEM REQUIREMENTS AND INSTALLATION) 1195 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2020 1728 (In the following sections we describe the hardware and software required to run Vis5D) 1728 SB
225 2070 943 (and detail how to install Vis5D on your system.) 943 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2219 539 (2.1 System Requirements) 539 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2320 1781 (Vis5D currently works with the following systems.  In all cases, at least 32MB of RAM is) 1781 SB
225 2370 613 (recommended and at least an 8) 613 SB
838 2370 601 (-bit color display are required:) 601 SB
375 2470 660 (1. Silicon Graphics workstations:) 660 SB
525 2520 580 (IRIX version 4.0.1 or higher.) 580 SB
525 2570 859 (Multiple processors are used when present.) 859 SB
525 2620 478 (IrisGL is not supported.) 478 SB
375 2720 616 (2. IBM RS/6000 workstations:) 616 SB
525 2770 446 (Model 320H or higher) 446 SB
525 2820 440 (AIX version 3 or later) 440 SB
525 2870 1066 (3-D graphics hardware is supported through OpenGL) 1066 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1189 3027 21 (2) 21 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 270 804 (3. HP series 7000 or 9000 workstations:) 804 SB
525 320 484 (HP-UX A.09.01 or later) 484 SB
525 370 270 (PEX optional) 270 SB
375 470 538 (4. Sun Sparc workstations:) 538 SB
525 520 373 (SunOS 5.x or later) 373 SB
525 620 1034 (** IMPORTANT NOTE FOR SunOS 5 USERS **) 1034 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 677 1583 (SunOS 5.x users:  The X shared memory extension may not work correctly.  If) 1583 SB
525 735 1624 (Vis5D prints an error message to the effect of "Shared memory error" then you'll) 1624 SB
525 793 1592 (have to append the following three lines to the end of your /etc/system file then) 1592 SB
525 851 142 (reboot:) 142 SB
675 909 865 (set shmsys:shminfo_shmmax = 0x2000000) 865 SB
675 967 782 (set shmsys:shminfo_shmmni = 0x1000) 782 SB
675 1025 745 (set shmsys:shminfo_shmseg = 0x100) 745 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1126 565 (5. DEC Alpha workstations:) 565 SB
525 1176 399 (OSF/1 V1.3 or later) 399 SB
525 1226 1644 (Kubota Denali Graphics hardware supported with KWS V1.3.3 or later and NPGL) 1644 SB
675 1276 344 (Run-time license.) 344 SB
525 1376 946 (** IMPORTANT NOTE FOR OSF USERS **) 946 SB
525 1426 1167 (you need to run 'limit stacksize 32m' before you run Vis5D) 1167 SB
375 1526 710 (6. IBM PC compatibles with Linux:) 710 SB
525 1576 909 (75MHz Pentium CPU or faster recommended) 909 SB
525 1626 348 (Linux 1.0 or later) 348 SB
525 1676 921 (XFree86 \(X window system\) must be installed) 921 SB
225 1826 803 (Note that on systems which don't have 3) 803 SB
1028 1826 1080 (-D graphics hardware or OpenGL, all 3-D rendering is) 1080 SB
225 1876 1950 (done in software using Mesa \(an OpenGL work-alike\).  Be aware that software rendering is rather) 1950 SB
225 1926 936 (slow.  3-D graphics hardware is recommended.) 936 SB
375 2026 1621 (If you would like to port Vis5D to a new graphics system or workstation read the) 1621 SB
225 2076 1925 ("PORTING" file which gives more information.  If you succeed, please inform us so that we may) 1925 SB
225 2126 673 (add your work to the distribution.) 673 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2275 420 (2.2 Installing Vis5D) 420 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2376 746 (Vis5D is obtained via anonymous ftp.) 746 SB
225 2476 730 (Here are the installation instructions:) 730 SB
375 2576 1141 (1. Go to the directory in which you want Vis5D installed:) 1141 SB
525 2626 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
580 2630 390 (cd /usr/mydir) 390 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 2726 1464 (NOTE:  The installation of Vis5D will result in a new subdirectory named) 1464 SB
525 2776 125 ("vis5d) 125 SB
650 2776 875 (-5.0/" being created in the current directory.) 875 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1189 3027 21 (3) 21 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
525 220 1584 (NOTE:  Be sure that you have write permission in this directory.  If you do not,) 1584 SB
525 270 1612 (you should become superuser before proceeding.  When finished installing Vis5D) 1612 SB
525 320 1216 (be sure to set the file ownership and permissions accordingly.) 1216 SB
375 420 230 (2. Start ftp:) 230 SB
525 470 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
580 474 660 (ftp iris.ssec.wisc.edu) 660 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 520 43 (or) 43 SB
525 570 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
580 574 510 (ftp 144.92.108.63) 510 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 670 1376 (3. Login as anonymous and send your email address as the password:) 1376 SB
525 720 144 (Name: ) 144 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
669 724 270 (anonymous) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 770 219 (Password: ) 219 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
744 774 390 (email-address) 390 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 870 653 (4. Go to the pub/vis5d directory:) 653 SB
525 920 96 (ftp> ) 96 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
621 924 480 (cd pub/vis5d-5.0) 480 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1020 632 (5. Transfer files in binary mode:) 632 SB
525 1070 96 (ftp> ) 96 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
621 1074 180 (binary) 180 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1170 583 (6. Get the Vis5D archive file:) 583 SB
525 1220 96 (ftp> ) 96 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
621 1224 570 (get vis5d-5.0.tar.Z) 570 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1320 864 (7. Get the optional sample data archive file:) 864 SB
525 1370 1608 (The vis5d-data.tar.Z file contains topography, map outlines and sample data sets.) 1608 SB
525 1420 1581 (If you've used Vis5D in the past you can should already have these files and can) 1581 SB
525 1470 952 (move them into your new "vis5d-5.0" directory.) 952 SB
525 1570 96 (ftp> ) 96 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
621 1574 600 (get vis5d-data.tar.Z) 600 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1670 215 (8. Exit ftp:) 215 SB
525 1720 96 (ftp> ) 96 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
621 1724 90 (bye) 90 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1820 833 (9. Uncompress and un-tar the archive file:) 833 SB
525 1870 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
580 1874 780 (uncompress vis5d-5.0.tar.Z) 780 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 1920 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
580 1924 660 (tar -xvf vis5d-5.0.tar) 660 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2020 966 (10. Change to the newly created vis5d directory:) 966 SB
525 2070 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
580 2074 360 (cd vis5d-5.0) 360 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2170 991 (11. Optionally uncompress and untar the data file:) 991 SB
525 2220 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
580 2224 720 (mv ../vis5d-data.tar.Z .) 720 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 2270 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
580 2274 810 (uncompress vis5d-data.tar.Z) 810 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 2320 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
580 2324 690 (tar -xvf vis5d-data.tar) 690 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2420 291 (12. Run make:) 291 SB
525 2470 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
580 2474 120 (make) 120 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 2570 1603 (Make will print a list of systems supported for Vis5D.  Look for yours on the list) 1603 SB
525 2620 1640 (and type the appropriate make command.  For example, suppose you have an IBM) 1640 SB
525 2670 1461 (RS/6000 without OpenGL and 3-D graphics hardware.  You should type:) 1461 SB
525 2770 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
580 2774 300 (make ibm-x) 300 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1189 3027 21 (4) 21 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
525 220 1628 (Vis5D and its utility programs will now be compiled.  If you do not have C and/or) 1628 SB
525 270 1550 (FORTRAN compilers on your system, this step will fail with an error message) 1550 SB
525 320 1650 (such as "cc: Command not found." or "f77: Command not found."  In this case you) 1650 SB
525 370 1269 (will have to get the appropriate archive of executable programs:) 1269 SB
525 470 1625 (a. List the "viewer" files.  These files are archives which contain vis5d exectuables) 1625 SB
581 520 533 (for common Unix systems:) 533 SB
675 570 96 (ftp> ) 96 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
771 574 360 (dir *viewer*) 360 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 620 1647 (b. Make sure you're still in the vis5d-5.0 directory and download the viewer file for) 1647 SB
619 670 573 (your operating system \(xxx\):) 573 SB
675 720 96 (ftp> ) 96 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
771 724 780 (get vis5d.xxx.viewer.tar.Z) 780 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 770 212 (c. Exit ftp:) 212 SB
675 820 96 (ftp> ) 96 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
771 824 90 (bye) 90 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 870 759 (d. Uncompress and un-tar the archive:) 759 SB
675 920 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
730 924 990 (uncompress vis5d.xxx.viewer.tar.Z) 990 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
675 970 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
730 974 870 (tar -xvf vis5d.xxx.viewer.tar) 870 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1070 318 (13. Test Vis5D:) 318 SB
525 1120 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
580 1124 510 (./vis5d LAMPS.v5d) 510 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 1220 1048 (NOTE:  To quit, click on the "EXIT" widget button.) 1048 SB
375 1320 844 (14. You may delete the .tar files if desired.) 844 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1519 265 (2.3 Manifest) 265 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1620 1718 (When you are finished installing Vis5D you should have a directory named "vis5d-5.0") 1718 SB
225 1670 1051 (which contains the following files and subdirectories:) 1051 SB
375 1770 210 (README) 210 SB
825 1770 644 (this documentation file in ASCII) 644 SB
375 1820 267 (README.ps) 267 SB
825 1820 721 (this documentation file in PostScript) 721 SB
375 1870 184 (NOTICE) 184 SB
825 1870 854 (the GNU general public license \(copyright\)) 854 SB
375 1920 217 (PORTING) 217 SB
825 1920 978 (an ASCII document with notes on porting Vis5D) 978 SB
375 1970 252 (LAMPS.v5d) 252 SB
825 1970 490 (Sample LAMPS data set) 490 SB
375 2020 214 (SCHL.v5d) 214 SB
825 2020 1116 (Sample data set:  Bob Schlesinger's thunderstorm model) 1116 SB
375 2070 271 (OUTLSUPW) 271 SB
825 2070 630 (World continental map lines file) 630 SB
375 2120 262 (OUTLUSAL) 262 SB
825 2120 966 (Low resolution map of US with state boundaries) 966 SB
375 2170 276 (OUTLUSAM) 276 SB
825 2170 1039 (Medium resolution map of US with state boundaries) 1039 SB
375 2220 310 (EARTH.TOPO) 310 SB
825 2220 424 (Earth topography file) 424 SB
375 2270 160 (api.html) 160 SB
825 2270 1349 (documentation file for the API between Vis5D and its user interface) 1349 SB
375 2320 211 (script.html) 211 SB
825 2320 955 (documentation file for Vis5D scripting language) 955 SB
375 2370 87 (*.tcl) 87 SB
825 2370 306 (example scripts) 306 SB
375 2420 105 (vis5d) 105 SB
825 2420 748 (this is the vis5d visualization program) 748 SB
375 2470 217 (v5dappend) 217 SB
825 2470 614 (utility to join v5d files together) 614 SB
375 2520 151 (v5dinfo) 151 SB
825 2520 687 (utility to see summary of a v5d file) 687 SB
375 2570 164 (v5dstats) 164 SB
825 2570 677 (utility to see statistics of a v5d file) 677 SB
375 2620 148 (v5dedit) 148 SB
825 2620 724 (utility to edit the header of a v5d file) 724 SB
375 2670 206 (v5dimport) 206 SB
825 2670 956 (utility to convert, resample, and reduce v5d files) 956 SB
375 2720 257 (gr3d_to_v5d) 257 SB
825 2720 1064 (utility to convert a McIDAS GR3D file to v5d format) 1064 SB
375 2770 275 (comp_to_v5d) 275 SB
825 2770 986 (utility to convert \(a\) comp5d file\(s\) to v5d format) 986 SB
375 2820 157 (listfonts) 157 SB
825 2820 1118 (utility to list fonts available on SGI systems for IRIS GL) 1118 SB
375 2870 72 (src/) 72 SB
825 2870 428 (source code for vis5d) 428 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1189 3027 21 (5) 21 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 78 (util/) 78 SB
825 220 682 (source code for the Vis5D utilities) 682 SB
375 270 88 (lui5/) 88 SB
825 270 826 (source code for LUI user interface library) 826 SB
375 320 121 (Mesa/) 121 SB
825 320 914 (source code for the Mesa 3-D graphics library) 914 SB
375 370 146 (import/) 146 SB
825 370 785 (source code for the v5dimport program) 785 SB
375 420 202 (userfuncs/) 202 SB
825 420 848 (directory of user-written analysis functions) 848 SB
375 470 154 (contrib/) 154 SB
825 470 728 (software contributed by Vis5D users) 728 SB
375 520 164 (convert/) 164 SB
825 520 987 (source code for sample data conversion programs) 987 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 719 344 (2.4 Customizing) 344 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 820 1776 (After installation and testing you may want to customize the vis5d program by editing the) 1776 SB
225 870 302 (src/vis5d.h file:) 302 SB
375 970 38 (1.) 38 SB
431 970 1670 (The visualization program vis5d assumes your system has 32 megabytes of memory.) 1670 SB
431 1020 1726 (Although you can override this when you invoke vis5d, it may be convenient to change) 1726 SB
431 1070 1680 (the default if your system has more than 32MB.  The default number of megabytes is) 1680 SB
431 1120 1161 (defined by the value of MBS in the src/vis5d.h include file.) 1161 SB
375 1220 38 (2.) 38 SB
431 1220 1666 (There are two ways to specify a different topography and/or map file. One way is to) 1666 SB
431 1270 1733 (edit src/vis5d.h and change the values for TOPOFILE and/or MAPFILE.  For example,) 1733 SB
431 1320 1537 (if you move the map and topography files to /usr/local/bin, you would specify) 1537 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
431 1374 870 ("/usr/local/data/EARTH.TOPO" ) 870 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1301 1370 84 (and ) 84 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
1385 1374 780 ("/usr/local/data/OUTLUSAM") 780 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
431 1420 1690 (respectively. The other way is press the 'DISPLAY' button on the main contral panel,) 1690 SB
431 1470 1719 (then press the 'Options' button found above each display menu.  The 'toponame' and/or) 1719 SB
431 1520 896 ('mapname' fields can be changed accordingly.) 896 SB
375 1620 1784 (When finished changing the src/vis5d.h file you must recompile the programs by repeating) 1784 SB
225 1670 516 (installation step 12 above.) 516 SB
375 1770 1568 (If Vis5D is going to be used by multiple users on your system you may want to) 1568 SB
225 1820 1739 (move the vis5d executables and data files to a common directory tree such as /usr/local:) 1739 SB
375 1870 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
430 1874 690 (mv vis5d /usr/local/bin) 690 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1920 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
430 1924 660 (mv v5d* /usr/local/bin) 660 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1970 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
430 1974 720 (mv OUTL* /usr/local/data) 720 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2020 55 (% ) 55 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
430 2024 870 (mv EARTH.TOPO /usr/local/data) 870 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2070 1688 (then change change the vis5d.h file as described above to indicate where the map and) 1688 SB
225 2120 545 (topography files are stored.) 545 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2319 874 (3. PUTTING YOUR DATA INTO Vis5D) 874 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2420 1749 (Vis5D works with data organized as a 5-D rectangle.  The first 3 dimensions are spatial:) 1749 SB
225 2470 1911 (rows, columns, and levels \(or latitutude, longitude, and height\).  The 4th dimension is time.  The) 1911 SB
225 2520 1855 (5th dimension is the enumeration of multiple physical variables such as temperature, pressure,) 1855 SB
225 2570 371 (water content, etc.) 371 SB
375 2670 1789 (In addition to the data itself, there are a number of parameters needed to describe a Vis5D) 1789 SB
225 2720 1776 (dataset:  the sizes of the five dimensions \(number of rows, columns, levels, timesteps, and) 1776 SB
225 2770 1843 (variables\), geographic position and orientation of the data \(map projection\), the names of the) 1843 SB
225 2820 1408 (variables, the actual times and dates associated with each timestep, etc.) 1408 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1189 3027 21 (6) 21 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1695 (The vis5d visualization program accepts two file formats:  v5d files and comp5d files.) 1695 SB
225 270 1941 (Both store 3-D data in a compressed format which vis5d can use quickly and efficiently.  Comp5d) 1941 SB
225 320 1922 (files are those which were produced by the comp5d program in previous versions of Vis5D.  The) 1922 SB
225 370 1907 (v5d file format is the new, and prefered, file format used in version 4.0 and later of  Vis5D.  It is) 1907 SB
225 420 1943 (intended to be a replacement for the comp5d format because it more flexible and may be extended) 1943 SB
225 470 255 (in the future.) 255 SB
375 570 1712 (To view your data with vis5d you will typically write a conversion program to convert) 1712 SB
225 620 1773 (your data files to v5d format.  To help you do this we've included four sample conversion) 1773 SB
225 670 1813 (programs to guide you.  Basically, you just add the instructions to read your file format, we) 1813 SB
225 720 1358 (provide the instructions to write the v5d file.  See section 3.1 below.) 1358 SB
375 820 1731 (If you have used Vis5D in the past, you may continue to convert your data to McIDAS) 1731 SB
225 870 1897 (format and use comp5d to make a compressed file.  However, to take full advantage of the new) 1897 SB
225 920 1924 (map projections and vertical coordinate system in version 4.0 and higher, you should write a new) 1924 SB
225 970 764 (conversion program to make v5d files.) 764 SB
375 1070 1746 (Another option for getting your data into Vis5D is the v5dimport utility.  v5dimport is a) 1746 SB
225 1120 1889 (new program for file conversion, combining, and resampling.  It reads a number of different file) 1889 SB
225 1170 1620 (formats and can be extended to read new formats.  See section 7 for more details.) 1620 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1319 874 (3.1 Converting Your Data to v5d Format) 874 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1420 1724 (Files in the v5d format are created with functions from the v5d library.  We've included) 1724 SB
225 1470 1904 (four sample conversion programs which outline how to make a v5d file.  They are located in the) 1904 SB
225 1520 1892 (convert/ subdirectory.  You can choose which one to use as a template for your data converter:) 1892 SB
375 1620 260 (foo_to_v5d.f) 260 SB
825 1620 1191 (A Fortran program which assumes a rectangular lat/lon map) 1191 SB
825 1670 1092 (projection and equally spaced linear vertical coordinate) 1092 SB
825 1720 148 (system.) 148 SB
375 1820 285 (foo2_to_v5d.f) 285 SB
825 1820 1126 (A Fortran program which allows any map projection and) 1126 SB
825 1870 1152 (vertical coordinate system as well as a different number of) 1152 SB
825 1920 625 (vertical levels for each variable.) 625 SB
375 2020 267 (foo_to_v5d.c) 267 SB
825 2020 1076 (A C program which assumes a rectangular lat/lon map) 1076 SB
825 2070 1092 (projection and equally spaced linear vertical coordinate) 1092 SB
825 2120 148 (system.) 148 SB
375 2220 292 (foo2_to_v5d.c) 292 SB
825 2220 1170 (A C program which allows any map projection and vertical) 1170 SB
825 2270 1152 (coordinate system as well as a different number of vertical) 1152 SB
825 2320 466 (levels for each variable.) 466 SB
375 2470 1790 (In any case, each conversion program uses three functions to write the v5d file: v5dCreate) 1790 SB
225 2520 1834 (\(or v5dCreateSimple\), v5dWrite, and v5dClose.  v5dCreateSimple is used to create v5d files) 1834 SB
225 2570 1890 (which only specify the most basic parameters.  v5dCreate allows more complicated parameters.) 1890 SB
225 2620 1306 (There are versions of these functions for C and Fortran programs.) 1306 SB
375 2720 1704 (Here are the descriptions of the v5dCreate and v5dCreateSimple functions in a format) 1704 SB
225 2770 1701 (similar to man page documentation.  C programmers should note that in the argument) 1701 SB
225 2820 1825 (descriptions we describe arrays by FORTRAN convention, i.e. A\(1\) is the first element of A) 1825 SB
225 2870 656 (whereas in C this would be A[0].) 656 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1189 3027 21 (7) 21 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 320 522 (Fortran-callable functions:) 522 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 376 1470 (integer function v5dcreatesimple\( name, numtimes,) 1470 SB
1125 426 840 (numvars,nr, nc, nl, varname,) 840 SB
1125 476 930 (timestamp, datestamp, northlat,) 930 SB
1125 526 1050 (latinc, westlon, loninc, bottomhgt,) 1050 SB
1125 576 240 (hgtinc \)) 240 SB
375 626 570 (character* \(*\) name) 570 SB
375 676 480 (integer numtimes) 480 SB
375 726 450 (integer numvars) 450 SB
375 776 300 (integer nr) 300 SB
375 826 300 (integer nc) 300 SB
375 876 300 (integer nl) 300 SB
375 926 870 (character*10 varname\(MAXVARS\)) 870 SB
375 976 600 (integer timestamp\(*\)) 600 SB
375 1026 600 (integer datestamp\(*\)) 600 SB
375 1076 390 (real northlat) 390 SB
375 1126 330 (real latinc) 330 SB
375 1176 360 (real westlon) 360 SB
375 1226 330 (real loninc) 330 SB
375 1276 420 (real bottomhgt) 420 SB
375 1326 330 (real hgtinc) 330 SB
375 1426 1800 (integer function v5dcreate\( name, numtimes, numvars, nr, nc,) 1800 SB
1125 1476 1020 (nl, varname, timestamp, datestamp,) 1020 SB
1125 1526 960 (compress, projection, proj_args,) 960 SB
1125 1576 630 (vertical, vert_args \)) 630 SB
375 1626 570 (character* \(*\) name) 570 SB
375 1676 750 (integer numtimes, numvars) 750 SB
375 1726 300 (integer nr) 300 SB
375 1776 300 (integer nc) 300 SB
375 1826 390 (integer nl\(*\)) 390 SB
375 1876 870 (character*10 varname\(MAXVARS\)) 870 SB
375 1926 600 (integer timestamp\(*\)) 600 SB
375 1976 600 (integer datestamp\(*\)) 600 SB
375 2026 480 (integer compress) 480 SB
375 2076 540 (integer projection) 540 SB
375 2126 510 (real proj_args\(*\)) 510 SB
375 2176 480 (integer vertical) 480 SB
375 2226 510 (real vert_args\(*\)) 510 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2420 407 (C-callable functions:) 407 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2476 1710 (int v5dCreateSimple\( name, numtimes, numvars, nr, nc, nl,) 1710 SB
1125 2526 900 (varname, timestamp, datestamp,) 900 SB
1125 2576 1020 (northlat, latinc, westlon, loninc,) 1020 SB
1125 2626 570 (bottomhgt, hgtinc \)) 570 SB
375 2676 330 (char *name;) 330 SB
375 2726 390 (int numtimes;) 390 SB
375 2776 360 (int numvars;) 360 SB
375 2826 450 (int nr, nc, nl;) 450 SB
375 2876 780 (char varname[MAXVARS][10];) 780 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1189 3027 21 (8) 21 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
0 0 0 fC
375 226 870 (int timestamp[], datestamp[];) 870 SB
375 276 690 (float northlat, latinc;) 690 SB
375 326 660 (float westlon, loninc;) 660 SB
375 376 720 (float bottomhgt, hgtinc;) 720 SB
375 476 1800 (int v5dCreate\( name, numtimes, numvars, nr, nc, nl, varname,) 1800 SB
1125 526 930 (timestamp, datestamp, compress,) 930 SB
1125 576 960 (projection, proj_args, vertical,) 960 SB
1125 626 330 (vert_args \)) 330 SB
375 676 330 (char *name;) 330 SB
375 726 660 (int numtimes, numvars;) 660 SB
375 776 510 (int nr, nc, nl[];) 510 SB
375 826 780 (char varname[MAXVARS][10];) 780 SB
375 876 870 (int timestamp[], datestamp[];) 870 SB
375 926 390 (int compress;) 390 SB
375 976 450 (int projection;) 450 SB
375 1026 540 (float proj_args[];) 540 SB
375 1076 390 (int vertical;) 390 SB
375 1126 540 (float vert_args[];) 540 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1220 614 (Arguments used by v5dCreate ) 614 SB
32 0 0 50 50 1 0 0 45 /Times-Roman /font32 ANSIFont font
839 1220 71 (and) 71 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
910 1220 368 ( v5dCreateSimple:) 368 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1276 120 (name) 120 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 1270 671 (The name of the v5d file to create) 671 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1326 240 (numtimes) 240 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 1320 639 (Number of timesteps \(at least 1\)) 639 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1376 210 (numvars) 210 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 1370 627 (Number of variables \(at least 1\)) 627 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1426 60 (nr) 60 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 1420 861 (Number of rows in all 3-D grids \(at least 2\)) 861 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1476 60 (nc) 60 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 1470 928 (Number of columns in all 3-D grids \(at least 2\)) 928 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1526 210 (varname) 210 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 1520 487 (Array of variable names:) 487 SB
900 1570 699 (varname\(1\) = name of first variable) 699 SB
900 1620 759 (varname\(2\) = name of second variable) 759 SB
900 1670 39 (...) 39 SB
900 1720 832 (varname\(numvars\) = name of last variable) 832 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1776 270 (timestamp) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 1770 1172 (Array of time labels for the timesteps in HHMMSS format:) 1172 SB
900 1820 728 (timestamp\(1\) = time of first timestep) 728 SB
900 1870 788 (timestamp\(2\) = time of second timestep) 788 SB
900 1920 39 (...) 39 SB
900 1970 884 (timestamp\(numtimes\) = time of last timestep) 884 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2026 270 (datestamp) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 2020 1120 (Array of date labels for the timesteps in YYDDD format) 1120 SB
900 2070 724 (datestamp\(1\) = date of first timestep) 724 SB
900 2120 784 (datestamp\(2\) = date of second timestep) 784 SB
900 2170 39 (...) 39 SB
900 2220 880 (datestamp\(numtimes\) = date of last timestep) 880 SB
225 2370 336 (Arguments used ) 336 SB
32 0 0 50 50 1 0 0 45 /Times-Roman /font32 ANSIFont font
561 2370 85 (only) 85 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
646 2370 428 ( by v5dCreateSimple:) 428 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2426 60 (nl) 60 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 2420 874 (Number of levels in all 3-D grids \(at least 1\)) 874 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2476 240 (northlat) 240 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 2470 864 (Latitude of northern edge of box in degrees) 864 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2526 180 (latinc) 180 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 2520 918 (Increment between rows in degrees  \(positive\)) 918 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2576 210 (westlon) 210 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 2570 1404 (Longitude of western edge of box in degrees \(positive West longitude\)) 1404 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2626 180 (loninc) 180 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 2620 985 (Increment between columns in degrees  \(positive\)) 985 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2676 270 (bottomhgt) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 2670 616 (Bottom boundary of box in km) 616 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2726 180 (hgtinc) 180 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 2720 828 (Increment between levels in km \(positive\)) 828 SB
225 2820 336 (Arguments used ) 336 SB
32 0 0 50 50 1 0 0 45 /Times-Roman /font32 ANSIFont font
561 2820 85 (only) 85 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
646 2820 292 ( by v5dCreate:) 292 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2876 60 (nl) 60 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 2870 923 (Number of levels in the 3-D grids per variable:) 923 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1189 3027 21 (9) 21 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
900 220 806 (nl\(1\) = number of levels for first variable) 806 SB
900 270 866 (nl\(2\) = number of levels for second variable) 866 SB
900 320 145 (...  = ...) 145 SB
900 370 939 (nl\(numvars\) = number of levels for last variable) 939 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 426 240 (compress) 240 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 420 1000 (Compression mode \(1, 2 or 4 bytes per grid point\)) 1000 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 476 300 (projection) 300 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 470 655 (Indicates type of map projection:) 655 SB
900 520 715 (0 = linear, rectangular, generic units) 715 SB
900 570 899 (1 = linear, rectangular, cylindrical-equidistant) 899 SB
900 620 471 (2 = Lambert Conformal) 471 SB
900 670 356 (3 = Stereographic) 356 SB
900 720 237 (4 = Rotated) 237 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 776 270 (proj_args) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 770 437 (Projection arguments:) 437 SB
900 820 392 (if projection=0 then) 392 SB
975 870 850 (proj_args\(1\) = North boundary of 3-D box) 850 SB
975 920 834 (proj_args\(2\) = West boundary of 3-D box) 834 SB
975 970 790 (proj_args\(3\) = Increment between rows) 790 SB
900 1020 935 (      proj_args\(4\) = Increment between columns) 935 SB
900 1070 480 (else if projection=1 then) 480 SB
975 1120 827 (proj_args\(1\) = North Latitude bound of 3) 827 SB
1802 1120 140 (-D box) 140 SB
975 1170 849 (proj_args\(2\) = West Longitude bound of 3) 849 SB
1824 1170 140 (-D box) 140 SB
975 1220 1004 (proj_args\(3\) = Increment between rows in degrees) 1004 SB
975 1270 985 (proj_args\(4\) = Increment between cols in degrees) 985 SB
900 1320 493 ( else if projection=2 then) 493 SB
975 1370 696 (proj_args\(1\) = Standard Latitude 1) 696 SB
975 1420 696 (proj_args\(2\) = Standard Latitude 2) 696 SB
975 1470 811 (proj_args\(3\) = Row of North/South pole) 811 SB
975 1520 873 (proj_args\(4\) = Column of North/South pole) 873 SB
975 1570 894 (proj_args\(5\) = Longitude parallel to columns) 894 SB
975 1620 981 (proj_args\(6\) = Increment between columns in km) 981 SB
900 1670 480 (else if projection=3 then) 480 SB
975 1720 855 (proj_args\(1\) = Latitude of center \(degrees\)) 855 SB
975 1770 893 (proj_args\(2\) = Longitude of center \(degrees\)) 893 SB
975 1820 853 (proj_args\(3\) = Row of center of projection) 853 SB
975 1870 915 (proj_args\(4\) = Column of center of projection) 915 SB
975 1920 1000 (proj_args\(5\) = Spacing between columns at center) 1000 SB
900 1970 480 (else if projection=4 then) 480 SB
975 2020 978 (proj_args\(1\) = North boundary on rotated sphere) 978 SB
975 2070 962 (proj_args\(2\) = West boundary on rotated sphere) 962 SB
975 2120 790 (proj_args\(3\) = Increment between rows) 790 SB
900 2170 935 (      proj_args\(4\) = Increment between columns) 935 SB
975 2220 1050 (proj_args\(5\) = Earth Latitude corresponding to \(0,0\)) 1050 SB
975 2270 1088 (proj_args\(6\) = Earth Longitude corresponding to \(0,0\)) 1088 SB
975 2320 592 (proj_args\(7\) = Rotation angle) 592 SB
900 2370 98 (endif) 98 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2426 240 (vertical) 240 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 2420 875 (Indicates type of vertical coordinate system:) 875 SB
900 2470 806 (0 = equally spaced levels in generic units) 806 SB
900 2520 616 (1 = equally spaced levels in km) 616 SB
900 2570 665 (2 = unequally spaced levels in km) 665 SB
900 2620 664 (3 = unequally spaced levels in mb) 664 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2676 270 (vert_args) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 2670 763 (Vertical coordinate system arguments:) 763 SB
900 2720 337 (if vertical=0 then) 337 SB
975 2770 736 (vert_args\(1\) = height of bottom level) 736 SB
975 2820 750 (vert_args\(2\) = spacing between levels) 750 SB
900 2870 425 (else if vertical=1 then) 425 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (10) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
975 220 860 (vert_args\(1\) = height of bottom level in km) 860 SB
975 270 874 (vert_args\(2\) = spacing between levels in km) 874 SB
900 320 425 (else if vertical=2 then) 425 SB
975 370 1009 (vert_args\(1\) = height \(km\) of grid level 1 \(bottom\)) 1009 SB
975 420 819 (vert_args\(2\) = height \(km\) of grid level 2) 819 SB
975 470 39 (...) 39 SB
975 520 1181 (vert_args\(N\) = height \(km\) of grid level N \(top\) where N is) 1181 SB
1200 570 685 (the maximum value in the nl array.) 685 SB
900 620 425 (else if vertical=3 then) 425 SB
975 670 1052 (vert_args\(1\) = pressure \(mb\) of grid level 1 \(bottom\)) 1052 SB
975 720 862 (vert_args\(2\) = pressure \(mb\) of grid level 2) 862 SB
975 770 39 (...) 39 SB
975 820 1180 (vert_args\(N\) = pressure \(mb\) of grid level N \(top\) where N) 1180 SB
1200 870 729 (is the maximum value in the nl array.) 729 SB
900 920 98 (endif) 98 SB
225 1070 1767 (The v5dWrite function is used to write a single 3-D grid of data to a v5d file.  The grid is) 1767 SB
225 1120 1746 (identified by a timestep and physical variable number.  Here is the synopsis of v5dWrite:) 1746 SB
225 1220 503 (Fortran-callable function:) 503 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1276 1320 (integer function v5dwrite\( time, var, data \)) 1320 SB
375 1326 360 (integer time) 360 SB
375 1376 330 (integer var) 330 SB
375 1426 360 (real data\(*\)) 360 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1520 388 (C-callable function:) 388 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1576 930 (int v5dWrite\( time, var, data \)) 930 SB
375 1626 270 (int time;) 270 SB
375 1676 240 (int var;) 240 SB
375 1726 390 (float data[];) 390 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1820 484 (Arguments descriptions:) 484 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1876 120 (time) 120 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
675 1870 912 (A timestep number in the range [1..numtimes]) 912 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1926 90 (var) 90 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
675 1920 877 (A variable number in the range [1..numvars]) 877 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1976 120 (data) 120 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
675 1970 1386 (3-D array of grid values; number of values = nr*nc*nl\(var\) ordered as) 1386 SB
675 2020 1470 (data[row+nr*\(col+nc*lev\)] where row increases from North to South, col) 1470 SB
675 2070 1313 (increases from West to East, and lev increases from bottom to top) 1313 SB
225 2220 1902 (The v5dClose function closes the v5d file after the last grid has been written.  No arguments are) 1902 SB
225 2270 815 (needed.  Here is the synpsis of v5dClose:) 815 SB
225 2370 503 (Fortran-callable function:) 503 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2426 750 (integer function v5dclose) 750 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2520 388 (C-callable function:) 388 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2576 420 (int v5dClose\(\)) 420 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2720 1646 (Each of the create functions returns 1 when successful and 0 when an error occurs.) 1646 SB
375 2820 1616 (Looking at any of the example data conversion programs, you'll see that there are) 1616 SB
225 2870 1908 (variables which directly correspond to the arguments to v5dCreate/v5dCreateSimple.  It is up to) 1908 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (11) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 220 1386 (you to initialize these variables.  For example, you'll have to assign to ) 1386 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1611 226 270 (numtimes ) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1881 220 277 (the number of) 277 SB
225 270 706 (timesteps in your dataset, assign to ) 706 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
931 276 210 (numvars) 210 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1141 270 1011 ( the number of variables in your dataset, etc.  After) 1011 SB
225 320 1901 (you've initialized all these variables, the v5dCreate \(or v5dCreateSimple\) call will create the v5d) 1901 SB
225 370 1875 (file.  If you've failed to initialize any of the variables you will see an appropriate error message.) 1875 SB
375 470 1774 (Next, the conversion program will enter a nested loop inside of which you must insert the) 1774 SB
225 520 1859 (code to read your data for the appropriate time step and physical variable number.  Read your) 1859 SB
225 570 1913 (data into the array specified.  The v5dWrite call will then compress and write the data to the v5d) 1913 SB
225 620 1650 (file.  Finally, the v5dClose function will be called after all the data has been written.) 1650 SB
375 720 1768 (After you've written and compiled your file converter, you should test it with one of your) 1768 SB
225 770 1884 (data files then check that it worked by running the v5dinfo and v5dstats utility programs on the) 1884 SB
225 820 1021 (v5d file.  If everything looks OK, try running vis5d.) 1021 SB
375 920 1727 (Here is an example of typical values that might be assigned to each variable if one were) 1727 SB
225 970 648 (using the foo_to_v5d.f program:) 648 SB
32 0 0 50 50 1 0 0 45 /Times-Roman /font32 ANSIFont font
375 1070 232 (Assignment) 232 SB
32 0 0 50 50 1 0 0 45 /Times-Roman /font32 ANSIFont font
607 1070 377 (                             ) 377 SB
975 1070 213 (Comments) 213 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1120 270 (numtimes = 5) 270 SB
975 1120 237 (5 time steps) 237 SB
375 1170 247 (numvars = 4) 247 SB
975 1170 384 (4 physical variables) 384 SB
375 1220 145 (nr = 30) 145 SB
975 1220 496 (30 rows in each 3-D grid) 496 SB
375 1270 150 (nc = 40) 150 SB
975 1270 563 (40 columns in each 3-D grid) 563 SB
375 1320 140 (nl = 20) 140 SB
975 1320 509 (20 levels in each 3-D grid) 509 SB
375 1370 357 (varname\(1\) = "U") 357 SB
975 1370 611 (U \(east/west\) wind component) 611 SB
375 1420 357 (varname\(2\) = "V") 357 SB
975 1420 656 (V \(north/south\) wind component) 656 SB
375 1470 352 (varname\(3\) = "T") 352 SB
975 1470 255 (Temperature) 255 SB
375 1520 349 (varname\(4\) = "P") 349 SB
975 1520 169 (Pressure) 169 SB
375 1570 467 (timestamp\(1\) = 140000) 467 SB
975 1570 228 (2:00:00 pm) 228 SB
375 1620 467 (timestamp\(2\) = 141500) 467 SB
975 1620 228 (2:15:00 pm) 228 SB
375 1670 467 (timestamp\(3\) = 143000) 467 SB
975 1670 228 (2:30:00 pm) 228 SB
375 1720 467 (timestamp\(4\) = 144500) 467 SB
975 1720 228 (2:45:00 pm) 228 SB
375 1770 467 (timestamp\(5\) = 150000) 467 SB
975 1770 228 (3:00:00 pm) 228 SB
375 1820 440 (datestamp\(1\) = 94036) 440 SB
975 1820 601 (36th day of 1994 \(February 5\)) 601 SB
375 1870 440 (datestamp\(2\) = 94036) 440 SB
975 1870 20 (") 20 SB
375 1920 440 (datestamp\(3\) = 94036) 440 SB
975 1920 20 (") 20 SB
375 1970 440 (datestamp\(4\) = 94036) 440 SB
975 1970 20 (") 20 SB
375 2020 440 (datestamp\(5\) = 94036) 440 SB
975 2020 20 (") 20 SB
375 2070 297 (northlat = 60.0) 297 SB
975 2070 1004 (Northern boundary of box is at 30 degrees latitude) 1004 SB
375 2120 224 (latinc = 1.0) 224 SB
975 2120 1142 (There is 1 degree of latitude between each of the 30 rows) 1142 SB
375 2170 321 (westlon = 100.0) 321 SB
975 2170 1142 (Western boundary of 3-D box is at 100 degrees longitude) 1142 SB
375 2220 237 (loninc = 0.5) 237 SB
975 2220 1112 (0.5 degree of longitude between each of the 40 columns) 1112 SB
375 2270 324 (bottomhgt = 0.0) 324 SB
975 2270 702 (Bottom of box is at 0km \(sea level\)) 702 SB
375 2320 239 (hgtinc = 1.0) 239 SB
975 2320 1114 (1 km between each of the 20 grid levels \(top at 19.0km\)) 1114 SB
375 2470 1745 (The product of the number of rows, columns, levels, timesteps, and variables is the total) 1745 SB
225 2520 1886 (number of data points.  In this example:  30*40*20*5*4 = 480,000.  A real dataset may be 100) 1886 SB
225 2570 1925 (rows by 100 columns by 20 levels, have 50 timesteps, and 10 variables for a total of 100,000,000) 1925 SB
225 2620 231 (data points.) 231 SB
375 2720 1753 (The difference between the foo_to_v5d program \(which uses v5dCreateSimple\), and the) 1753 SB
225 2770 1763 (foo2_to_v5d program \(which uses v5dCreate\), is the later allows you to specify any map) 1763 SB
225 2820 1932 (projection, vertical coordinate system, a different number of grid levels for each physical variable,) 1932 SB
225 2870 1756 (and to control data compression.  To specify a map projection, you must set the value of) 1756 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (12) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
0 0 0 fC
225 226 300 (projection) 300 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 220 1599 ( to 0,1,2 or 3 to indicate which projection, then specify the projection-dependent) 1599 SB
225 270 354 (parameters in the ) 354 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
579 276 270 (proj_args) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
849 270 1137 ( arrray.  Specifying the vertical coordinate system is done) 1137 SB
225 320 179 (similarly.) 179 SB
375 420 1732 (It is sometimes useful to specify a different number of grid levels for each variable.  For) 1732 SB
225 470 1928 (example, suppose most of your variables have 30 grid levels but a some variables have fewer grid) 1928 SB
225 520 1875 (levels, perhaps only one.  Prior to version 4.0 of Vis5D, you would have had to fill in the extra) 1875 SB
225 570 1270 (levels with redundant, missing or dummy data values.  With the ) 1270 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1495 576 270 (v5dCreate) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1765 570 344 ( function you can) 344 SB
225 620 1710 (specify how many grid levels are present for each individual physical variable with the ) 1710 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1935 626 60 (nl) 60 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1995 620 114 ( array) 114 SB
225 670 1187 (parameter.  Be aware that the amount of data passed to the ) 1187 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1412 676 240 (v5dWrite) 240 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1652 670 516 ( call will depend on which) 516 SB
225 720 1909 (variable you're writing.  For example, if your grid has C columns and R rows then the number of) 1909 SB
225 770 670 (values in the data array passed to ) 670 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
895 776 240 (v5dWrite) 240 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1135 770 764 ( for variable V must equal C*R*nl\(V\).) 764 SB
375 870 1734 (By default, the bottom-most grid level of each variable is displayed at the bottom of the) 1734 SB
225 920 25 (3) 25 SB
250 920 1884 (-D box; each grid extends upward for how ever many levels are present.  Sometimes, however,) 1884 SB
225 970 1938 (the bottom-most grid level of a particular variable should be positioned higher up.  An example of) 1938 SB
225 1020 1916 (this is a combined ocean/atmosphere dataset.  There may be a total of 18 grid levels:  the bottom) 1916 SB
225 1070 1922 (8 grid levels being ocean data and the top 10 grid levels being atmospheric data.  In this case, the) 1922 SB
225 1120 1641 (bottom of the atmospheric data should be offset or shifted upward by 8 grid levels.) 1641 SB
375 1220 1776 (Elaborating on the ocean/atmosphere example, suppose we have 2 ocean variables named) 1776 SB
225 1270 1729 (S \(salinity\) and T \(temperature\) and 2 atmosphere variables named P \(pressure\) and T1) 1729 SB
225 1320 1843 (\(temperature\).  There are 8 layers of ocean data and 10 layers of atmospheric data.  Here is a) 1843 SB
225 1370 545 (summary showing how the ) 545 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
770 1376 180 (lowlev) 180 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
950 1370 738 ( array is the solution to this situation:) 738 SB
32 0 0 50 50 1 0 0 45 /Times-Roman /font32 ANSIFont font
375 1670 149 (varnum) 149 SB
32 0 0 50 50 1 0 0 45 /Times-Roman /font32 ANSIFont font
524 1670 78 (      ) 78 SB
600 1670 351 (varname\(varnum\)) 351 SB
951 1670 26 (  ) 26 SB
975 1670 219 (nl\(varnum\)) 219 SB
1194 1670 91 (       ) 91 SB
1275 1670 315 (lowlev\(varnum\)) 315 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
450 1720 25 (1) 25 SB
713 1720 28 (S) 28 SB
1050 1720 25 (8) 25 SB
1388 1720 25 (0) 25 SB
450 1770 25 (2) 25 SB
713 1770 31 (T) 31 SB
1050 1770 25 (8) 25 SB
1388 1770 25 (0) 25 SB
450 1820 25 (3) 25 SB
713 1820 28 (P) 28 SB
1050 1820 50 (10) 50 SB
1388 1820 25 (8) 25 SB
450 1870 25 (4) 25 SB
713 1870 56 (T1) 56 SB
1050 1870 50 (10) 50 SB
1388 1870 25 (8) 25 SB
225 2020 90 (The ) 90 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
315 2026 180 (lowlev) 180 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
495 2020 559 ( array is not specified in the ) 559 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1054 2026 270 (v5dCreate) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1324 2020 795 ( function because it was developed after) 795 SB
225 2070 74 (the ) 74 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
299 2076 270 (v5dCreate) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
569 2070 968 ( function was well established.  Instead, the new ) 968 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1537 2076 360 (v5dSetLowLev) 360 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1897 2070 220 ( function is) 220 SB
225 2120 302 (called with the ) 302 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
527 2126 180 (lowlev) 180 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
707 2120 1401 ( array.  This separate function was added to extend the functionality of) 1401 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
225 2176 270 (v5dCreate) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
495 2170 1574 ( without changing its calling sequence.  Here is the synopsis of v5dSetLowLev:) 1574 SB
225 2270 503 (Fortran-callable function:) 503 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2326 1170 (integer function v5dsetlowlev\( lowlev \)) 1170 SB
375 2376 510 (integer lowlev\(*\)) 510 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2470 388 (C-callable function:) 388 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2526 780 (int v5dSetLowLev\( lowlev \)) 780 SB
375 2576 390 (int lowlev[];) 390 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2670 446 (Argument description:) 446 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2726 180 (lowlev) 180 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
750 2720 1181 (Specifies the vertical offset, in grid levels, for each variable.) 1181 SB
900 2770 687 (lowlev\(1\) = offset for first variable) 687 SB
900 2820 747 (lowlev\(2\) = offset for second variable) 747 SB
900 2870 145 (...  = ...) 145 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (13) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
900 220 820 (lowlev\(numvars\) = offset for last variable) 820 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
225 326 360 (v5dSetLowLev) 360 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
585 320 720 ( may be called at any point between ) 720 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1305 326 270 (v5dCreate) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1575 320 97 ( and ) 97 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1672 326 240 (v5dClose) 240 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1912 320 13 (.) 13 SB
375 470 1634 (The v5dCreate and v5dcreate functions allow you to control how the grid data are) 1634 SB
225 520 1914 (compressed.  The default is for grid values to be linearly scaled to one byte integers.  This works) 1914 SB
225 570 1730 (very well for most data sets, since the scaling factors are chosen independently for each) 1730 SB
225 620 1893 (combination of time step, variable and vertical level.  Furthermore, the compression to one byte) 1893 SB
225 670 1892 (per grid point enables Vis5D's high degree of interactivity, since compression allows entire data) 1892 SB
225 720 903 (sets to be resident in memory.  However, the ) 903 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1128 726 240 (compress) 240 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1368 720 341 ( argument of the ) 341 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1709 726 270 (v5dCreate) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1979 720 84 ( and) 84 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
225 776 270 (v5dcreate) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
495 770 1561 ( functions lets you pick whether grid point values are scaled to 1-byte integers,) 1561 SB
225 820 1950 (scaled to 2-byte integers, or left as 4-byte floating point values \(no compression\).  We recommend) 1950 SB
225 870 1892 (that you try compression to 1-byte integers first, and only use 2 or 4 bytes if you have precision) 1892 SB
225 920 270 (problems at 1) 270 SB
495 920 114 (-byte.) 114 SB
375 1020 1704 (Vis5D version 4.2 and later allow you to specify the physical units for each variable in) 1704 SB
225 1070 1872 (your dataset.  The v5dSetUnits\(\) function takes two arguments:  a variable number and a units) 1872 SB
225 1120 1810 (character string.  If the first variable in your file is P and the units are millibars then you can) 1810 SB
225 1170 341 (specify that with:) 341 SB
375 1270 636 (C:  v5dSetUnits\( 1, "millibars" \)) 636 SB
375 1320 799 (Fortran: call v5dsetunits\( 1, "millibars" \)) 799 SB
225 1420 1732 (The units will be displayed by the v5dinfo program and in Vis5D when using the probe.) 1732 SB
375 1520 754 (To compile your program which uses ) 754 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1129 1526 270 (v5dCreate) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1399 1520 26 (, ) 26 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1425 1526 240 (v5dWrite) 240 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1665 1520 110 (, and ) 110 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1775 1526 240 (v5dClose) 240 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
2015 1520 87 ( you) 87 SB
225 1570 369 (must link with the ) 369 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
594 1576 270 (src/v5d.o) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
864 1570 97 ( and ) 97 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
961 1576 330 (src/binio.o) 330 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1291 1570 613 ( files.  See the makefiles in the ) 613 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1904 1576 240 (convert/) 240 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1620 459 (directory for examples.) 459 SB
375 1720 1723 (Finally, if your data is generated by an atmospheric or oceanic model, you may want to) 1723 SB
225 1770 1914 (consider modifying your model to generate v5d files directly using the v5dCreate, v5dWrite, and) 1914 SB
225 1820 1525 (v5dClose functions.  Look at the sample data conversion programs for ideas.) 1525 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1969 1145 (3.2 Map Projections and Vertical Coordinate Systems) 1145 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2070 1687 (Version 4.0 of Vis5D added support for new map projections and vertical coordinate) 1687 SB
225 2120 1886 (systems.  When we use the term map projection, we're referring to the relationship between the) 1886 SB
225 2170 1926 (rows and columns of data in the 3-D grid to the latitude/longitude of the earth.  The term vertical) 1926 SB
225 2220 1702 (coordinate system refers to the relationship between the vertical levels of data in the 3) 1702 SB
1927 2220 199 (-D grid to) 199 SB
225 2270 992 (altitude in the atmosphere \(or depth in the ocean\).) 992 SB
225 2370 1007 (Vis5D 5.0 supports the following map projections:) 1007 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2469 472 (\(0\) Generic rectilinear) 472 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
697 2470 1478 (:  this is a linear, regularly-spaced coordinate system with no implied units.) 1478 SB
375 2520 1737 (This system is useful when your data is not related to earth science \(computational fluid) 1737 SB
375 2570 1589 (dynamics for example.\)  North/south coordinates increase upward and east/west) 1589 SB
375 2620 1541 (coordinates increase to the left.  The projection is defined by four parameters:) 1541 SB
375 2720 251 (NorthBound) 251 SB
750 2720 612 (Northern boundary of 3-D box) 612 SB
375 2770 235 (WestBound) 235 SB
750 2770 596 (Western boundary of 3-D box) 596 SB
375 2820 158 (RowInc) 158 SB
750 2820 844 (Increment \(spacing\) between grid columns) 844 SB
375 2870 134 (ColInc) 134 SB
750 2870 777 (Increment \(spacing\) between grid rows) 777 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (14) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 270 525 (Example:  Suppose your 3) 525 SB
900 270 1237 (-D grid has 80 rows and 60 columns and NorthBound = 100.0) 1237 SB
525 320 1645 (meters, WestBound = 50.0 meters, RowInc = 0.5 meters, and ColInc = 0.5 meters,) 1645 SB
525 370 99 (then:) 99 SB
525 470 1502 (the south boundary will be at 60.5 meters.  i.e. southbound = NorthBound -) 1502 SB
675 520 417 (\(RowInc * \(rows-1\)\)) 417 SB
525 570 1508 (and the east boundary will be at 20.5 meters.  i.e. eastbound = WestBound -) 1508 SB
675 620 460 (\(ColInc * \(columns-1\)\)) 460 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 819 979 (\(1\) Rectilinear lat/lon \(cylindrical equidistant\)) 979 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1204 820 825 (:  this is the rectangular latitude/longitude) 825 SB
375 870 1722 (coordinate system used in previous versions of Vis5D.  Latitude increases to the North) 1722 SB
375 920 1687 (\(upward in the graphical display\) and longitude increases to the West \(leftward in the) 1687 SB
375 970 1729 (graphical display; positive west latitude\).  The projection is defined by four parameters:) 1729 SB
375 1070 251 (NorthBound) 251 SB
750 1070 1287 (Northern boundary of 3-D box in degrees of latitude in the range) 1287 SB
750 1120 17 ([) 17 SB
767 1120 224 (-90S,90N].) 224 SB
375 1170 235 (WestBound) 235 SB
750 1170 1309 (Western boundary of 3-D box in degrees of longitude in the range) 1309 SB
750 1220 17 ([) 17 SB
767 1220 287 (-180E,180W].) 287 SB
375 1270 158 (RowInc) 158 SB
750 1270 1359 (Increment \(spacing\) between grid rows in degrees of latitude greater) 1359 SB
750 1320 198 (than zero.) 198 SB
375 1370 134 (ColInc) 134 SB
750 1370 1311 (Increment \(spacing\) between grid columns in degrees of longitude) 1311 SB
750 1420 351 (greater than zero.) 351 SB
375 1520 1652 (Example:  If your 3-D grid has 30 rows and 60 columns and if NorthBound = 70.0,) 1652 SB
525 1570 1189 (WestBound = 140.0, RowInc = 1.0, and ColInc = 0.5, then:) 1189 SB
525 1670 1584 (the south boundary will be at 41 degrees latitude.  i.e. \(NorthBound - RowInc *) 1584 SB
675 1720 191 (\(rows-1\)\)) 191 SB
525 1770 1647 (and the east boundary will be at 110.5 degrees longitude. i.e. \(WestBound - ColInc) 1647 SB
675 1820 296 (* \(columns-1\)\)) 296 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1969 488 (\(2\) Lambert conformal) 488 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
713 1970 1201 (:  a conic projection defined by the following six parameters:) 1201 SB
375 2070 210 (Lat1, Lat2) 210 SB
825 2070 963 (First and second standard latitudes in the range [) 963 SB
1788 2070 342 (-90S,90N].  Lat1) 342 SB
825 2120 1301 (and Lat2 define where the imaginary cone intersects the sphere of) 1301 SB
825 2170 1253 (the Earth.  Lat1 and Lat2 must have the same sign, that is, they) 1253 SB
825 2220 1332 (must both be positive or both negative.  Also, Lat1 must be greater) 1332 SB
825 2270 432 (than or equal to Lat2.) 432 SB
375 2320 368 (PoleRow, PoleCol) 368 SB
825 2320 1285 (These parameters indicate the position of the north or south pole) 1285 SB
825 2370 408 (with respect to the 3) 408 SB
1233 2370 906 (-D grid coordinate system.  These values may) 906 SB
825 2420 1273 (be outside the 3-D grid.  If Lat1 and Lat2 are positive, the north) 1273 SB
825 2470 958 (pole is assumed, else, the south pole is assumed.) 958 SB
375 2520 174 (CentLon) 174 SB
825 2520 1348 (Central longitude:  this parameter indicates which Earth longitude is) 1348 SB
825 2570 759 (to be parallel to the 3-D grid columns.) 759 SB
375 2620 134 (ColInc) 134 SB
825 2620 1314 (Increment \(spacing\) between grid columns at the central longitude) 1314 SB
825 2670 1319 (and standard latitudes, in km.  This parameter controls the scale of) 1319 SB
825 2720 288 (the projection.) 288 SB
375 2820 1781 (Example 1:  Suppose your 3-D grid has 35 rows and 40 columns and you want a Lambert) 1781 SB
375 2870 1339 (conformal projection of the United States centered over Wisconsin:) 1339 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (15) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
525 220 234 (Lat1 = 70.0) 234 SB
525 270 234 (Lat2 = 20.0) 234 SB
525 320 342 (PoleRow = -35.0) 342 SB
525 370 301 (PoleCol = 20.0) 301 SB
525 420 504 (Central Longitude = 90.0) 504 SB
525 470 301 (ColInc = 100.0) 301 SB
375 570 1781 (Example 2:  Suppose your 3-D grid has 35 rows and 40 columns and you want a Lambert) 1781 SB
375 620 723 (conformal projection over Australia:) 723 SB
525 670 251 (Lat1 = -20.0) 251 SB
525 720 251 (Lat2 = -70.0) 251 SB
525 770 325 (PoleRow = 60.0) 325 SB
525 820 301 (PoleCol = 20.0) 301 SB
525 870 546 (Central Longitude = -130.0) 546 SB
525 920 301 (ColInc = 200.0) 301 SB
375 1020 1715 (Note:  Beware that when the pole is visible in a Lambert conformal projection, there is) 1715 SB
375 1070 1602 (usually a wedge-shaped region \(with its apex at the pole\) which is undefined \(i.e.) 1602 SB
375 1120 1626 (Longitude is >180 AND <-180\).  In this region, there will be no map lines and the) 1626 SB
375 1170 575 (topography will be incorrect.) 575 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1319 606 (\(3\) Azimuthal Stereographic) 606 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
831 1320 1323 (: an aximuthal stereographic projection defined by five parameters:) 1323 SB
375 1420 361 (CentLat, CentLon) 361 SB
825 1420 1330 (Latitude and longitude of the center of projection.  The apex of the) 1330 SB
825 1470 867 (imaginary cone will be over this coordinate.) 867 SB
375 1520 380 (CentRow, CentCol) 380 SB
825 1520 1253 (Row and column of the center of projection.  The grid row and) 1253 SB
825 1570 1240 (column indicated will be at the center of the projection.  These) 1240 SB
825 1620 700 (values may be outside the 3-D box.) 700 SB
375 1670 134 (ColInc) 134 SB
825 1670 1281 (Increment \(spacing\) between grid columns in km at the center of) 1281 SB
825 1720 1325 (the projection.  This parameter controls the scale of the projection.) 1325 SB
375 1820 1704 (Example:  Suppose your 3-D grid has 40 rows and 40 columns and want an azimuthal) 1704 SB
375 1870 1125 (stereographic projection centered over of the north pole:) 1125 SB
525 1920 303 (CentLat = 90.0) 303 SB
525 1970 291 (CentLon = 0.0) 291 SB
525 2020 331 (CentRow = 20.0) 331 SB
525 2070 307 (CentCol = 20.0) 307 SB
525 2120 301 (ColInc = 200.0) 301 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2269 622 (\(4\) Rotated rectilinear lat/lon) 622 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
847 2270 1295 (:  this is the rectangular latitude/longitude coordinate system on a) 1295 SB
375 2320 1607 (sphere rotated with respect to the Earth's natural latitude/longitude.  North/south) 1607 SB
375 2370 1697 (coordinates increase upward on the rotated sphere and east/west coordinates increase) 1697 SB
375 2420 1559 (leftward on the rotated sphere.  The projection is defined by seven parameters:) 1559 SB
375 2520 251 (NorthBound) 251 SB
825 2520 1287 (Northern boundary of 3-D box in degrees of latitude in the range) 1287 SB
825 2570 17 ([) 17 SB
842 2570 224 (-90S,90N].) 224 SB
375 2620 235 (WestBound) 235 SB
825 2620 1309 (Western boundary of 3-D box in degrees of longitude in the range) 1309 SB
825 2670 17 ([) 17 SB
842 2670 287 (-180E,180W].) 287 SB
375 2720 158 (RowInc) 158 SB
825 2720 1206 (Increment \(spacing\) between grid rows in degrees of latitude) 1206 SB
825 2770 351 (greater than zero.) 351 SB
375 2820 134 (ColInc) 134 SB
825 2820 1311 (Increment \(spacing\) between grid columns in degrees of longitude) 1311 SB
825 2870 351 (greater than zero.) 351 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (16) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 361 (CentLat, CentLon) 361 SB
825 220 985 (Latitude and longitude on Earth corresponding to) 985 SB
825 270 982 (Latitude/Longitude = \(0,0\) on the rotated sphere.) 982 SB
375 320 173 (Rotation) 173 SB
825 320 1322 (Clockwise angle of rotation of rotated sphere about its \(0,0\) point.) 1322 SB
375 420 1690 (Example:  Over small regions the Earth is nearly flat and we can exploit this to create) 1690 SB
375 470 1714 (nearly square grids for small scale models.  We can generate a nearly square grid of 41) 1714 SB
375 520 1223 (rows by 41 columns over a small region over Wisconsin with:) 1223 SB
525 570 368 (NorthBound = 2.0) 368 SB
525 620 352 (WestBound = 2.0) 352 SB
525 670 275 (RowInc = 0.1) 275 SB
525 720 251 (ColInc = 0.1) 251 SB
525 770 303 (CentLat = 43.0) 303 SB
525 820 316 (CentLon = 90.0) 316 SB
525 870 290 (Rotation = 0.0) 290 SB
225 1020 1227 (Vis5D 5.0 supports the following vertical coordinate systems:) 1227 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1119 693 (\(0\) Equally spaced, generic units) 693 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
918 1120 1195 (:  this is a linear vertical coordinate system in which levels in) 1195 SB
375 1170 99 (the 3) 99 SB
474 1170 1656 (-D grid are equally spaced.  No specific units are implied.  The coordinate system is) 1656 SB
375 1220 540 (defined by two parameters:) 540 SB
375 1320 285 (BottomBound) 285 SB
750 1320 795 (Bottom boundary boundary of 3-D box.) 795 SB
375 1370 139 (LevInc) 139 SB
750 1370 790 (Increment\(spacing\) between grid levels.) 790 SB
375 1470 1758 (Example:  Suppose your 3-D grid has 20 levels and you want the bottom boundary to be) 1758 SB
375 1520 1141 (0.0 meters and you want .1 meters between levels.  Then:) 1141 SB
525 1570 402 (BottomBound = 0.0) 402 SB
525 1620 256 (LevInc = 0.1) 256 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1769 641 (\(1\) Equally spaced, kilometers) 641 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
866 1770 1178 (:  this is a linear vertical coordinate system used in previous) 1178 SB
375 1820 1737 (versions of Vis5D.  Grid levels are equally spaced.  The coordinate system is defined by) 1737 SB
375 1870 322 (two parameters:) 322 SB
375 1970 285 (BottomBound) 285 SB
750 1970 720 (Bottom boundary of 3-D box in km.) 720 SB
375 2020 139 (LevInc) 139 SB
750 2020 1278 (Increment \(spacing\) between grid levels in km greater than zero.) 1278 SB
375 2120 1757 (Example:  Suppose your 3-D grid has 20 levels and you want .5 kilometers between grid) 1757 SB
375 2170 265 (levels.  Then:) 265 SB
525 2220 402 (BottomBound = 0.0) 402 SB
525 2270 256 (LevInc = 0.5) 256 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2419 694 (\(2\) Unequally spaced, kilometers) 694 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
919 2420 1238 (:  this is a linear vertical coordinate system in which grid levels) 1238 SB
375 2470 1639 (can be unequally spaced.  The coordinate system is defined by an array of N height) 1639 SB
375 2520 1761 (parameters where N is the number of levels in the 3-D grids.  If the number of grid levels) 1761 SB
375 2570 1385 (is different for each variable, N is the maximum number of grid levels.) 1385 SB
375 2670 193 (Height\(1\)) 193 SB
750 2670 790 (Height of first \(bottom\) grid level in km) 790 SB
375 2720 193 (Height\(2\)) 193 SB
750 2720 660 (Height of second grid level in km) 660 SB
375 2770 39 (...) 39 SB
750 2770 39 (...) 39 SB
375 2820 204 (Height\(N\)) 204 SB
750 2820 710 (Height of Nth \(top\) grid level in km) 710 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (17) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 990 (Note that the Height values must increase with N.) 990 SB
375 320 1780 (Example:  Suppose your 3-D grids have 10 levels and you want the grid levels to be more) 1780 SB
375 370 1115 (closely spaced near the bottom than near the top.  Then:) 1115 SB
525 420 310 (Height\(1\) = 0.0) 310 SB
525 470 310 (Height\(2\) = 0.1) 310 SB
525 520 310 (Height\(3\) = 0.2) 310 SB
525 570 310 (Height\(4\) = 0.3) 310 SB
525 620 310 (Height\(5\) = 0.4) 310 SB
525 670 310 (Height\(6\) = 0.6) 310 SB
525 720 310 (Height\(7\) = 0.8) 310 SB
525 770 310 (Height\(8\) = 1.0) 310 SB
525 820 310 (Height\(9\) = 1.3) 310 SB
525 870 335 (Height\(10\) = 1.6) 335 SB
225 1020 1859 (It is also possible to display the vertical axis on a logarithmic scale.  This is done with the -log) 1859 SB
225 1070 1820 (command line option when you start vis5d.  In this case, the vertical axis is logarithmic with) 1820 SB
225 1120 1857 (respect to height but linear with respect to pressure.  The relationship between height \(H\) and) 1857 SB
225 1170 299 (pressure \(P\) is:) 299 SB
525 1270 532 (P = 1012.5 * e^\( H / -7.2 \)) 532 SB
1275 1270 529 (\(^ denotes exponentiation\)) 529 SB
525 1370 541 (H = -7.2 * Ln\( P / 1012.5 \)) 541 SB
1275 1370 480 (\(Ln denotes natural log\)) 480 SB
225 1470 1927 (The constants 1012.5 and -7.2 are just defaults which can be overriden when you specify the -log) 1927 SB
225 1520 692 (option.  See section 6.1 for details.) 692 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1619 661 (\(3\) Unequally spaced, millibars) 661 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
886 1620 1238 (:  this is a linear vertical coordinate system in which grid levels) 1238 SB
375 1670 1683 (can be unequally spaced.  The coordinate system is defined by an array of N pressure) 1683 SB
375 1720 1761 (parameters where N is the number of levels in the 3-D grids.  If the number of grid levels) 1761 SB
375 1770 1385 (is different for each variable, N is the maximum number of grid levels.) 1385 SB
375 1870 228 (Pressure\(1\)) 228 SB
750 1870 825 (Pressure of first \(bottom\) grid level in km) 825 SB
375 1920 228 (Pressure\(2\)) 228 SB
750 1920 695 (Pressure of second grid level in km) 695 SB
375 1970 39 (...) 39 SB
750 1970 39 (...) 39 SB
375 2020 239 (Pressure\(N\)) 239 SB
750 2020 745 (Pressure of Nth \(top\) grid level in km) 745 SB
375 2120 1036 (Note that the Pressure values must decrease with N.) 1036 SB
225 2220 1919 (For the purposes of calculating wind trajectories, Vis5D assumes the relationship between height) 1919 SB
225 2270 466 (\(H\) and pressure \(P\) is:) 466 SB
525 2370 532 (P = 1012.5 * e^\( H / -7.2 \)) 532 SB
1275 2370 529 (\(^ denotes exponentiation\)) 529 SB
525 2470 541 (H = -7.2 * Ln\( P / 1012.5 \)) 541 SB
1275 2470 480 (\(Ln denotes natural log\)) 480 SB
375 2670 1609 (Only the v5d file format is capable of storing the new map projection and vertical) 1609 SB
225 2720 1832 (coordinate system information.  When a v5d file is read into vis5d this information is used to) 1832 SB
225 2770 1272 (setup the topography, map lines, and compute wind trajectories.) 1272 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (18) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1772 (The vis5d program also supports two other display projections:  spherical and cylindrical.) 1772 SB
225 270 681 (Instead of drawing a rectangular 3) 681 SB
906 270 1242 (-D box, these projections will actually warp the 3-D box into a) 1242 SB
225 320 1855 (spherical or cylincrical shape.  These projections are used by specifying the -projection option) 1855 SB
225 370 1917 (with the value spherical or cylindrical; they are not specified in the v5d file.  The spherical option) 1917 SB
225 420 773 (can be used to display your data on a 3) 773 SB
998 420 1097 (-D globe.  The cylindrical option can be used to display) 1097 SB
225 470 1870 (your data on a flat, round topography.  It's probably best to just experiment with these options) 1870 SB
225 520 1939 (using the LAMPS dataset for example.  See the section on vis5d's command line options for more) 1939 SB
225 570 243 (information.) 243 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 719 810 (3.3 Special Variables and Data Values) 810 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 820 1792 (Analysis and visualization of wind information is an important part of Vis5D.  Specifically,) 1792 SB
225 870 1924 (the vis5d program looks to see if your data set contains variables named U, V and W.  If present,) 1924 SB
225 920 1886 (they are assumed to be the three components of wind vectors and are used to display trajectory) 1886 SB
225 970 482 (tracings and wind slices.) 482 SB
375 1070 1633 (The U wind component is parallel to rows, with positive U values pointing toward) 1633 SB
225 1120 1871 (increasing column numbers \(i.e., positive eastward in a cylindrical equidistant map projection\).) 1871 SB
225 1170 1923 (The V wind component is parallel to columns, with positive V values pointing toward decreasing) 1923 SB
225 1220 1904 (row numbers \(i.e., positive northwardward in a cylindrical equidistant map projection\).  Positive) 1904 SB
225 1270 1857 (W values are upward, negative W is downward.  The units for U, V and W are assumed to be) 1857 SB
225 1320 1940 (meters per second except when a generic map projection or vertical coordinate system is used.  In) 1940 SB
225 1370 1817 (that case, the units are in X per second where X is the units used to specify the northbound,) 1817 SB
225 1420 851 (westbound, rowinc, and colinc parameters.) 851 SB
375 1520 1762 (If you do not like to use U, V, and W for wind vector components you can either specify) 1762 SB
225 1570 1757 (other wind variable names on the vis5d command line or enter them while running vis5d.) 1757 SB
375 1670 1795 (Strictly speaking, U, V and W do not have to represent wind motion.  They can be used to) 1795 SB
225 1720 1944 (represent any flow field such as ocean currents.  However, you may want to scale U, V, and W by) 1944 SB
225 1770 819 (some constant for visualization purposes.) 819 SB
375 1870 1681 (Vis5D allows any grid data value to be undefined or 'missing'.  For example, datasets) 1681 SB
225 1920 1929 (based on observations are often incomplete or contain erroneous values.  In your data conversion) 1929 SB
225 1970 1814 (program you can indicate a grid value is missing by assigning it a value greater than 1.0e30.) 1814 SB
225 2020 1920 (Missing data in vis5d will show up as holes in isosurfaces and contour slices and as black regions) 1920 SB
225 2070 1427 (in colored slices.  The data probe will report missing values as 'Missing'.) 1427 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2269 767 (4. McIDAS 3D GRID DATA FILES) 767 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2370 1751 (In previous versions of Vis5D, it was standard practice to put one's data into a McIDAS) 1751 SB
225 2420 1896 (GR3D file, then compress it with comp5d prior to using vis5d.  While directly converting to the) 1896 SB
225 2470 1945 (v5d format is prefered, we still include this information on the McIDAS format.  If you don't want) 1945 SB
225 2520 1344 (to put your data into McIDAS files, you may skip to section 5 now.) 1344 SB
375 2620 1799 (WE RECOMMEND AGAINST THIS WAY OF GETTING YOUR DATA INTO VIS5D) 1799 SB
225 2670 1921 (- INSTEAD USE THE TECHNIQUES DESCRIBED IN SECTION 3 OF THIS DOCUMENT.) 1921 SB
375 2770 1741 (A McIDAS GR3D file contains a sequence of 3-D grids of data.  The three-dimensional) 1741 SB
225 2820 1917 (grids are organized into short sequences to enumerate the values of multiple physical variables at) 1917 SB
225 2870 1950 (a single time.  The short sequences of physical variables are repeated into a longer sequence which) 1950 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (19) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 220 1924 (steps through many time steps.  These files have a names of the form GR3Dnnnn where nnnn is a) 1924 SB
225 270 1942 (4-digit number between  0001 and 9999.  The McIDAS utility programs then refer to files only by) 1942 SB
225 320 551 (a number \(1 through 9999\).) 551 SB
375 420 1718 (A 3D grid file contains a directory entry for each 3D grid, which describes the size and) 1718 SB
225 470 1936 (geographic location of the grid, and the date, time and name of physical variable of the data in the) 1936 SB
225 520 1858 (grid array.  A five-dimensional data set consists of a sequence of 3D grids in a 3D grid file, all) 1858 SB
225 570 1922 (with the same size and geographic locations.  The grid sequence repeats the same short sequence) 1922 SB
225 620 1821 (of physical variables stepping forward through time.  For example, the grid sequence from a) 1821 SB
225 670 489 (weather model could be:) 489 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
225 776 900 (                      PHYSICAL) 900 SB
225 826 900 (   GRID               VARIABLE) 900 SB
225 876 840 (  NUMBER  DATE  TIME    NAME) 840 SB
225 926 780 (     1   88035 000000    U) 780 SB
225 976 780 (     2   88035 000000    V) 780 SB
225 1026 780 (     3   88035 000000    W) 780 SB
225 1076 780 (     4   88035 000000    T) 780 SB
225 1126 780 (     5   88035 000000    P) 780 SB
225 1176 780 (     6   88035 010000    U) 780 SB
225 1226 780 (     7   88035 010000    V) 780 SB
225 1276 780 (     8   88035 010000    W) 780 SB
225 1326 780 (     9   88035 010000    T) 780 SB
225 1376 780 (    10   88035 010000    P) 780 SB
225 1426 780 (    11   88035 020000    U) 780 SB
225 1476 780 (    12   88035 020000    V) 780 SB
225 1526 780 (    13   88035 020000    W) 780 SB
225 1576 780 (    14   88035 020000    T) 780 SB
225 1626 780 (    15   88035 020000    P) 780 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1720 1799 (This data set consists of 3 time steps of 5 physical variables.  The physical variables are the) 1799 SB
225 1770 1889 (U, V and W components of the wind vector, the temperature T and the pressure P.  The date is) 1889 SB
225 1820 1943 (February 4, 1988 and the time steps are midnight, 1 AM and 2 AM.  Dates are in YYDDD format) 1943 SB
225 1870 1091 (and times are in HHMMSS format as described earlier.) 1091 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2019 1097 (4.1 Putting Your Data Into a McIDAS 3D Grid File) 1097 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2120 1751 (The following sample program creates a 3D grid file and fills its 3D grids with data for a) 1751 SB
225 2170 1757 (five-dimensional data set.  This program can be found in the file sample.F, it's makefile is) 1757 SB
225 2220 1918 (sample.m.  The easiest way to read your data into a 3D grid file is to alter the sample.F program.) 1918 SB
225 2270 1900 (The subroutines it calls are all in the libmain.a library, and their source is in the src subdirectory.) 1900 SB
225 2320 566 (Here is a listing of sample.F:) 566 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
225 2426 1620 (  1 C THE MAIN PROGRAM OF YOUR CONVERSION PROGRAM MUST) 1620 SB
225 2476 930 (  2 C BE NAMED SUBROUTINE MAIN0) 930 SB
225 2526 150 (  3 C) 150 SB
225 2576 780 (  4       SUBROUTINE MAIN0) 780 SB
225 2626 150 (  5 C) 150 SB
225 2676 1800 (  6 C THE NEXT TWO COMMENTS ARE PRINTED BY THE 'help sample') 1800 SB
225 2726 210 (COMMAND) 210 SB
225 2776 1650 (  7 C ? SAMPLE program to convert data to 3D grid files) 1650 SB
225 2826 630 (  8 C ? sample gridf#) 630 SB
225 2876 150 (  9 C) 150 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (20) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
0 0 0 fC
225 226 810 ( 10 C DIMENSIONS OF 3D GRID) 810 SB
225 276 1950 ( 11 C NOTE NLATS AND NLONS MUST BOTH BE LESS THAN OR EQUAL TO 150) 1950 SB
225 326 1530 ( 12 C NLATS, NLONS AND NHGTS MUST ALL BE AT LEAST 2) 1530 SB
225 376 1440 ( 13       PARAMETER \(NLATS=31,NLONS=51,NHGTS=16\)) 1440 SB
225 426 150 ( 14 C) 150 SB
225 476 1770 ( 15 C NUMBER OF PHYSICAL VARIABLES AND NUMBER OF TIME STEPS) 1770 SB
225 526 1950 ( 16 C NOTE EITHER OR BOTH MAY BE EQUAL TO 1.  THAT IS, Vis5D DOES) 1950 SB
225 576 1920 ( 17 C NOT FORCE YOU TO HAVE MULTIPLE VARIABLES OR TIME DYNAMICS.) 1920 SB
225 626 1200 ( 18       PARAMETER \(NVARS=5,NTIMES=100\)) 1200 SB
225 676 150 ( 19 C) 150 SB
225 726 840 ( 20 C ARRAY FOR 3D GRID DATA) 840 SB
225 776 1170 ( 21       REAL*4 G\(NLATS, NLONS, NHGTS\)) 1170 SB
225 826 1440 ( 22 C ARRAYS FOR GRID FILE ID AND GRID DIRECTORY) 1440 SB
225 876 990 ( 23       INTEGER ID\(8\), IDIR\(64\)) 990 SB
225 926 900 ( 24 C ARRAY FOR VARIABLE NAMES) 900 SB
225 976 900 ( 25       CHARACTER*4 CNAME\(5\)) 900 SB
225 1026 150 ( 26 C) 150 SB
225 1076 1800 ( 27 C LATITUDE, LONGITUDE AND HEIGHT BOUNDS FOR SPATIAL GRID) 1800 SB
225 1126 1140 ( 28       DATA XLATS/20.0/,XLATN/50.0/) 1140 SB
225 1176 1170 ( 29       DATA XLONE/70.0/,XLONW/120.0/) 1170 SB
225 1226 1110 ( 30       DATA XHGTB/0.0/,XHGTT/15.0/) 1110 SB
225 1276 150 ( 31 C) 150 SB
225 1326 1410 ( 32 C STARTING DATE IN YYDDD AND TIME IN HHMMSS) 1410 SB
225 1376 1200 ( 33       DATA JDAY/88035/,JTIME/020000/) 1200 SB
225 1426 750 ( 34 C TIME STEP IN HHMMSS) 750 SB
225 1476 840 ( 35       DATA JSTEP/000100/) 840 SB
225 1526 150 ( 36 C) 150 SB
225 1576 1260 ( 37 C NAMES OF THE FIVE PHYSICAL VARIABLES) 1260 SB
225 1626 1800 ( 38       DATA CNAME/'U   ', 'V   ', 'W   ', 'T   ', 'P   '/) 1800 SB
225 1676 1200 ( 39 C INITIALIZE GRID DIRECTORY TO ZEROS) 1200 SB
225 1726 750 ( 40       DATA IDIR/64*0/) 750 SB
225 1776 150 ( 41 C) 150 SB
225 1826 1680 ( 42 C READ GRID FILE NUMBER FROM COMMAND LINE.  IPP WILL) 1680 SB
225 1876 1830 ( 43 C CONVERT THE PARAMETER # 1 TO AN INTEGER, WITH A DEFAULT) 1830 SB
225 1926 510 ( 44 C VALUE OF 0.) 510 SB
225 1976 750 ( 45       IGRIDF=IPP\(1,0\)) 750 SB
225 2026 1950 ( 46 C IF ILLEGAL GRID FILE NUMBER, PRINT ERROR MESSAGE AND RETURN) 1950 SB
225 2076 1620 ( 47       IF\(IGRIDF .LT. 1 .OR. IGRIDF .GT. 9999\) THEN) 1620 SB
225 2126 1620 ( 48         CALL EDEST\('BAD GRID FILE NUMBER ',IGRIDF\)) 1620 SB
225 2176 1650 ( 49         CALL EDEST\('MUST BE BETWEEN 1 AND 9999 ',0\)) 1650 SB
225 2226 540 ( 50         RETURN) 540 SB
225 2276 450 ( 51       ENDIF) 450 SB
225 2326 150 ( 52 C) 150 SB
225 2376 900 ( 53 C CALCULATE GRID INTERVALS) 900 SB
225 2426 1200 ( 54       XLATIN=\(XLATN-XLATS\)/\(NLATS-1\)) 1200 SB
225 2476 1200 ( 55       XLONIN=\(XLONW-XLONE\)/\(NLONS-1\)) 1200 SB
225 2526 1200 ( 56       XHGTIN=\(XHGTT-XHGTB\)/\(NHGTS-1\)) 1200 SB
225 2576 150 ( 57 C) 150 SB
225 2626 1170 ( 58 C DATE AND TIME FOR FIRST TIME STEP) 1170 SB
225 2676 1800 ( 59 C IDAYS CONVERTS YYDDD FORMAT TO DAYS SINCE JAN. 1, 1900) 1800 SB
225 2726 780 ( 60       IDAY=IDAYS\(JDAY\)) 780 SB
225 2776 1800 ( 61 C ISECS CONVERTS HHMMSS FORMAT TO SECONDS SINCE MIDNIGHT) 1800 SB
225 2826 810 ( 62       ISEC=ISECS\(JTIME\)) 810 SB
225 2876 150 ( 63 C) 150 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (21) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
0 0 0 fC
225 226 1410 ( 64 C INITIALIZE GRID IDENTIFIER TEXT TO BLANKS) 1410 SB
225 276 1590 ( 65 C NOTE LIT CONVERTS A CHARACTER*4 TO AN INTEGER*4) 1590 SB
225 326 630 ( 66       DO 10 I=1,8) 630 SB
225 376 810 ( 67 10    ID\(I\)=LIT\('    '\)) 810 SB
225 426 150 ( 68 C) 150 SB
225 476 840 ( 69 C SET UP DIRECTORY ENTRY) 840 SB
225 526 150 ( 70 C) 150 SB
225 576 720 ( 71 C DIMENSIONS OF GRID) 720 SB
225 626 1050 ( 72       IDIR\(1\)=NLATS*NLONS*NHGTS) 1050 SB
225 676 690 ( 73       IDIR\(2\)=NLATS) 690 SB
225 726 690 ( 74       IDIR\(3\)=NLONS) 690 SB
225 776 690 ( 75       IDIR\(4\)=NHGTS) 690 SB
225 826 150 ( 76 C) 150 SB
225 876 1470 ( 77 C LATITUDES AND LONGITUDES IN DEGREES * 10000) 1470 SB
225 926 600 ( 78       IDIR\(22\)=4) 600 SB
225 976 1110 ( 79       IDIR\(23\)=NINT\(XLATN*10000.\)) 1110 SB
225 1026 1110 ( 80       IDIR\(24\)=NINT\(XLONW*10000.\)) 1110 SB
225 1076 1170 ( 81       IDIR\(25\)=NINT\(XLATIN*10000.0\)) 1170 SB
225 1126 1170 ( 82       IDIR\(26\)=NINT\(XLONIN*10000.0\)) 1170 SB
225 1176 150 ( 83 C) 150 SB
225 1226 690 ( 84 C HEIGHTS IN METERS) 690 SB
225 1276 600 ( 85       IDIR\(31\)=1) 600 SB
225 1326 1080 ( 86       IDIR\(32\)=NINT\(XHGTT*1000.\)) 1080 SB
225 1376 1110 ( 87       IDIR\(33\)=NINT\(XHGTIN*1000.\)) 1110 SB
225 1426 150 ( 88 C) 150 SB
225 1476 780 ( 89 C CREATE THE GRID FILE) 780 SB
225 1526 1560 ( 90       CALL IGMK3D\(IGRIDF, ID, NLATS*NLONS*NHGTS\)) 1560 SB
225 1576 150 ( 91 C) 150 SB
225 1626 750 ( 92 C LOOP FOR TIME STEPS) 750 SB
225 1676 840 ( 93       DO 200 IT=1,NTIMES) 840 SB
225 1726 150 ( 94 C) 150 SB
225 1776 1260 ( 95 C SET DATE AND TIME IN DIRECTORY ENTRY) 1260 SB
225 1826 1950 ( 96 C IYYDDD CONVERTS DAYS SINCE JAN. 1, 1900 TO OUR YYDDD FORMAT) 1950 SB
225 1876 900 ( 97       IDIR\(6\)=IYYDDD\(IDAY\)) 900 SB
225 1926 1890 ( 98 C IHMS CONVERTS SECONDS SINCE MIDNIGHT TO OUR HHMMSS FORMAT) 1890 SB
225 1976 840 ( 99       IDIR\(7\)=IHMS\(ISEC\)) 840 SB
225 2026 150 (100 C) 150 SB
225 2076 990 (101 C LOOP FOR PHYSICAL VARIABLES) 990 SB
225 2126 810 (102       DO 190 IV=1,NVARS) 810 SB
225 2176 150 (103 C) 150 SB
225 2226 1260 (104 C SET VARIABLE NAME IN DIRECTORY ENTRY) 1260 SB
225 2276 960 (105       IDIR\(9\)=LIT\(CNAME\(IV\)\)) 960 SB
225 2326 150 (106 C) 150 SB
225 2376 150 (107 C) 150 SB
225 2426 1830 (*************************************************************) 1830 SB
225 2476 1920 (108 C READ YOUR DATA FOR TIME STEP NUMBER IT AND VARIABLE NUMBER) 1920 SB
225 2526 60 (IV) 60 SB
225 2576 840 (109 C INTO THE ARRAY G HERE.) 840 SB
225 2626 1800 (110 C NOTE THAT G\(1,1,1\) IS THE NORTH WEST BOTTOM CORNER AND) 1800 SB
225 2676 1680 (111 C G\(NLATS,NLONS,NHGTS\) IS THE SOUTH EAST TOP CORNER.) 1680 SB
225 2726 1920 (112 C MARK A GRID POINT AS 'MISSING DATA' BY SETTING IT = 1.0E35) 1920 SB
225 2776 150 (113 C) 150 SB
225 2826 1830 (*************************************************************) 1830 SB
225 2876 150 (114 C) 150 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (22) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
0 0 0 fC
225 226 900 (115 C CALCULATE 3D GRID NUMBER) 900 SB
225 276 930 (116       IGRID=IV+NVARS*\(IT-1\)) 930 SB
225 326 1620 (117 C WRITE DATA IN G AND DIRECTORY IN IDIR TO 3D GRID) 1620 SB
225 376 1920 (118 C NOTE WE PASS THE NEGATIVE OF THE GRID NUMBER \(I.E. -IGRID\)) 1920 SB
225 426 900 (119       CALL IGPT3D\(IGRIDF,-) 900 SB
225 476 1080 (IGRID,G,NLATS,NLONS,NHGTS,IDIR,IGNO\)) 1080 SB
225 526 150 (120 C) 150 SB
225 576 1050 (121 C END OF PHYSICAL VARIABLE LOOP) 1050 SB
225 626 540 (122 190   CONTINUE) 540 SB
225 676 150 (123 C) 150 SB
225 726 1770 (124 C INCREMENT DATE AND TIME, CONVERT JSTEP FROM HHMMSS TO) 1770 SB
225 776 210 (SECONDS) 210 SB
225 826 960 (125       ISEC=ISEC+ISECS\(JSTEP\)) 960 SB
225 876 1800 (126 C IF SECONDS CARRY PAST ONE DAY, ADJUST SECONDS AND DAYS) 1800 SB
225 926 1020 (127       IDAY=IDAY+ISEC/\(24*3600\)) 1020 SB
225 976 960 (128       ISEC=MOD\(ISEC,24*3600\)) 960 SB
225 1026 150 (129 C) 150 SB
225 1076 810 (130 C END OF TIME STEP LOOP) 810 SB
225 1126 540 (131 200   CONTINUE) 540 SB
225 1176 150 (132 C) 150 SB
225 1226 480 (133       RETURN) 480 SB
225 1276 390 (134       END) 390 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1370 1758 (The routines IGMK3D and IGPT3D are the interface to the 3D grid structures.  The call) 1758 SB
225 1420 1266 (to IGMK3D at line 90 creates a 3D grid file. Its parameters are:) 1266 SB
225 1520 1028 (   1  INTEGER*4 - number of 3D grid file to create) 1028 SB
225 1570 1160 (   2  array of 8 INTEGER*4 - a 32 byte text ID for the file) 1160 SB
225 1620 1344 (   3  INTEGER*4 - maximum number of grid points in any 3D grid.) 1344 SB
225 1720 1902 (After the 3D grid file is created, IGPT3D is called in line 119 once for each combination of time) 1902 SB
225 1770 1469 (step and physical variable to put 3D grids into the file.  Its parameters are:) 1469 SB
375 1870 1025 (1  INTEGER*4 - number of 3D grid file to write to) 1025 SB
375 1920 1660 (2  INTEGER*4 - minus the number of the 3D grid to write.  This is 0 or positive to) 1660 SB
525 1970 661 (indicate write to next empty grid.) 661 SB
375 2020 991 (3  array of REAL*4 - array of grid points to write) 991 SB
375 2070 1196 (4  INTEGER*4 - first dimension of grid array, # of latitudes) 1196 SB
375 2120 1294 (5  INTEGER*4 - second dimension of grid array, # of longitudes) 1294 SB
375 2170 1185 (6  INTEGER*4 - third dimension of grid array, # of heights) 1185 SB
375 2220 1006 (7  array of 64 INTEGER*4 - directory for 3D grid) 1006 SB
375 2270 1500 (8  INTEGER*4 - number of 3D grid actually written, returned by IGPT3D.) 1500 SB
375 2370 1652 (Vis5D allows data sets which span more than one 3D grid file.  In this case the grid) 1652 SB
225 2420 1921 (sequence of repeating variables and repeating time steps continues across grid file boundaries.  A) 1921 SB
225 2470 1775 (single 3D grid file is limited to 100,000,000 grid points \(400 megabytes\).  If your data set) 1775 SB
225 2520 1926 (contains more than this number of grid points, then you should alter sample.F to create a new 3D) 1926 SB
225 2570 1887 (grid file \(by incrementing IGRIDF and calling IGMK3D\) on every Nth time step, where N time) 1887 SB
225 2620 1950 (steps will fit in one 3D grid file.  Note that the comp5d command described in section 4 references) 1950 SB
225 2670 765 (data sets as sequences of 3D grid files.) 765 SB
375 2770 1625 (The Vis5D system processes the gridded data based on the information in the grid) 1625 SB
225 2820 1863 (directories, which is contained in the IDIR array in the sample.F program.  It is a good idea to) 1863 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (23) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 220 1879 (initialize IDIR to all zeros, as in line 40.  The size of the 3D grid is set in entries 1 to 4 of IDIR) 1879 SB
225 270 1865 (\(lines 72 to 75\).  Note the restrictions on data set size described in section 4 of this document.) 1865 SB
375 370 1758 (The date and time of the 3D grid are set in entries 6 and 7 of IDIR, as in lines 97 and 99.) 1758 SB
225 420 1868 (Note that they are represented in our YYDDD and HHMMSS formats described above.  Four) 1868 SB
225 470 1828 (functions are available in libmain.a for converting between these formats and a format which) 1828 SB
225 520 1883 (makes date and time calculations easy.  The IDAYS function converts YYDDD format to days) 1883 SB
225 570 1912 (since January 1, 1900, as in line 60.  The ISECS function converts HHMMSS format to seconds) 1912 SB
225 620 1936 (since midnight, as in lines 62 and 125.  This makes it easy to do calculations with dates and times,) 1936 SB
225 670 1948 (as in lines 125, 127 and 128.  Then the IYYDDD function converts days back to YYDDD and the) 1948 SB
225 720 1326 (IHMS function converts back to HHMMSS, as in lines 97 amd 99.) 1326 SB
375 820 1740 (The physical variable name is 4 ASCII characters packed into entry 9 of IDIR, as in line) 1740 SB
225 870 1682 (105.  The LIT function in libmain.a converts a CHARACTER*4 to an INTEGER*4.) 1682 SB
375 970 1664 (The spatial location of the grid is described in terms of latitude and longitude in ten-) 1664 SB
225 1020 1923 (thousandths of a degree, and in terms of height \(altitude\) in meters.  The grid element G\(1,1,1\) is) 1923 SB
225 1070 1927 (in the north west bottom corner of the grid, and the grid element G\(NLATS,NLONS,NHGTS\) is) 1927 SB
225 1120 1897 (in the south east top corner.  The grid latitude and longitude are described in entries 21 to 25 of) 1897 SB
225 1170 1922 (IDIR, as in lines 78 to 82.  The grid heights are described in entries 31 to 33, as in lines 85 to 87.) 1922 SB
225 1220 1874 (The NINT function is a FORTRAN intrinsic for converting a REAL to the nearest INTEGER.) 1874 SB
225 1270 1907 (The latitude, longitude and height spacings are simply the distances between between successive) 1907 SB
225 1320 1817 (grid points.  Latitudes are positive in the northern hemisphere, longitudes are positive in the) 1817 SB
225 1370 1384 (western hemispere, and of course heights are positive above sea level.) 1384 SB
375 1470 1716 (The real work in modifying the sample.F program is writing code for getting your data) 1716 SB
225 1520 1921 (into the G array, in lines 107 to 113.  For some data you may want to fake the latitude, longitude) 1921 SB
225 1570 1944 (and height coordinates.  However, if your data is geographical and large scale, then you may want) 1944 SB
225 1620 1878 (to describe its location accurately, and it may be necessary to resample your data to a regularly) 1878 SB
225 1670 1838 (spaced grid in latitude, longitude and height from some other map projection.  It may also be) 1838 SB
225 1720 1905 (necessary to transpose your data array to get the index order to be LAT, LON and HGT, and to) 1905 SB
225 1770 1947 (invert your data array in some index to make sure G\(1,1,1\) is the north west bottom corner.  Even) 1947 SB
225 1820 1765 (in faked coordinates, you may need to transpose or invert your data array to get the right) 1765 SB
225 1870 1928 ('handedness' in the display.  The Vis5D system allows grid points marked as missing, indicated by) 1928 SB
225 1920 1887 (array values greater than 1.0E30.  If you do fake the latitude, longitude and height coordinates,) 1887 SB
225 1970 1900 (then the topography and map display of the vis5d program will be meaningless.  If you calculate) 1900 SB
225 2020 1866 (trajectories for your data set, either use accurate coordinates, or take great care to get relative) 1866 SB
225 2070 1940 (time, distance and velocity scales consistent in the faked coordinates.  Otherwaise trajectory paths) 1940 SB
225 2120 388 (will not be realistic.) 388 SB
375 2220 1775 (The IPP function in libmain.a returns the value of a command parameter as INTEGER*4,) 1775 SB
225 2270 1599 (as in line 45.  There are similar functions CPP and DPP in libmain.a which return) 1599 SB
225 2320 1832 (CHARACTER*12 \(converted to upper case\) and REAL*8 values for command parameters.) 1832 SB
225 2370 1896 (They get command parameters based on their sequential position in the command line.  They all) 1896 SB
225 2420 657 (have similar function parameters:) 657 SB
375 2520 1174 (1  INTEGER*4 - sequence number of command parameter) 1174 SB
375 2570 1192 (2 \(IPP\) INTEGER*4 - default value of command parameter) 1192 SB
525 2620 43 (or) 43 SB
375 2670 1318 (2 \(CPP\) CHARACTER*12 - default value of command parameter) 1318 SB
525 2720 43 (or) 43 SB
375 2770 1138 (2 \(DPP\) REAL*8 - default value of command parameter.) 1138 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (24) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 220 1921 (There is also a mechanism for picking up command parameters based on keywords.  This is done) 1921 SB
225 270 1921 (with the functions IKWP, CKWP and DKWP in libmain.a.  They get command parameters based) 1921 SB
225 320 1826 (on position after a keyword of the form '-keyword'.  IKWP returns an INTEGER*4, CKWP) 1826 SB
225 370 1904 (returns a CHARACTER*12 \(converted to upper case\) and DKWP returns a REAL*8.  They all) 1904 SB
225 420 657 (have similar function parameters:) 657 SB
375 520 1106 (1  CHARACTER*12 - keyword string in command line) 1106 SB
375 570 1465 (2  INTEGER*4 - sequence number of command parameter after keyword) 1465 SB
375 620 1245 (3 \(IKWP\) INTEGER*4 - default value of command parameter) 1245 SB
525 670 43 (or) 43 SB
375 720 1371 (3 \(CKWP\) CHARACTER*12 - default value of command parameter) 1371 SB
525 770 43 (or) 43 SB
375 820 1191 (3 \(DKWP\) REAL*8 - default value of command parameter.) 1191 SB
225 920 1874 (The NKWP function in libmain.a returns the number of sequential parameters after a keyword.) 1874 SB
225 970 497 (Its function parameter is:) 497 SB
375 1070 1119 (1  CHARACTER*12 - keyword string in command line.) 1119 SB
375 1170 1799 (On the most machines the REAL*4 format is not a subset of the REAL*8 format, so make) 1799 SB
225 1220 1805 (sure to declare DPP and DKWP as REAL*8, as well as their third function parameters \(for) 1805 SB
225 1270 794 (default values of command parameters\).) 794 SB
375 1370 1768 (If you would rather write your grid conversion program in C instead of FORTRAN, look) 1768 SB
225 1420 1807 (at the file 'sample.c'.  It contains examples of how to easily read and write grid files using C) 1807 SB
225 1470 625 (structures and routines in stdio.) 625 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1619 659 (4.2 Using the McIDAS Utilities) 659 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1720 1739 (Once your data set is in a 3D grid file, you can list directory information about the grids) 1739 SB
225 1770 399 (using the command:) 399 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 1874 690 (igg3d list I J -gr3df N) 690 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1970 1885 (where N is the 3D grid file number, and I and J give the range of grid numbers to list.  You can) 1885 SB
225 2020 1087 (get a quick idea of the data values using the command:) 1087 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 2124 690 (igg3d info I J -gr3df N) 690 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2220 1800 (which will list the minimum and maximum values, the mean, the standard deviation and the) 1800 SB
225 2270 1905 (number of grid points marked for missing data, for grid numbers I to J in 3D grid file number N.) 1905 SB
375 2370 1703 (There are restrictions on the dimensions of data sets which can be visualized using the) 1703 SB
225 2420 1898 (vis5d program.  Currently, you are limited to a maximum of 30 physical variables and 400 times) 1898 SB
225 2470 1494 (steps.  The vis5d program will also fail if there is a trivial spatial dimension:) 1494 SB
375 2570 239 (NLATS < 2) 239 SB
375 2620 245 (NLONS < 2) 245 SB
375 2670 246 (NHGTS < 2) 246 SB
225 2770 1651 (The vis5d program will perform badly, possibly making errors, if the total 5-D size:) 1651 SB
375 2870 1052 (NLATS * NLONS * NHGTS * NTIMES * NVARS) 1052 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (25) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 270 1888 (is too large.  The limit depends on the amount of memory in your system.  For a 64MB system,) 1888 SB
225 320 1943 (the limit is around 25,000,000, with performance degrading as the data set size exceedes the limit.) 1943 SB
375 420 1768 (Vis5D provides the gg3d and igg3d programs which can be used to reduce the resolution) 1768 SB
225 470 1917 (and scale of a data set to meet these limits.  The gg3d program resamples a 3D grid to new array) 1917 SB
225 520 1619 (dimensions and new extents in latitude, longitude and height, using the command:) 1619 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 624 510 (gg3d samp N I M J) 510 SB
375 674 510 (gg3d ave  N I M J) 510 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 770 1900 (where N and I are the numbers of the source 3D grid file and grid, and M and J are the numbers) 1900 SB
225 820 1944 (of the destination 3D grid file and grid.  The 'samp' version calculates destination grid point values) 1944 SB
225 870 1799 (by linearly interpolating between source grid point values, and is appropriate for increasing) 1799 SB
225 920 1904 (resolution.  The 'ave' version calculates destination grid points by averaging multiple source grid) 1904 SB
225 970 1913 (point values, and is appropriate for decreasing resolution.  Without any keywords gg3d will do a) 1913 SB
225 1020 1405 (straight copy operation.  Invoke the gg3d command with the keyword:) 1405 SB
375 1120 624 (-size NLATS NLONS NHGTS) 624 SB
225 1220 1913 (to set the grid dimensions for the destination grid as different from the dimensions for the source) 1913 SB
225 1270 763 (grid.  Invoke gg3d with the keywords:) 763 SB
375 1370 420 (-lat XLATS XLATN) 420 SB
375 1420 458 (-lon XLONE XLONW) 458 SB
375 1470 449 (-hgt XHGTB XHGTT) 449 SB
225 1570 1834 (to set extents \(range bounds\) for the latitude, longitude and height for the destination grid as) 1834 SB
225 1620 1751 (different from the extents for the source grid.  The -lat, -lon and -hgt keywords take real) 1751 SB
225 1670 219 (arguments.) 219 SB
375 1770 1562 (The igg3d program provides options for copying and deleting 3D grids and for) 1562 SB
225 1820 1880 (interpolating between 3D grids in time.  Sequences of 3D grids are copied using the command:) 1880 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 1924 570 (igg3d get N I J M K) 570 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2020 1923 (where N is the source 3D grid file number, I and J are the range of source grid numbers, M is the) 1923 SB
225 2070 1899 (destination grid file number, and K is the starting destination grid number.  A single grid may be) 1899 SB
225 2120 955 (copied within a 3D grid file using the command:) 955 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 2224 690 (igg3d copy I J -gr3df N) 690 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2320 1901 (where N is the 3D grid file number, I is the number of the source grid and J is the number of the) 1901 SB
225 2370 1374 (destination grid.  A range of grids may be deleted with the command:) 1374 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 2474 660 (igg3d del I J -gr3df N) 660 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2570 1727 (where N is the 3D grid file number and grid numbers between I and J are to be deleted.) 1727 SB
225 2670 1721 (The igg3d command provides two different options for time interpolation.  The first is:) 1721 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 2774 840 (igg3d ave K I J D T -gr3df N) 840 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (26) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 220 1949 (where grid number K is produced by interpolating between grid numbers I and J, all in 3D grid file) 1949 SB
225 270 1937 (number N.  Grid number K will be assigned day D \(in YYDDD format\) and time T \(in HHMMSS) 1937 SB
225 320 1879 (format\).  The relative weighting of grids I and J is calculated from this date and time, assuming) 1879 SB
225 370 1892 (linear time interpolation.  If grid K is not between grids I and J in date and time, igg3d prints an) 1892 SB
225 420 1850 (error message.  The igg3d command also provides a more complex time interpolation option:) 1850 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 524 1350 (igg3d int I D T -setdel S M -lag U V -gr3df N) 1350 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 620 1768 (This will put a grid in the next empty slot of 3D grid file number N, assigned to day D \(in) 1768 SB
225 670 1780 (YYDDD format\) and time T \(in HHMMSS format\).  This grid will be interpolated from a) 1780 SB
225 720 1763 (sequence of grids, all in file number N, at grid numbers I, I+S, I+2S, ... , I+\(M-1\)S.  This) 1763 SB
225 770 1813 (sequence of grids should be ascending in date and time.  igg3d will search the sequence and) 1813 SB
225 820 1882 (linearly interpolate between the two consectutive grids from the sequence which bracket day D) 1882 SB
225 870 1775 (and time T.  Furthermore, the interpolation will be done in a coordinate system moving at) 1775 SB
225 920 1860 (constant velocity \(U, V\), where U and V are in meters per second, with V positive for motion) 1860 SB
225 970 1919 (from south to north and U positive for motion from west to east.  The two bracketing grids from) 1919 SB
225 1020 1891 (the sequence will be shifted in latitude and longitude to their positions at day D and time T, and) 1891 SB
225 1070 1897 (the result interpolated between these two spatially shifted grids.  Furthermore, if the grids in the) 1897 SB
225 1120 1775 (sequence are identified in their directory entries with variable name 'U   ' or 'V   ', then the) 1775 SB
225 1170 1747 (corresponding component of the velocity \(U, V\) will be subtracted from the grid values.) 1747 SB
375 1270 1718 (The 'int' option of igg3d may seem complex, but it is just what you need if you want to) 1718 SB
225 1320 1893 (write a script to re-interpolate a five-dimensional data set to a new sequence of time steps.  It is) 1893 SB
225 1370 1890 (particularly useful if the source sequence does not have uniform time steps, or if the physics are) 1890 SB
225 1420 1918 (moving through the spatial grid and you want to avoid blurring in the time re-interpolation.  You) 1918 SB
225 1470 1921 (would set M equal to the number of time steps and S equal to the number of physical variables in) 1921 SB
225 1520 1882 (the source five-dimensional data set.  The I parameter would be set equal to the grid number in) 1882 SB
225 1570 1919 (the first time step of the variable being interpolated.  Note that this igg3d option will put the new) 1919 SB
225 1620 1913 (grid at the end of the grid file containing the source data set, but you can use 'igg3d get' to move) 1913 SB
225 1670 349 (it to another grid.) 349 SB
225 1770 541 (You can use the command:) 541 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 1874 420 (igu3d make N M) 420 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1970 1940 (to create 3D grid file number N, which allows 3D grids of up to M points each.  The names of 3D) 1940 SB
225 2020 473 (grid files have the form:) 473 SB
375 2120 226 (GR3Dnnnn) 226 SB
225 2220 1949 (where nnnn is the four digit decimal grid file number, padded with leading zeros if needed to make) 1949 SB
225 2270 217 (four digits.) 217 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2519 447 (5. Vis5D UTILITIES) 447 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2620 1877 (Vis5D includes a number of utility programs.  This section describes each one.  The v5dimport) 1877 SB
225 2670 879 (program is described seperately in section 7.) 879 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2819 161 (v5dinfo) 161 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2870 164 (Usage:  ) 164 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
539 2876 360 (v5dinfo file) 360 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (27) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 270 1642 (Description:  v5dinfo prints information about the given v5d file such as the size of) 1642 SB
375 320 1396 (the 3-D grid, the number of time steps, the names of the variables, etc.) 1396 SB
375 420 1489 (This program will also work on comp5d files.  Therefore, the old compinfo) 1489 SB
375 470 551 (program has been removed.) 551 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 619 175 (v5dstats) 175 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 670 164 (Usage:  ) 164 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
539 676 390 (v5dstats file) 390 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 770 1577 (Description:  v5dstats prints simple statistical information about the grid data in) 1577 SB
375 820 1168 (the named v5d file.  Again, comp5d files are also accepted.) 1168 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 969 159 (v5dedit) 159 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1020 164 (Usage:  ) 164 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
539 1026 480 (v5dedit file.v5d) 480 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1120 1567 (Description:  v5dedit allows you to change header information such as the map) 1567 SB
375 1170 1608 (projection, vertical coordinate system and variables names in the named file.  It is) 1608 SB
375 1220 1582 (an interacive, menu-driven program and is intended to be self explanatory.  This) 1582 SB
375 1270 886 (program does NOT work with comp5d files.) 886 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1419 237 (v5dappend) 237 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1470 164 (Usage:  ) 164 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
539 1476 1440 (v5dappend [-var] [...] file.v5d [...] target.v5d) 1440 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1570 1588 (Description:  v5dappend allows you to append a number of v5d files together to) 1588 SB
375 1620 1520 (make one larger file.  This might be useful if your weather model generates a) 1520 SB
375 1670 1630 (separate .v5d file for each timestep because you\222ll want to join those files together) 1630 SB
375 1720 499 (to view the data in vis5d.) 499 SB
375 1820 566 (The arguments are, in order:) 566 SB
32 0 0 50 50 0 0 0 51 /Symbol font
488 1864 23 (\267) 23 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
548 1870 1429 (An optional list of variables to omit from the output file. For example, if) 1429 SB
548 1920 1289 (you want to omit the variables U and THETA you would use the) 1289 SB
548 1970 219 (arguments ) 219 SB
767 1970 150 (-U and ) 150 SB
917 1970 194 (-THETA.) 194 SB
32 0 0 50 50 0 0 0 51 /Symbol font
488 2014 23 (\267) 23 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
548 2020 986 (The list of v5d files to append onto the target file.) 986 SB
32 0 0 50 50 0 0 0 51 /Symbol font
488 2064 23 (\267) 23 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
548 2070 1476 (The name of the target v5d file to create \(if it doesn\222t exit\) or append onto) 1476 SB
548 2120 631 (\(if the target file already exists\).) 631 SB
375 2220 1633 (Note that the dimensions of the grids \(rows, columns and levels\) must be the same) 1633 SB
375 2270 1607 (in each file to append them together.  The map projection and vertical coordinate) 1607 SB
375 2320 1500 (system information will be taken from the first input file and ignored the the) 1500 SB
375 2370 301 (remaining files.) 301 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2519 269 (gr3d_to_v5d) 269 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2570 164 (Usage:  ) 164 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
539 2576 780 (gr3d_to_v5d N M file.v5d C) 780 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2670 1647 (Description:  gr3d_to_v5d converts \(a\) McIDAS GR3D file\(s\) to a v5d file.  N is a) 1647 SB
375 2720 1632 (number which indicates the name of the first grid file, M is the number of grid files) 1632 SB
375 2770 1636 (to convert, file.v5d is the name of the file to produce, and C is 1, 2 or 4 to indicate) 1636 SB
375 2820 1636 (how many bytes per grid point to use for compression \(the default is 1\).  Example:) 1636 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (28) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1465 (if N=20 and M=4 then the files GR3D0020, GR3D0021, GR3D0022, and) 1465 SB
375 270 1187 (GR3D0023 will be read an converted to the named file.v5d.) 1187 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 419 117 (igg3d) 117 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 470 164 (Usage:  ) 164 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
539 476 270 (igg3d ...) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 570 1539 (Description:  igg3d is used to perform a variety of manipulations on McIDAS) 1539 SB
375 620 902 (GR3D files.  See section 4.2 for more details.) 902 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 769 120 (igu3d) 120 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 820 164 (Usage:  ) 164 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
539 826 300 (igu3d  ...) 300 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 920 1597 (Description:  igu3d is a utility to perform a variety of manipulations on McIDAS) 1597 SB
375 970 902 (GR3D files.  See section 4.2 for more details.) 902 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1119 103 (gg3d) 103 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1170 164 (Usage:  ) 164 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
539 1176 240 (gg3d ...) 240 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1270 1646 (Description:  gg3d is a utility for resampling McIDAS GR3D files.  See section 4.2) 1646 SB
375 1320 326 (for more details.) 326 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1469 168 (listfonts) 168 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1520 164 (Usage:  ) 164 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
539 1526 270 (listfonts) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1620 1627 (Description:  listfonts, used on SGI systems only, lists the IRIS GL fonts available) 1627 SB
375 1670 1628 (for use in vis5d's 3-D window.  After listing the fonts you may use one in vis5d by) 1628 SB
375 1720 1466 (specifying it with the -font option.  For non-SGI systems or systems using) 1466 SB
375 1770 352 (OpenGL, use the ) 352 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
727 1776 270 (xlsfonts ) 270 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
997 1770 42 (or) 42 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1039 1776 300 ( xfontsel ) 300 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1339 1770 489 (program to select a font.) 489 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1919 169 (comp5d) 169 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1970 164 (Usage:  ) 164 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
539 1976 570 (comp5d N M filename) 570 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2070 1600 (Description:  comp5d converts one or more McIDAS GR3D files to the comp5d) 1600 SB
375 2120 1176 (format used in previous \(and the current\) versions of vis5d.) 1176 SB
375 2220 1609 (N is the first 3D grid file number and M is the number of grid files in the data set.) 1609 SB
375 2270 1628 (The M parameter allows data sets which span multiple grid files and should not be) 1628 SB
375 2320 1158 (confused with the total number of 3D grids in the data set.) 1158 SB
375 2420 1615 (filename is the name of the compressed grid file.  You can choose whatever name) 1615 SB
375 2470 1642 (you want, but note that comp5d will convert the name to all upper case characters.) 1642 SB
375 2570 1616 (If your data set contains wind vector components you can use the -wind keyword) 1616 SB
375 2620 1603 (to select a subset of wind components or calculate horizontal wind speed, named) 1603 SB
375 2670 1598 ('SPD ', for the compressed file.  The longitude, latitude, and vertical components) 1598 SB
375 2720 1579 (of the wind vector must be named 'U   ', 'V   ' and 'W   ' respectively.  If you use) 1579 SB
375 2770 1621 (the -wind keyword, then only those wind-relevant variables \(i.e. U, V, W & SPD\)) 1621 SB
375 2820 573 (whose names are listed after ) 573 SB
948 2820 991 (-wind will be included in the compressed file.  For) 991 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (29) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1474 (example, to include SPD and W in the compressed file, from a 3D grid file) 1474 SB
375 270 1099 (containing U, V and W components, use the command:) 1099 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 376 720 (comp5d N M F -wind SPD W) 720 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 519 91 (help) 91 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 570 164 (Usage:  ) 164 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
539 576 480 (help utilityname) 480 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 670 1733 (Description:  The help command will list a quick reference to the parameter formats for) 1733 SB
375 720 1764 (the named utility such as igg3d, igu3d, gg3d, and comp5d utilities.  Example:  help igg3d) 1764 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 869 245 (maketopo.c) 245 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 920 1753 (This program, found in the util directory, is a template program for generating your own) 1753 SB
375 970 1566 (new topography \(*.TOPO\) files.  Read the information at the top of the file for) 1566 SB
375 1020 1453 (instructions.  To compile maketopo see the makefile named maketopo.m.) 1453 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1169 244 (makemap.c) 244 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1220 1753 (This program, found in the util directory, is a template program for generating your own) 1753 SB
375 1270 1755 (new McIDAS map outline \(OUTL*\) files.  Read the information at the top of the file for) 1755 SB
375 1320 1750 (instructions.  To compile makemap see the makefile named makemap.m.  If you create a) 1750 SB
375 1370 1799 (map with lots too many line segments, it will be displayed with some line segments missing) 1799 SB
375 1420 1775 (and some extra crazy line segments.  You can fix this by increasing MAXMAPVERT and) 1775 SB
375 1470 1084 (MAXMAPSEG in src/globals.h, then re-making vis5d.) 1084 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1619 215 (newmap.c) 215 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1670 1756 (This program and mapfunc.f, found in the util directory, is used to transform the vertices) 1756 SB
375 1720 1777 (of an existing map outline file to make a new map outline file.  This might be useful if you) 1777 SB
375 1770 1782 (need to transform a map to a new coordinate system.  Read the newmap.c and newmap.m) 1782 SB
375 1820 522 (files for more information.) 522 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2019 1049 (6.  USING Vis5D TO VISUALIZE YOUR DATA) 1049 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2120 1713 (This section describes how to use the Vis5D visualization program, vis5d.  It is almost) 1713 SB
225 2170 1894 (completely controlled using the mouse with a graphical user interface.  The best way to learn to) 1894 SB
225 2220 1674 (use it is to experiment.  There is no way to harm your data from within the program.) 1674 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2369 375 (6.1 Starting vis5d) 375 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 2470 946 (** IMPORTANT NOTE FOR OSF USERS **) 946 SB
525 2520 1144 (you need to run 'limit stacksize 32m' before you run vis5d) 1144 SB
525 2620 1034 (** IMPORTANT NOTE FOR SunOS 5 USERS **) 1034 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
525 2677 1583 (SunOS 5.x users:  The X shared memory extension may not work correctly.  If) 1583 SB
525 2735 1624 (Vis5D prints an error message to the effect of "Shared memory error" then you'll) 1624 SB
525 2793 1592 (have to append the following three lines to the end of your /etc/system file then) 1592 SB
525 2851 142 (reboot:) 142 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (30) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
675 227 865 (set shmsys:shminfo_shmmax = 0x2000000) 865 SB
675 285 782 (set shmsys:shminfo_shmmni = 0x1000) 782 SB
675 343 745 (set shmsys:shminfo_shmseg = 0x100) 745 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 444 1734 (After you have made a v5d file, you can interactively visualize one or more file with the) 1734 SB
225 494 207 (command:) 207 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 598 1440 (vis5d file1.v5d [options] file2.v5d [options]...) 1440 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 694 1690 ([options] may be any combination of the following \(though none are usually needed\):) 1690 SB
375 794 122 (-alpha) 122 SB
525 844 1146 (Use alpha blending instead of "screen door" transparency.) 1146 SB
375 894 149 (-area N) 149 SB
525 944 1637 ([SGI only]  Specifies the first of a sequence of McIDAS area files to read and then) 1637 SB
525 994 377 (display inside the 3) 377 SB
902 994 947 (-D box.  See section 6.15 for more information.) 947 SB
375 1044 199 (-box x y z) 199 SB
525 1094 1515 (This lets you specify the aspect ratio or proportions of the 3-D box.  Default) 1515 SB
525 1144 325 (values are 2 2 1.) 325 SB
375 1194 123 (-barbs) 123 SB
525 1244 806 (Use wind barbs in place of wind vectors.) 806 SB
375 1294 101 (-date) 101 SB
525 1344 993 (Use 'dd month yy' in place of 'yyddd' on the clock.) 993 SB
375 1394 319 (-font xfontname) 319 SB
375 1444 467 (-font glfontname height) 467 SB
525 1494 1059 (Set the font used for the clock and text labels in the 3) 1059 SB
1584 1494 432 (-D window.  You can) 432 SB
525 1544 1607 (determine which form of the font option is used on your system by typing \221vis5d\222) 1607 SB
525 1594 652 (alone and examining the options.) 652 SB
525 1644 1562 (The first form expects the name of an X window system font.  Use the xlsfonts) 1562 SB
525 1694 972 (command to see a list of X fonts on your system.) 972 SB
525 1744 1616 (The second form expects the name and size \(72=1 inch\) of an IRIS GL font.  Use) 1616 SB
525 1794 1506 (the listfonts command included with Vis5D to see a list of GL fonts on your) 1506 SB
525 1844 148 (system.) 148 SB
525 1894 851 (Example 1:  vis5d LAMPS.v5d -font fg-30) 851 SB
525 1944 994 (Example 2:  vis5d LAMPS.v5d -font Helvetica 30) 994 SB
375 1994 81 (-full) 81 SB
525 2044 1255 (Open the 3-D window as a borderless, full-screen size window.) 1255 SB
375 2094 393 (-funcpath pathname) 393 SB
525 2144 1142 (Specify the directory to search for user Fortran functions.) 1142 SB
525 2194 1288 (Example  vis5d LAMPS.v5d -funcpath /usr/local/vis5d/userfuncs) 1288 SB
375 2244 870 (-geometry WxH+X+Y  \(or WxH or +X+Y\)) 870 SB
525 2294 825 (Specify the geometry of the 3-D window.) 825 SB
525 2344 1118 (Example  vis5d LAMPS.v5d -geometry 640x480-10+10) 1118 SB
375 2394 203 (-hirestopo) 203 SB
525 2444 1627 (Display a high-resolution topography.  This is only recommended on systems with) 1627 SB
525 2494 461 (fast graphics hardware.) 461 SB
375 2544 407 (-legend position size) 407 SB
525 2594 1595 (Set color legend position and size.  Position values are 1 \(bottom, the default\), 2) 1595 SB
525 2644 1616 (\(top\), 3 \(left\) and 4 \(right\).  Size is the height of the legend bar and is between 10) 1616 SB
525 2694 483 (and 1000 \(default=128\).) 483 SB
375 2744 220 (-log [a] [b]) 220 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (31) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
525 220 1609 (Display height on a logarithmic axis instead of linear.  This is discussed in section) 1609 SB
525 270 1538 (3.2.  The optional arguments a and b are the scale and exponent factors in the) 1538 SB
525 320 1446 (height/pressure equation.  The defaults are 1012.5 and -7.2, respectively.) 1446 SB
375 370 175 (-map file) 175 SB
525 420 1607 (Use a map file other than the default of OUTLSUPW.  See section 2.4 to setup a) 1607 SB
525 470 329 (different default.) 329 SB
525 520 972 (Example:  vis5d LAMPS.v5d -map OUTLUSAL) 972 SB
375 570 134 (-mbs n) 134 SB
525 620 1575 (Override the assumed system memory size of 32 megabytes.  See section 2.4 to) 1575 SB
525 670 601 (setup a different default value.) 601 SB
375 720 307 (-path pathname) 307 SB
525 770 1289 (Use a different path for map and topo files instead of the current.) 1289 SB
525 820 910 (Example:  vis5d LAMPS.v5d -path /usr3/data) 910 SB
375 870 256 (-projection p) 256 SB
525 920 1581 (Set the display map projection, default is to display data in its natural projection) 1581 SB
525 970 570 (\(obtained from the data file\).) 570 SB
525 1020 332 (p may be one of:) 332 SB
675 1070 203 (cylindrical) 203 SB
975 1070 701 (- display data on a cylindrical Earth) 701 SB
675 1120 175 (spherical) 175 SB
975 1120 673 (- display data on a spherical Earth) 673 SB
525 1170 1477 (Only the first 3 characters are significant/needed.  You will be promted for) 1477 SB
525 1220 439 (additional parameters.) 439 SB
525 1270 1002 (Example:  vis5d LAMPS.v5d -projection spherical) 1002 SB
375 1320 214 (-quickstart) 214 SB
525 1370 1476 (Don\222t load any grids when starting vis5d, even if the whole file will fit into) 1476 SB
525 1420 1594 (memory.  The grids will be read as needed.  This option is useful when reading a) 1594 SB
525 1470 249 (file via NFS.) 249 SB
375 1520 162 (-rate ms) 162 SB
525 1570 1500 (Change the default animation rate.  ms is the minimum delay in milliseconds) 1500 SB
525 1620 710 (between frames.  Default is 100 ms.) 710 SB
375 1670 312 (-script script.tcl) 312 SB
525 1720 1065 (Specifies a Vis5D/Tcl script to execute automatically.) 1065 SB
375 1770 377 (-sequence filename) 377 SB
525 1820 1591 ([not available on all systems]  Specifies a file containing a sequence of images to) 1591 SB
525 1870 1461 (texture map over the topography.  See section 6.15 for more information.) 1461 SB
375 1920 297 (-texture rgbfile) 297 SB
525 1970 1545 ([not available on all systems]  Specify an SGI .rgb file to texture map over the) 1545 SB
525 2020 1035 (topography.  See section 6.15 for more information.) 1035 SB
375 2070 183 (-topo file) 183 SB
525 2120 1636 (Use a topography file other than the default of EARTH.TOPO.  See section 2.4 to) 1636 SB
525 2170 483 (setup a different default.) 483 SB
375 2220 512 (-trajvars uvar vvar [wvar]) 512 SB
525 2270 1584 (Specify which variables are to be used for trajectory tracing.  Defaults are U, V,) 1584 SB
525 2320 143 (and W.) 143 SB
525 2370 993 (Example:  vis5d LAMPS.v5d -trajvars U2 V2 W2) 993 SB
375 2420 200 (-vertical v) 200 SB
525 2470 1338 (Set the vertical coordinate system, default is obtained from datafile.) 1338 SB
525 2520 331 (v may be one of:) 331 SB
675 2570 144 (generic) 144 SB
975 2570 892 (- linear, equally spaced levels in generic units) 892 SB
675 2620 106 (equal) 106 SB
975 2620 702 (- linear, equally spaced levels in km) 702 SB
675 2670 180 (nonequal) 180 SB
975 2670 751 (- linear, unequally spaced levels in km) 751 SB
525 2720 1593 (Only the first 3 characters of v are significant/needed.  You will be prompted for) 1593 SB
525 2770 439 (additional parameters.) 439 SB
525 2820 952 (Example:  vis5d LAMPS.v5d -vertical nonequal) 952 SB
375 2870 301 (-wdpy xdisplay) 301 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (32) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
525 220 1526 (Put the widgets on a different X display.  Useful in combination with -full for) 1526 SB
525 270 505 (making slides and videos.) 505 SB
525 320 971 (Example:  vis5d LAMPS.v5d -full -wdpy pluto:0) 971 SB
375 370 161 (-wide w) 161 SB
525 420 1532 (Set width of line segments in pixels \(default is 1.0\).  Again, useful for making) 1532 SB
525 470 141 (videos.) 141 SB
525 520 784 (Example:  vis5d LAMPS.v5d -wide 3.0) 784 SB
375 570 486 (-wind2 uvar vvar [wvar]) 486 SB
525 620 1638 (Specify the names of a secondary set of U, V, and \(optionally\) W wind component) 1638 SB
525 670 1519 (variables to use when drawing the Hwind2, Vwind2 and Strm2 vector slices.) 1519 SB
525 720 1514 (Useful when you have two sets of wind vector components that you want to) 1514 SB
525 770 489 (visualize simultaneously.) 489 SB
525 820 932 (Example:  vis5d MYDATA -wind2 U2 V2 W2) 932 SB
375 970 1710 (Most of the above arguments can also be changed by entering the 'Options' menu after) 1710 SB
225 1020 1277 (pressing the 'DISPLAY' button found on the main control panel.) 1277 SB
375 1120 1796 (If you start vis5d without arguments you will get a list of all the command line options and) 1796 SB
225 1170 1435 (keyboard functions.  Otherwise, vis5d will begin by reading the data file.) 1435 SB
375 1270 1732 (Previous versions of vis5d required that the entire file be read into main memory; if you) 1732 SB
225 1320 1801 (didn't have sufficient memory you couldn't visualize the file.  In version 4.0 and higher, this) 1801 SB
225 1370 1713 (restriction is lifted; you may visualize files which are larger than main memory.  This is) 1713 SB
225 1420 1838 (implemented with a grid cache: vis5d reads data only when needed and discards it on a least-) 1838 SB
225 1470 1650 (recently-used basis.  Small files will be read in their entirety as in previous versions.) 1650 SB
375 1570 1768 (For the user, this means vis5d will allow you to visualize large files even with only 32MB) 1768 SB
225 1620 1863 (of main memory.  However, performance will degrade as the ratio of file size to main memory) 1863 SB
225 1670 1920 (size increases.  If you observe sluggish performance and a lot of disk activity while running vis5d) 1920 SB
225 1720 596 (you should get more memory.) 596 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1869 481 (6.2  The Control Panel) 481 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1970 1775 (After vis5d has opened/read your file/s, two windows will appear:  a large window on the) 1775 SB
225 2020 1929 (right containing one or more 3-D display windows and the current control panel on the left of the) 1929 SB
225 2070 1909 (screen.  The 3-D window/s are used to view and interact with the data.  When there are multiple) 1909 SB
225 2120 1885 (3-D display windows a control panel is assigned to each.  The current control panel will appear) 1885 SB
225 2170 1949 (when ever a mouse event occurs in the associated 3-D display.  In the upper-left corner of the 3-D) 1949 SB
225 2220 1885 (display is a combination analog/digital clock which indicates the current time step.  The control) 1885 SB
225 2270 811 (panel contains several groups of buttons.) 811 SB
375 2370 1439 (Starting at the top, the first button group contains the following buttons:) 1439 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
225 2476 1410 (          [ANIMATE]  [STEP]     NEW VAR    EXIT) 1410 SB
225 2526 1410 (          [TEXTURE]  TOP        SOUTH      WEST) 1410 SB
225 2576 1440 (          [TOPO]     [MAP]      BOX        CLOCK) 1440 SB
225 2626 1530 (          SAVE       RESTORE    GRID #'s   CONT #'s) 1530 SB
225 2676 1560 (          [ANIM-REC] REVERSE    [SAVE PIC] [PERSPEC]) 1560 SB
225 2726 1500 (          SCRIPT     INTERP     UVW VARS   LEGENDS) 1500 SB
225 2776 840 (          IMPORT     DISPLAY) 840 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (33) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1684 (These buttons are used to control the primary functions of vis5d.  Some of the above) 1684 SB
225 270 1900 (buttons are enclosed in brackets [] to indicates that they may be blank upon starting vis5d.  This) 1900 SB
225 320 1849 (will happen when the button does not apply to the current data set, because the button would) 1849 SB
225 370 1861 (conflict with a command line option, or because the feature is not available on your hardware.) 1861 SB
375 470 1688 (The next group of radio buttons control the viewing mode which determines how the) 1688 SB
225 520 677 (mouse is used in the 3-D window:) 677 SB
375 620 150 (Normal) 150 SB
675 620 1318 (Normal mouse mode is used to rotate, zoom, and pan the graphics) 1318 SB
675 670 148 (in the 3) 148 SB
823 670 578 (-D window.  See section 6.4.) 578 SB
375 770 207 (Trajectory) 207 SB
675 770 1253 (This mode is used for creating and displaying wind trajectories.) 1253 SB
675 820 314 (See section 6.8.) 314 SB
375 920 96 (Slice) 96 SB
675 920 1308 (This mode is used to reposition horizontal and vertical slices.  See) 1308 SB
675 970 229 (section 6.6.) 229 SB
375 1070 110 (Label) 110 SB
675 1070 1327 (This mode is used to create and edit text labels in the 3-D window.) 1327 SB
675 1120 339 (See section 6.10.) 339 SB
375 1220 117 (Probe) 117 SB
675 1220 1345 (This mode is used to inspect individual grid values by moving a 3-D) 1345 SB
675 1270 930 (cursor through the 3-D grid.  See section 6.11.) 930 SB
375 1370 189 (Sounding) 189 SB
675 1370 1312 (This mode is used to display a vertical sounding and SkewT at the) 1312 SB
675 1420 1126 (location of a moveable vertical cursor.  See section 6.12.) 1126 SB
375 1520 168 (Clipping) 168 SB
675 1520 1335 (This mode is used to reposition the six clipping planes.  See section) 1335 SB
675 1570 101 (6.18.) 101 SB
375 1670 1589 (These modes are mutually exclusive; only one may be selected at a time.  To the) 1589 SB
225 1720 1911 (immediate right of these buttons is the mouse button legend.  It is there to remind you of the use) 1911 SB
225 1770 1457 (of each mouse button in the 3-D window for the currently selected mode.) 1457 SB
225 1870 498 (Next are buttons labeled:) 498 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
225 1976 1650 (      Hwind1   Vwind1   HStrm   Hwind2   Vwind2   VStrm) 1650 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2070 1796 (A wind vector slice \(Hwind or Vwind\) depicts wind values by drawing small arrows which) 1796 SB
225 2120 1900 (point in the direction of the wind.  The length of each line segment indicates its magnitude.  The) 1900 SB
225 2170 1866 (tails of the line segments are all anchored within a horizontal or vertical plane through the 3-D) 1866 SB
225 2220 1939 (box.  The horizontal wind streamline slice \(HStrm\) depicts wind values by drawing streamlines on) 1939 SB
225 2270 1867 (a horizontal plane.  The vertical wind streamline slice \(VStrm\) depicts wind values by drawing) 1867 SB
225 2320 1927 (streamlines on a vertical plane.  The location of slice planes can be changed with the mouse while) 1927 SB
225 2370 987 (in "Slice" mode.  See section 6.5 for more details.) 987 SB
375 2470 1773 (The bottom part of the control panel window contains a 2-D matrix of buttons. Each row) 1773 SB
225 2520 1820 (corresponds to a physical variable in your dataset.  Each column corresponds to one type of) 1820 SB
225 2570 1934 (graphical representation.  By selecting the correct row and column you can view any variable as a) 1934 SB
225 2620 1885 (3-D isosurface, horizontal contour slice, vertical contour slice, horizontal colored slice, vertical) 1885 SB
225 2670 1892 (colored slice, or volume rendering.  This matrix of button is scrollable if there are more rows of) 1892 SB
225 2720 1842 (buttons than will fit in the window.  You can use the mouse to drag the scrollbar or press the) 1842 SB
225 2770 1316 (up/down arrow keys on your keyboard to scroll the button matrix.) 1316 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (34) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1774 (When multiple data sets are viewed in the same display a period and an index number will) 1774 SB
225 270 1870 (be appended to the end of each variable name.  This will be a common notation seen in several) 1870 SB
225 320 1112 (display widgets when ever multiple data sets are loaded.) 1112 SB
375 420 1672 (The display of any graphic is controlled by clicking on its widget button with the left) 1672 SB
225 470 1939 (mouse button.  Each type of graphic also has a small pop-up control window which appears when) 1939 SB
225 520 1898 (turned on.  The control windows are different for each type of graphic and are explained below.) 1898 SB
225 570 1946 (To bring up a graphic's control window without toggling its display, use the middle mouse button.) 1946 SB
225 620 1861 (When the graphic is displayed it will be the same color as the widget button, making it easy to) 1861 SB
225 670 1943 (distinguish and identify different variables in the display.  To change the color of the graphic, click) 1943 SB
225 720 1937 (on its widget button with the right mouse button and a small window with four slider widgets will) 1937 SB
225 770 1575 (appear.  By changing the levels of red, green, and blue you can make any color.) 1575 SB
375 870 1761 (If the control panel window becomes obscured by other windows, you can bring it to the) 1761 SB
225 920 1856 (top by pressing the "F1" key while the mouse pointer is in the 3-D window.  This is especially) 1856 SB
225 970 693 (useful when using the '-full' option.) 693 SB
375 1070 1763 (When mutliple data sets are displayed in different displays there is the option of grouping) 1763 SB
225 1120 1877 (these them together.  This synchronizes the control of one display with the others.  See section) 1877 SB
225 1170 530 (6.19 for more information.) 530 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1319 445 (6.3 Controlling vis5d) 445 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1420 1719 (The topmost group of buttons in the control panel operate the main functions of vis5d.) 1719 SB
225 1470 857 (Some will be discussed in more detail later.) 857 SB
375 1570 229 (ANIMATE) 229 SB
675 1570 1472 (This toggle button turns animation on or off. Use the left or middle mouse) 1472 SB
675 1620 1372 (buttons for forward animation and the right mouse button for reverse) 1372 SB
675 1670 1423 (animation.  Does not appear when viewing data sets with one time step.) 1423 SB
675 1720 1317 (To make the animation slower or faster, hit the S and F key on the) 1317 SB
675 1770 941 (keyboard while the mouse cursor is inside the 3) 941 SB
1616 1770 406 (-D viewing window.) 406 SB
375 1870 118 (STEP) 118 SB
675 1870 1428 (This button has three possible uses depending on which mouse button is) 1428 SB
675 1920 163 (pressed:) 163 SB
750 1970 772 (Left Button - Step ahead one time step) 772 SB
750 2020 747 (Middle Button - Go to first time step.) 747 SB
750 2070 796 (Right Button - Backward one time step.) 796 SB
675 2120 1420 (This button does not appear when viewing data sets with one time step.) 1420 SB
375 2220 230 (NEW VAR) 230 SB
675 2220 1455 (Used to duplicate physical variables or invoke external analysis functions.) 1455 SB
675 2270 795 (This is explained further in section 6.13.) 795 SB
375 2370 115 (EXIT) 115 SB
675 2370 1319 (Exit the program.  A window will appear to ask you to verify your) 1319 SB
675 2420 175 (decision.) 175 SB
375 2520 229 (TEXTURE) 229 SB
675 2520 1488 (Toggles display of texture maps on/off if they are loaded.  See section 6.15) 1488 SB
675 2570 429 (for more information.) 429 SB
375 2670 95 (TOP) 95 SB
675 2670 913 (Depending on which mouse button is pressed:) 913 SB
750 2720 1259 (Left or Middle:  Reset the 3-D window to the default top-view.) 1259 SB
750 2770 920 (Right:  Set the 3-D window to a bottom-view.) 920 SB
375 2870 167 (SOUTH) 167 SB
675 2870 913 (Depending on which mouse button is pressed:) 913 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (35) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
750 220 981 (Left or Middle: Set 3-D window to a south-view.) 981 SB
750 270 809 (Right:  Set 3-D window to a north-view.) 809 SB
375 370 136 (WEST) 136 SB
675 370 913 (Depending on which mouse button is pressed:) 913 SB
750 420 977 (Left or Middle:  Set 3-D window to a west-view.) 977 SB
750 470 805 (Right:  Set 3-D window to an east-view.) 805 SB
375 570 131 (TOPO) 131 SB
675 570 1351 (Toggle the display of topography.  This button will not appear if the) 1351 SB
675 620 1370 (topography file was not found.  Click on TOPO with the right mouse) 1370 SB
675 670 714 (button to edit the topography color.) 714 SB
375 770 107 (MAP) 107 SB
675 770 1480 (Toggle the display of map lines.  This button will not appear if the map file) 1480 SB
675 820 1388 (was not found.  Click on MAP with the right mouse button to edit the) 1388 SB
675 870 443 (color of the map lines.) 443 SB
375 970 105 (BOX) 105 SB
675 970 685 (Toggle the display of the 3-D box.) 685 SB
375 1070 167 (CLOCK) 167 SB
675 1070 627 (Toggle the display of the clock.) 627 SB
375 1170 130 (SAVE) 130 SB
675 1170 1289 (Save current graphics and colors.  After you've setup a variety of) 1289 SB
675 1220 1482 (isosurfaces, slice, wind trajectories and colors it is useful to be able to save) 1482 SB
675 1270 1424 (them and restore them the next time the data set is visualized.  You'll be) 1424 SB
675 1320 1443 (prompted for a filename.  The file format, as of Vis5D 4.2 is a Tcl script.) 1443 SB
675 1370 768 (See section 6.16 for more information.) 768 SB
375 1470 223 (RESTORE) 223 SB
675 1470 1466 (Restore the information save with the SAVE button.  See section 6.16 for) 1466 SB
675 1520 358 (more information.) 358 SB
375 1620 179 (GRID #s) 179 SB
675 1620 1435 (Normally the bounds of the data set in latitude, longitude and kilometers) 1435 SB
675 1670 1416 (are displayed along the edges of the box.  Use this button to display the) 1416 SB
675 1720 717 (numbers in grid coordinates instead.) 717 SB
375 1820 193 (CONT #s) 193 SB
675 1820 1455 (The numbers which are drawn on contour line slices can be toggled on or) 1455 SB
675 1870 394 (off with this button.) 394 SB
375 1970 280 ([ANIM-REC]) 280 SB
675 1970 1364 (This button works just like ANIMATE but allows fast animations on) 1364 SB
675 2020 1377 (system with slow 3-D rendering.  After each time step is rendered the) 1377 SB
675 2070 1428 (image is saved in memory.  When the animation loop repeats the images) 1428 SB
675 2120 1428 (are quickly copied from memory to the 3-D window resulting in a faster) 1428 SB
675 2170 207 (animation.) 207 SB
375 2270 223 (REVERSE) 223 SB
675 2270 1252 (Normally, the 3-D box and clock are drawn in white on a black) 1252 SB
675 2320 1488 (background.  This option reverses that and draws a black box and clock on) 1488 SB
675 2370 1262 (a white background.  This is useful for making paper print outs.) 1262 SB
375 2470 221 (SAVE PIC) 221 SB
675 2470 1488 (Used to save the image in the 3-D or sounding window to a file.  When the) 1488 SB
675 2520 1425 ('Sounding' mode is chosen from the radio widgets the sounding window) 1425 SB
675 2570 1434 (will be saved.  If any other mode such as 'Normal' or 'Slice' is chosen the) 1434 SB
675 2620 25 (3) 25 SB
700 2620 1452 (-D window \(including all displays if multiple displays exist\) will be saved.) 1452 SB
675 2670 1444 (Depending on what system you're using a number of different picture file) 1444 SB
675 2720 1345 (formats are supported.  On SGI systems be sure you have the 'tops',) 1345 SB
675 2770 1443 ('frombin', and 'togif' program installed from your IRIX CD-ROM.  When) 1443 SB
675 2820 1234 (using OpenGL on SGIs the 'fromxwd' program is also needed.) 1234 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (36) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
675 220 1438 (Unfortunately there is a bug in this program which often causes it to fail.) 1438 SB
675 270 1238 (Included with vis5d however is a patched version of fromxwd.) 1238 SB
375 370 212 (PERSPEC) 212 SB
675 370 1285 (Toggle between perspective and orthogonal viewing projections.) 1285 SB
375 470 170 (SCRIPT) 170 SB
675 470 1499 (Used to run Vis5D Tcl scripts.  When you click on this button a file request) 1499 SB
675 520 1323 (will appear in which you can select the Tcl script to run.  For more) 1323 SB
675 570 573 (information see section 6.16.) 573 SB
375 670 176 (INTERP) 176 SB
675 670 1412 (Starts the Vis5D interactive interpreter.  In your shell window you may) 1412 SB
675 720 1489 (then enter Tcl commands.  Vis5D will be suspended while the interpreter is) 1489 SB
675 770 1490 (active.  Type 'exit' to exit the interpreter.  For more information see section) 1490 SB
675 820 101 (6.16.) 101 SB
375 920 263 (UVW VARS) 263 SB
675 920 1491 (Opens a window in which you can specify the names of the variables to use) 1491 SB
675 970 842 (for computing trajectories and wind slices.) 842 SB
375 1070 228 (LEGENDS) 228 SB
675 1070 1179 (Toggles the display of colorbar legends in the 3-D window.) 1179 SB
375 1170 189 (IMPORT) 189 SB
675 1170 1478 (Invokes the import utility program for bringing new data sets into a Vis5D) 1478 SB
675 1220 1105 (session.  For more information see sections 7.1 and 7.2.) 1105 SB
375 1320 210 (DISPLAY) 210 SB
675 1320 1465 (Opens a window which allows you manipulate the assignment of data sets) 1465 SB
675 1370 1382 (to display windows and change various values associated with display) 1382 SB
675 1420 975 (windows.  For more information see section 6.20) 975 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1569 406 (6.4 Viewing Modes) 406 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1670 1662 (In 'Normal' mouse mode the mouse is used to view the data in the 3-D window.  By) 1662 SB
225 1720 1908 (pressing the left mouse button and moving the mouse while the cursor is in the 3-D window, the) 1908 SB
225 1770 1790 (3-D image can be rotated.  At any instant you can only control two of the three degrees of) 1790 SB
225 1820 1896 (freedom of box rotations.  However, by releasing and re-pressing the left mouse button you can) 1896 SB
225 1870 1939 (change your "grip" on the box.  With practice you will learn to control the box through a series of) 1939 SB
225 1920 1412 (mouse moves, releasing and re-pressing the left button between moves.) 1412 SB
375 2020 1668 (The center button controls two very different things depending on how the mouse is) 1668 SB
225 2070 1851 (moved.  Holding the center button down and sliding the mouse away from yourself zooms in,) 1851 SB
225 2120 1937 (making the box get bigger.  Sliding the mouse towards yourself zooms out and makes the box get) 1937 SB
225 2170 1925 (smaller.  Holding the center button down and sliding the mouse right moves a plane of invisibility) 1925 SB
225 2220 1832 (\(i.e. a clipping plane\) into the box, creating a cut away view of the box contents.  Sliding the) 1832 SB
225 2270 1775 (mouse left brings the clipping plane toward yourself, eventually out of the box altogether.) 1775 SB
375 2370 1791 (The right mouse button is pressed to translate the box in the window.  This is useful if you) 1791 SB
225 2420 1939 (want to zoom in to something that is not in the center of the box.  Note that the center of rotation) 1939 SB
225 2470 1685 (for box rotations stays at the center of the screen rather than in the center of the box.) 1685 SB
375 2570 1540 (The other five viewing modes will be discussed in detail in following sections.) 1540 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2719 311 (6.5 Isosurfaces) 311 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (37) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1661 (An isosurface \(3-D contour surface\) shows the 3-D volume bounded by a particular) 1661 SB
225 270 1921 (isovalue.  The isosurface has the specified iso-level, the volume inside contains values greater \(or) 1921 SB
225 320 1870 (less\) than the isovalue.  The volume outside contains values less \(or greater\) than the isovalue.) 1870 SB
375 420 1665 (The first column of buttons in the control panel's button matrix controls isosurfaces.) 1665 SB
225 470 1938 (Clicking on one of these buttons with the left mouse button causes a pop-up window with a slider) 1938 SB
225 520 1888 (and OK button to appear below.  Select an isovalue on the slider and click on the OK button to) 1888 SB
225 570 795 (generate an isosurface for all time steps.) 795 SB
375 670 1696 (Toggling ANIMATE on will let you watch the time dynamics of the iso-level contour) 1696 SB
225 720 1948 (surfaces.  Note that the surfaces are generated asynchronously with the animation, so you may not) 1948 SB
225 770 1947 (see the surfaces for all the time steps as the clock hand makes it revolution.  The new surfaces will) 1947 SB
225 820 783 (appear on successive clock revolutions.) 783 SB
375 920 1741 (Clicking on an isosurface button with the middle mouse button will summon the pop-up) 1741 SB
225 970 932 (window without toggling the surface on or off.) 932 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1119 463 (6.5.1 Isosurface Color) 463 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1220 1789 (An isosurface may either be drawn entirely in one color or colored according to the values) 1789 SB
225 1270 557 (of another physical variable.) 557 SB
375 1370 1749 (To change the color of an isosurface, click on the appropriate isosurface button with the) 1749 SB
225 1420 1909 (right mouse button.  A window will appear with a column of variable names \(first button labeled) 1909 SB
225 1470 1441 ("monocolor"\) and four sliders labeled red, green, blue, and transparency.) 1441 SB
375 1570 1722 (By default, monocoloring is used.  To change the isosurfaces's color just move the red,) 1722 SB
225 1620 455 (green, and blue sliders.) 455 SB
375 1720 1766 (If you click on a button other than "monocolor" you will tell vis5d to draw the isosurface) 1766 SB
225 1770 1878 (according to another physical variable.  The red,green,blue sliders will be replaced with a color) 1878 SB
225 1820 1915 (table editor.  You can change the color table \(which maps data values to colors\) by drawing new) 1915 SB
225 1870 1922 (curves with the mouse or by pressing the up, down, left, and right cursor keys on your keyboard.) 1922 SB
375 1970 1761 (As an example, suppose you're viewing the LAMPS.v5d data set.  Make an isosurface of) 1761 SB
225 2020 1885 (wind speed at 40 m/s.  The isosurface should be blue.  Click on the SPD isosurface button with) 1885 SB
225 2070 1910 (your right mouse button.  The color window appears.  Click on the T button in that window and) 1910 SB
225 2120 1916 (the isosurface will now be colored according to temperature.  You can modify the mapping from) 1916 SB
225 2170 1808 (temperature values to colors by "drawing" the red, green, and blue curves in the color table) 1808 SB
225 2220 1813 (window with the mouse buttons or by pressing the cursor keys.  Changing the color table is) 1813 SB
225 2270 1132 (explained more below in the section about colored slices.) 1132 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2519 194 (6.6 Slices) 194 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2620 1761 (Slices allow you to look at planar cross sections of data in the 3-D box.  These slices can) 1761 SB
225 2670 1861 (be oriented either horizontally or vertically and may depict either contour lines, colored slices,) 1861 SB
225 2720 694 (wind vectors, or wind stream lines.) 694 SB
375 2820 1730 (As described in section 6.1, the last group of buttons on the control panel is a matrix of) 1730 SB
225 2870 1894 (buttons, the second through fifth columns of which control slices.  There is a column of buttons) 1894 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (38) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 220 1931 (for horizontal contour slices, vertical contour slices, horizontal colored slices and vertical colored) 1931 SB
225 270 1882 (slices, respectively.  If your data set contains U, V, and W variables, there will also be a row of) 1882 SB
225 320 1870 (wind vector slice buttons as described in 6.2.  There are two buttons for horizontal wind slices) 1870 SB
225 370 794 (and two buttons for vertical wind slices.) 794 SB
375 470 1697 (To activate/turn on a slice, click on the appropriate widget button with the left mouse) 1697 SB
225 520 1940 (button.  The initial position for slices is the middle of the box.  The exact slice location in terms of) 1940 SB
225 570 1946 (latitude, longitude or elevation is given by a small numeric labels near the one corner of each slice.) 1946 SB
225 620 1946 (To print the numbers as grid coordinates instead of geographic coordinates, toggle the "GRID #s") 1946 SB
225 670 700 (widget button on the control panel.) 700 SB
375 770 1742 (The position of slices can be changed interactively using the mouse.  To do so you must) 1742 SB
225 820 1909 (first be in SLICE mode by selecting the SLICE radio button.  To move any slice, simply point at) 1909 SB
225 870 1832 (the slice's corner with the mouse, press the right mouse button and drag it to a new position.) 1832 SB
225 920 1903 (Vertical slices may also be moved in a perpendicular motion by "grabbing" the middle of the top) 1903 SB
225 970 1918 (or bottom edge and dragging it.  A slice may be moved while in animation mode, however, some) 1918 SB
225 1020 1414 (jumpiness may occur because new slices are computed asynchronously.) 1414 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1169 535 (6.6.1 Contour Line Slices) 535 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1270 1774 (When viewing a horizontal or vertical contour line slice \(button columns two and three\) a) 1774 SB
225 1320 1870 (small control window will appear as well.  In this pop-up window you can enter the interval to) 1870 SB
225 1370 1845 (use between contour lines.  Just type in a new number to change the interval.  Decreasing the) 1845 SB
225 1420 1805 (interval will cause denser contour lines to be generated, increasing the interval will result in) 1805 SB
225 1470 256 (sparser lines.) 256 SB
375 1570 1747 (If you enter a negative interval then all contour lines with a negative value will be drawn) 1747 SB
225 1620 1366 (with dashed lines while positive values will be drawn with solid lines.) 1366 SB
375 1720 1681 (Optionally, after the interval value you may specify a range of values \(a,b\) which will) 1681 SB
225 1770 1770 (cause only contour values between a and b to be drawn.  For example, suppose you enter) 1770 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1876 360 (-10 \(-30,20\)) 360 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1970 1012 (This will result in contour lines for values between ) 1012 SB
1237 1970 840 (-30 and 20 at intervals of 10 with negative) 840 SB
225 2020 545 (lines drawn as dashed lines.) 545 SB
375 2120 1734 (The "CONT #s" button on the control panel toggles the display of the contour numbers) 1734 SB
225 2170 310 (within the slice.) 310 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2319 415 (6.6.2 Colored Slices) 415 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2420 1700 (When a viewing a horizontal or vertical colored slice \(button columns four and five\) a) 1700 SB
225 2470 1887 (color table window will appear.  In this pop-up window you can change the mapping from data) 1887 SB
225 2520 1864 (values to colors.  If the LEGENDS control panel button is selected the color table will also be) 1864 SB
225 2570 752 (displayed in the 3-D viewing window.) 752 SB
375 2670 1674 (The window shows graphs of red, green, and blue over the range of data values.  To) 1674 SB
225 2720 1925 (change the red, green, or blue function press the left, middle, or right mouse button, respectively,) 1925 SB
225 2770 1917 (and drag the mouse to draw a new function.  By default, low data values are mapped to blue and) 1917 SB
225 2820 706 (high data values are mapped to red.) 706 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (39) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1735 (Instead of using the mouse you can use the keyboard cursor \(arrow\) keys to modify the) 1735 SB
225 270 1936 (shape and position of the default function curves.  Press the left/right keys to move the curves left) 1936 SB
225 320 1345 (or right.  Press the up/down keys to change the shape of the curves.) 1345 SB
375 420 1764 (You may also change the transparency of the slice as a function of the data values.  Press) 1764 SB
225 470 1837 (and hold the SHIFT key while using the mouse or up/down keys to change the transparency.) 1837 SB
225 570 1484 (There are a number of other keyboard controls for the color table window:) 1484 SB
375 620 17 (r) 17 SB
525 620 625 (reset red, green and blue values) 625 SB
375 670 33 (R) 33 SB
525 670 497 (reset transparency values) 497 SB
375 720 22 (c) 22 SB
525 720 735 (copy color to an off-screen clipboard) 735 SB
375 770 25 (p) 25 SB
525 770 830 (paste colors from the off-screen clipboard) 830 SB
375 820 19 (s) 19 SB
525 820 1235 (save color values to a file, enter filename in your shell window) 1235 SB
375 870 12 (l) 12 SB
525 870 1287 (load color values from a file, enter filename in your shell window) 1287 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1019 521 (6.6.3 Wind Vector Slices) 521 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1120 1680 (Wind vector slices are displayed with the buttons near the center of the control panel) 1680 SB
225 1170 1783 (labeled HWIND-1, VWIND-1, HWIND-2 and VWIND-2.  The pop-up window for these) 1783 SB
225 1220 1883 (graphics contains two type-in fields to control the density and scaling of the wind vectors.  The) 1883 SB
225 1270 1921 (scale parameter is used to multiply the length of vectors drawn.  If you want to double the length) 1921 SB
225 1320 1810 (of all vectors, enter 2.0.  If you want to halve the lengths, enter 0.5.  The density parameter) 1810 SB
225 1370 1943 (controls how many wind vectors are displayed.  This value can only be between zero and one.  To) 1943 SB
225 1420 1940 (make one-half the number of vectors, enter 0.5, for one-fourth enter 0.25, etc.  The default values) 1940 SB
225 1470 524 (for both parameters is 1.0.) 524 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1569 532 (6.6.4 Wind Stream Slices) 532 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1670 1646 (Wind stream slices show the path of wind as connected line segments.  The pop-up) 1646 SB
225 1720 1939 (control window contains a type-in widget to control the density of streamlines \(note that the scale) 1939 SB
225 1770 1946 (parameter is not used\).  The density parameter controls how many streamlines are displayed.  This) 1946 SB
225 1820 1940 (value can only be between 0.5 and 2.0.  To make one-half the number of streamlines, enter 0.5, to) 1940 SB
225 1870 1588 (make twice the number of streamlines, enter 2.0, etc.  The default density is 1.0.) 1588 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1969 351 (6.6.5 Slice colors) 351 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2070 1699 (The color of a slice's control button matches that of the slice itself \(except for colored) 1699 SB
225 2120 1871 (slices for which the slice's tick mark matches the slice's button.\)  To change the color of a slice) 1871 SB
225 2170 1815 (click on the slice's button with the right mouse button.  A window with red, green, and blue) 1815 SB
225 2220 1134 (sliders will appear.  Move the sliders to change the color.) 1134 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2369 478 (6.7 Volume Rendering) 478 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2470 1780 (Volume rendering is a technique for displaying a 3-dimensional field as a semi-transparent) 1780 SB
225 2520 1834 (colored fog.  Though volume renderings of some physical variables don't look, others can be) 1834 SB
225 2570 1093 (displayed very effectively with the right color mapping.) 1093 SB
375 2670 1766 (The volume rendering feature is available in Vis5D on almost all systems.  One exception) 1766 SB
225 2720 1814 (is older SGI computers using IRIS GL which don't support alpha blending.  Be warned that) 1814 SB
225 2770 1908 (systems without 3-D graphics hardware \(i.e. those using Mesa\) will render volumes very slowly.) 1908 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (40) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1750 (The sixth column of buttons on the control panel are the volume buttons.  Only one may) 1750 SB
225 270 1936 (be displayed at a time.  When a volume rendering is activated a pop-up window with a color table) 1936 SB
225 320 1884 (appears.  This color table is used in exactly the same way as described for colored slices above.) 1884 SB
225 370 1841 (That is, using the mouse or keyboard you can change the function which maps data values to) 1841 SB
225 420 1908 (color and transparency.  Again, the transparency can be changed while holding down the SHIFT) 1908 SB
225 470 1411 (key and drawing a curve with the mouse or pressing the up/down keys.) 1411 SB
225 570 1936 (For those who are curious about the implementation of this feature, the volume rendering is made) 1936 SB
225 620 214 (as follows:) 214 SB
375 670 38 (1.) 38 SB
450 670 1707 (Examine the current viewing transformation to determine which axis of the 3-D box is) 1707 SB
450 720 823 (most nearly parallel to the view direction.) 823 SB
375 770 38 (2.) 38 SB
450 770 1686 (Create a number of colored slices perpindicular to that axis which map data values to) 1686 SB
450 820 377 (colors and opacity.) 377 SB
375 870 38 (3.) 38 SB
450 870 1599 (Render the colored slices in back to front order.  The alpha values at vertices are) 1599 SB
450 920 1569 (interpolated and blended to make smooth transitions between and within slices.) 1569 SB
375 1020 1732 (Despite the simplicity of the algorithm, most fields are rendered acceptably.  Those that) 1732 SB
225 1070 1804 (aren't can be improved by adjusting the color and opacity mappings.  While more attractive) 1804 SB
225 1120 1837 (volume rendering techniques are known, this technique can be implemented quickly on many) 1837 SB
225 1170 167 (systems.) 167 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1319 467 (6.8 Wind Trajectories) 467 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1420 1795 (Wind trajectories trace the motion of air through the 3-D volume much line smoke trails in) 1795 SB
225 1470 1882 (a wind tunnel.  To enter trajectory mode select the TRAJECTORY radio button on the control) 1882 SB
225 1520 1913 (panel.  A pop-up window will appear near the bottom of the screen and a 3-D cursor will appear) 1913 SB
225 1570 226 (inside the 3) 226 SB
451 1570 1677 (-D view box.  This 3-D cursor is used to specify where a new wind trajectory should) 1677 SB
225 1620 1950 (be made.  The STEP button on the main control panel is also important because it is used to select) 1950 SB
225 1670 913 (the time step at which to create the trajectory.) 913 SB
375 1770 1710 (Wind trajectories are dealt with in sets.  Currently, eight sets are available.  Each set is) 1710 SB
225 1820 1905 (represented in the trajectory window with a button labeled Set1, Set2, ..., Set8.  Each set can be) 1905 SB
225 1870 1946 (individually displayed, colored, or deleted.  As you create new trajectories you may want to group) 1946 SB
225 1920 968 (them in sets corresponding to location, time, etc.) 968 SB
375 2020 1746 (The first step in creating a trajectory is to select a position with the 3-D cursor.  Use the) 1746 SB
225 2070 1921 (right mouse button to drag the 3-D cursor around inside the 3-D box.  The 3-D cursor will move) 1921 SB
225 2120 1843 (in 2-D in a plane parallel to the plane of projection.  That is, the cursor will stay at a constant) 1843 SB
225 2170 1938 (distance of depth.  By alternately rotating the view box with the left mouse button and placing the) 1938 SB
225 2220 1899 (cursor with the right mouse button, the 3-D cursor can be placed anywhere inside the view box.) 1899 SB
225 2270 1800 (The TOP, SOUTH, and WEST buttons as explained in section 6.2 can also be useful when) 1800 SB
225 2320 392 (making trajectories.) 392 SB
375 2420 1743 (Second you should select a time step with the STEP button on the control panel.  When) 1743 SB
225 2470 1948 (the trajectory is made, it will be traced forward from the current time step to the last time step and) 1948 SB
225 2520 1166 (will be traced backward through time to the first time step.) 1166 SB
375 2620 1781 (Finally, to make a trajectory at the current cursor location and current time step, press the) 1781 SB
225 2670 1899 (middle mouse button when pointing inside the 3-D window.  The trajectory will appear as a line) 1899 SB
225 2720 1804 (segment.  By turning on the ANIMATE button, you can observe how the trajectory travels) 1804 SB
225 2770 1916 (through time and space.  Typically, you will repeat the process of positioning the 3-D cursor and) 1916 SB
225 2820 1250 (clicking the middle mouse button to create a set of trajectories.) 1250 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (41) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1672 (Interesting results can be seen by making a trajectory when the ANIMATE button is) 1672 SB
225 270 1934 (turned on:  a trajectory will be created for every time step instead of just one.  This will show you) 1934 SB
225 320 1433 (the path of every air parcel which passes through a single point in space.) 1433 SB
225 420 1068 (Here is a summary of the various trajectory functions:) 1068 SB
375 520 51 ( 1.) 51 SB
488 520 1659 (To position the 3-D cursor, use a combination of rotating the view box with the left) 1659 SB
488 570 1424 (mouse button and dragging the 3-D cursor with the right mouse button.) 1424 SB
375 670 51 ( 2.) 51 SB
488 670 1283 (Use the STEP button or ANIMATE option to select a time step.) 1283 SB
375 770 51 ( 3.) 51 SB
488 770 1625 (Press the middle mouse button to create a trajectory at the current cursor location) 1625 SB
488 820 277 (and time step.) 277 SB
375 920 51 ( 4.) 51 SB
488 920 1611 (To toggle the display of a trajectory set on or off, click on the set button with the) 1611 SB
488 970 361 (left mouse button.) 361 SB
375 1070 51 ( 5.) 51 SB
488 1070 1660 (Select the current trajectory set by clicking on the set button with the middle mouse) 1660 SB
488 1120 142 (button.) 142 SB
375 1220 51 ( 6.) 51 SB
488 1220 1527 (A trajectory set may be deleted with the 'Delete Set' button in the trajectories) 1527 SB
488 1270 968 (window.  You will asked to verify your decision.) 968 SB
375 1370 51 ( 7.) 51 SB
488 1370 1663 (You can delete the last trajectory made by clicking on the 'Delete Last' button in the) 1663 SB
488 1420 406 (trajectories window.) 406 SB
375 1520 1750 (Wind trajectories can be depicted in two ways:  as line segments or as ribbons.  You can) 1750 SB
225 1570 1770 (select ribbons by clicking on the RIBBON button in the trajectory window.  Toggling the) 1770 SB
225 1620 1837 (RIBBON button will not effect trajectories you have already made; it only controls how new) 1837 SB
225 1670 576 (trajectories will be displayed.) 576 SB
375 1770 1723 (The trajectory window also contains two type-in widgets labeled STEP and LENGTH.) 1723 SB
225 1820 1839 (The STEP value is used to control the step size used in the trajectory tracing algorithm.  The) 1839 SB
225 1870 1846 (LENGTH value is used to control the length of trajectories.  1.0 is the default value for each.) 1846 SB
225 1920 1858 (Each acts as a multiplier.  If you want the trajectory tracer to integrate in steps 1/2 the default) 1858 SB
225 1970 1892 (size, enter a step value of 0.5.  If you want trajectories to be twice as long as the default length,) 1892 SB
225 2020 518 (enter a length value of 2.0) 518 SB
375 2120 1648 (The color of trajectories is controlled in the same way as for isosurfaces.  That is, a) 1648 SB
225 2170 1829 (trajectory set may either be mono-colored or colored according to another physical variable.) 1829 SB
225 2220 1910 (Click on the trajectory set button with the right mouse button to bring up its color window.  See) 1910 SB
225 2270 1021 (section 6.5.1 for details on using the color window.) 1021 SB
375 2370 1701 (When viewing color-mapped trajectores be aware that the color of a trajectory is time) 1701 SB
225 2420 1896 (dependent.  Only the head of the trajectory is colored according to the value of another variable) 1896 SB
225 2470 1906 (for the current time step.  The tail of the trajectory is colored according to the color of the other) 1906 SB
225 2520 868 (variable when the head was at that location.) 868 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2669 412 (6.9 Wind Variables) 412 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2770 1629 (By default, wind trajectories and the first set of wind slices are computed from the) 1629 SB
225 2820 1933 (variables named U, V, and W while the second set of wind slices are computed from the variables) 1933 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (42) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 220 1903 (named U2, V2, and W2.  Other variables can be specified through the "UVW VARS" button on) 1903 SB
225 270 1846 (the control panel.  When you click on this button a pop-up window appears in which you can) 1846 SB
225 320 1869 (specify the names of the variables to use for computing trajectories, the first set of wind slices,) 1869 SB
225 370 1932 (and the second set of wind slices.  Just type in the new variables names.  Be aware that uppercase) 1932 SB
225 420 1888 (and lowercase are significant.  Be sure you enter valid names otherwise vis5d may not compute) 1888 SB
225 470 446 (the graphic you select.) 446 SB
375 570 1744 (When multiple data sets are being viewed in one display a period and data context index) 1744 SB
225 620 1854 (number must be appended to the end of each variable to specify a data set index number.  For) 1854 SB
225 670 1911 (example the first set of UVW's might be " U.0 V.0 W.0" while the second set might be "U.2 V.2) 1911 SB
225 720 1870 (W.2".  The wind variables belonging to a set MUST be from the same data set other wise they) 1870 SB
225 770 515 (will be considered invalid.) 515 SB
375 870 1790 (After you've entered new wind component variable names click on APPLY to use the new) 1790 SB
225 920 1878 (values but keep the window visible.  Click on OK to use the new values and close the window.) 1878 SB
225 970 1319 (Click on CANCEL to discard your changes and close the window.) 1319 SB
375 1070 1749 (You can also specify the wind component variables on the command line when you start) 1749 SB
225 1120 458 (vis5d.  See section 6.1.) 458 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1269 350 (6.10 Text Labels) 350 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1370 1738 (Text labels are used to annotate the image in the 3-D viewing window.  Typically this is) 1738 SB
225 1420 1866 (used for making presentation graphics.  You could add a title, your name, the date, highlight a) 1866 SB
225 1470 1729 (particular feature of the data, or document the meaning of the data seen in the window.) 1729 SB
375 1570 1599 (To enter text labeling mode select the LABEL radio button on the control panel.) 1599 SB
375 1670 1784 (To create a text label position the mouse pointer somewhere in the 3-D window and press) 1784 SB
225 1720 1910 (the left mouse button.  A vertical bar cursor will appear at that location and you can now type in) 1910 SB
225 1770 1823 (the text.  The <Backspace> key can be used to correct errors.  When you are finished, press) 1823 SB
225 1820 205 (<Return>.) 205 SB
375 1920 1755 (To move a text label to a new position, point at it with the mouse, hold down the middle) 1755 SB
225 1970 1934 (mouse button and drag the mouse.  As you move the mouse an outline of the text will be dragged) 1934 SB
225 2020 1023 (with the pointer until you release the mouse button.) 1023 SB
375 2120 1749 (To delete a text label, pointing at it with the mouse and pressing the right mouse button.) 1749 SB
225 2170 1941 (Be careful, you will not be asked for verification before deleting a label.  Once it's deleted you can) 1941 SB
225 2220 565 (only restore it by retyping it.) 565 SB
375 2320 1576 (The SAVE button on the control panel will save any text labels you have made.) 1576 SB
375 2420 1755 (Use the '-font' command option to select a different font or change the 'fontname' field in) 1755 SB
225 2470 381 (the 'Options' menu.) 381 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2619 343 (6.11 Data Probe) 343 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2720 1790 (Sometimes it's useful to be able to inspect individual data values at various locations in the) 1790 SB
225 2770 1837 (3-D volume.  You can do this with the data probe.  Click on the PROBE radio button on the) 1837 SB
225 2820 1901 (control panel.  A 3-D cursor appears in the 3-D box which you can move around using the right) 1901 SB
225 2870 1901 (mouse button.  For each physical variable the value for the current time step is printed along the) 1901 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (43) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 220 1881 (left edge of the 3-D window.  If physical units are specified for the variable they will be printed) 1881 SB
225 270 1918 (next to the value.  Units can be assigned with the v5dSetUnits\(\) function in your data conversion) 1918 SB
225 320 715 (program as described in section 3.1.) 715 SB
375 420 1599 (If you turn on the GRID #'s button, the probe will be constrained to integral grid) 1599 SB
225 470 1613 (coordinates.  That is, the cursor will 'snap' to the nearest discrete grid coordinate.) 1613 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 619 754 (6.12  Vertical Sounding and SkewT) 754 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 720 1762 (When you select Sounding mode, Vis5D displays a vertical line cursor that runs from the) 1762 SB
225 770 516 (bottom to the top of the 3) 516 SB
741 770 1275 (-D box, and displays a vertical sounding window.  The sounding) 1275 SB
225 820 1885 (window includes a SkewT diagram generated for grid data at the location of the vertical cursor) 1885 SB
225 870 1932 (\(unless your data set uses generic vertical coordinates\), and vertical plots of up to three variables.) 1932 SB
225 920 1913 (The user can interactively select and change which variables are used for temperature, dew point) 1913 SB
225 970 1890 (and wind fields in the SkewT diagram.  Variables named T, TD, U and V are used as defaults if) 1890 SB
225 1020 1831 (they exist.  The user can also interactively select and change which variables are used for the) 1831 SB
225 1070 1920 (vertical plots.  Users can interactively control the background of the SkewT diagram and vertical) 1920 SB
225 1120 1864 (plots, including dry adiabats, moist adiabats, constant mixing ratio lines and height tick marks.) 1864 SB
225 1170 1402 (They can also interactively resize and reposition the sounding window.) 1402 SB
375 1220 1744 (When multiple data sets are being viewed in one display a period and data context index) 1744 SB
225 1270 1789 (number must be appended to the end of each vertical plot variable \(e.g., "T.1" or "TD.2"\).) 1789 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1419 604 (6.13  Making New Variables) 604 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1520 1741 (The NEW VAR button on the control panel is used to add new physical variables to the) 1741 SB
225 1570 1332 (button matrix.  There are three kinds of new variables you can add:) 1332 SB
375 1670 1775 (1. Cloned variables:  these are copies of existing variables.  You can use a cloned variable) 1775 SB
225 1720 1650 (to make two different isosurfaces of the same variable simultaneously, for example.) 1650 SB
375 1820 1749 (2. External function variables:  you can invoke an external function \(which you write\) to) 1749 SB
225 1870 1155 (compute a new variable as a function of existing variables.) 1155 SB
375 1970 1768 (3. Computed variables:  you can compute a new variable by typing in a formula involving) 1768 SB
225 2020 544 (values of existing variables.) 544 SB
375 2120 1774 (When you click on the NEW VAR button a window appears which lists the variables that) 1774 SB
225 2170 1905 (you can clone, lists the external functions that you can invoke, and lets you type in a formula for) 1905 SB
225 2220 1872 (computing a new variable.  After a new variable has been created a new row of buttons will be) 1872 SB
225 2270 1896 (added to the control panel for the new variable.  You can then make isosurfaces, contour slices,) 1896 SB
225 2320 753 (etc. of the that variable like any other.) 753 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2469 520 (6.13.1  Cloned Variables) 520 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2570 1711 (Suppose you want to clone the U wind component variable so that you can make both) 1711 SB
225 2620 1815 (+20 and -20 isosurfaces of it.  First, click on NEW VAR and then select U from the pop-up) 1815 SB
225 2670 1902 (window.  The cloned variable will be named U'.  You can then treat U' as any other variable and) 1902 SB
225 2720 484 (make an isosurface of it.) 484 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2869 534 (6.13.2  Type-in Formulas) 534 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (44) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 270 1763 (Type-in formulas let you type in mathematical expressions to compute new variables as a) 1763 SB
225 320 1943 (function of existing variables.  For example, to compute wind speed from U, V, and W you would) 1943 SB
225 370 355 (enter the formula:) 355 SB
375 470 814 (SPD3D = SQRT\( U*U + V*V + W*W \)) 814 SB
225 570 1870 (To compute the ration of the dew point \(TD\) to the temperature you would enter the formula:) 1870 SB
375 670 344 (RATIO = TD / T) 344 SB
375 770 1787 (Formulas may use the names of existing variables, numbers, the arithmetic operations +, -,) 1787 SB
225 820 1920 (*, / and ** \(exponentiation\), and the functions SQRT, EXP, LOG, SIN, COS, TAN, ATAN \(arc) 1920 SB
225 870 1911 (tangent\), ABS \(absolute value\), MIN and MAX.  MIN and MAX take two arguments, while the) 1911 SB
225 920 753 (other functions all take one argument.) 753 SB
375 1020 1773 (Click on the OK button to compute the new variable or CANCEL to discard the formula.) 1773 SB
225 1070 1767 (You can edit the formula later by selecting it again from the NEW VAR pop-up window.) 1767 SB
375 1170 1744 (When multiple data sets are being viewed in one display a period and data context index) 1744 SB
225 1220 1838 (number must be appended to the end of each variable in the formula.  For example the above) 1838 SB
225 1270 632 (formula might instead look like:) 632 SB
375 1370 1054 (SPD3D.2 = SQRT\(U.0*U.0 + V.2*V.2 + W.2*W.2\)) 1054 SB
225 1470 1625 (To compute the difference of two seperate variables you would enter the formula:) 1625 SB
375 1570 411 (DIFFT.0 = T.0 - T.1) 411 SB
225 1670 1812 (If there are multiple but no index number appended then it will be assumed that the variable) 1812 SB
225 1720 1934 (belongs to the first data set \(i.e., index 0\) deposited into the display.  In some cases the time steps) 1934 SB
225 1770 1764 (for two different variables will not coincide.  When this happens the variable is computed) 1764 SB
225 1820 1914 (according to the time steps of the data set which the new variable belongs to.  Time steps will be) 1914 SB
225 1870 1927 (matched as close as possible and time steps out of range from one other will be void of data.  For) 1927 SB
225 1920 1497 (example, in the formula "DIFFT.0 = T.0 - T.1", if the time steps were such:) 1497 SB
675 2020 305 (Data Context 0) 305 SB
225 2070 962 (                   Date\(YYDDD\)  Time\(HH:MM:SS\)) 962 SB
225 2120 140 (Time 0) 140 SB
525 2120 164 (   82091) 164 SB
825 2120 205 (    0:00:00) 205 SB
225 2170 140 (Time 1) 140 SB
525 2170 164 (   82091) 164 SB
825 2170 205 (    2:00:00) 205 SB
225 2220 140 (Time 2) 140 SB
525 2220 164 (   82091) 164 SB
825 2220 205 (    4:00:00) 205 SB
225 2270 140 (Time 3) 140 SB
525 2270 164 (   82091) 164 SB
825 2270 205 (    6:00:00) 205 SB
225 2320 140 (Time 4) 140 SB
525 2320 164 (   82091) 164 SB
825 2320 205 (    8:00:00) 205 SB
225 2370 140 (Time 5) 140 SB
525 2370 164 (   82091) 164 SB
825 2370 217 (   10:00:00) 217 SB
675 2470 305 (Data Context 1) 305 SB
225 2520 962 (                   Date\(YYDDD\)  Time\(HH:MM:SS\)) 962 SB
225 2570 140 (Time 0) 140 SB
525 2570 164 (   82091) 164 SB
825 2570 205 (    2:30:00) 205 SB
225 2620 140 (Time 1) 140 SB
525 2620 164 (   82091) 164 SB
825 2620 205 (    4:30:00) 205 SB
225 2670 140 (Time 2) 140 SB
525 2670 164 (   82091) 164 SB
825 2670 205 (    6:30:00) 205 SB
225 2720 140 (Time 3) 140 SB
525 2720 164 (   82091) 164 SB
825 2720 205 (    8:30:00) 205 SB
225 2820 1138 (The resulting variable "DIFFT.0" would contain the data:) 1138 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (45) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 220 140 (Time 0) 140 SB
525 220 170 (No Data) 170 SB
225 270 140 (Time 1) 140 SB
525 270 170 (No Data) 170 SB
225 320 140 (Time 2) 140 SB
525 320 527 (T.0\(time=2\) - T.1\(time=1\)) 527 SB
225 370 140 (Time 3) 140 SB
525 370 527 (T.0\(time=3\) - T.1\(time=2\)) 527 SB
225 420 140 (Time 4) 140 SB
525 420 527 (T.0\(time=4\) - T.1\(time=3\)) 527 SB
225 470 140 (Time 5) 140 SB
525 470 170 (No Data) 170 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 719 751 (6.13.3  External Analysis Functions) 751 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 820 1786 (External analysis functions are an advanced feature, so new Vis5D users may want to skip) 1786 SB
225 870 406 (this section for now.) 406 SB
375 970 1784 (An external analysis function is a function written by you in FORTRAN which is called by) 1784 SB
225 1020 1900 (Vis5D to produce a new variable as a function of the existing variables.  As an example, there is) 1900 SB
225 1070 1906 (included a function SPD3D which computes wind velocity as:  SPD3D = SQRT\( U*U + V*V +) 1906 SB
225 1120 1936 (W*W \).  Be aware that the external function feature is intended for experienced Vis5D users who) 1936 SB
225 1170 890 (are also proficient FORTRAN programmers.) 890 SB
375 1270 1648 (All external functions must be placed in a directory named "userfuncs" \(this may be) 1648 SB
225 1320 1848 (changed in the vis5d.h file\).  This is relative to the current directory when you run vis5d.  For) 1848 SB
225 1370 1869 (example, suppose you always run vis5d while in "/usr/jones/data", then your analysis functions) 1869 SB
225 1420 1870 (must be in "/usr/jones/data/userfuncs".  Also, this directory contains a script "externf" which is) 1870 SB
225 1470 607 (used to compile your function.) 607 SB
375 1570 1670 (To write an external function it's best to copy one of the supplied examples and then) 1670 SB
225 1620 1911 (modify it.  The included "userfuncs/example.f" is fully commented for this purpose.  Later, when) 1911 SB
225 1670 1862 (you call your function from within vis5d, the function will be invoked once for each time step.) 1862 SB
225 1720 1806 (The arguments passed to the function include \(the data set is the first data set in the display) 1806 SB
225 1770 837 (associated with the current control panel\):) 837 SB
375 1870 976 (1. the number of physical variables in the data set) 976 SB
375 1920 555 (2. the name of each variable) 555 SB
375 1970 511 (3. the size of the 3-D grid) 511 SB
375 2020 713 (4. the date and time of the time step) 713 SB
375 2070 1207 (5. map projection and vertical coordinate system information) 1207 SB
375 2120 1110 (6. the actual 3-D grids of data for each physical variable) 1110 SB
375 2220 1759 (Your function will have to scan the list of variable names to find the ones it needs for the) 1759 SB
225 2270 1917 (computation.  Then it must do the actual computation, generating a new grid of data to return to) 1917 SB
225 2320 1941 (vis5d.  The examples we've included demonstrate how to do this.  Specifically, you should look at) 1941 SB
225 2370 1911 (example.f which has detailed documentation of the function arguments.  The map projection and) 1911 SB
225 2420 1904 (vertical coordinate system arguments work in exactly the same way as the v5dCreate library call) 1904 SB
225 2470 453 (discussed insection 3.1) 453 SB
375 2570 1756 (Suppose you want your function to be named "delta".  Then the name of the FORTRAN) 1756 SB
225 2620 1878 (program must be "delta.f".  You would compile the function by typing "externf delta".  If there) 1878 SB
225 2670 1835 (are no errors, an executable file "delta" will be written.  Then in vis5d when you select NEW) 1835 SB
225 2720 1463 (VAR, "delta" should appear in the list of functions in the pop-up window.) 1463 SB
375 2820 1635 (There are two places for vis5d to get the grid data which it passes to your external) 1635 SB
225 2870 1941 (function:  from the original, uncompressed McIDAS file or the compressed v5d/comp5d file.  The) 1941 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (46) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 220 1918 (uncompressed McIDAS data is better because it has more precision.  If the McIDAS file can't be) 1918 SB
225 270 1813 (found, then the compressed data which vis5d has in memory will be passed to your external) 1813 SB
225 320 1928 (function.  Note that this has no bearing whatsoever on the construction of your external function.) 1928 SB
375 420 1771 (You can retrieve the position and values of the data probe from within your function.  To) 1771 SB
225 470 656 (get the position of the probe use:) 656 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 576 1350 (CALL PROBEPOS\( ROW, COL, LEV, LAT, LON, HGT \)) 1350 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 670 1923 (The position in grid coordinates will be returned in ROW, COLumn, and LEVel.  The position in) 1923 SB
225 720 1580 (geographic coordinates will be returned in LATitude, LONgitude, and HeiGhT.) 1580 SB
225 820 1903 (To get the value of any physical variable at the current probe position and current time step use:) 1903 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 926 690 (VALUE = PROBEVAL\( VAR \)) 690 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1020 1100 (where VAR specifies which physical variable you want.) 1100 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1169 786 (6.14 Saving Image Files and Printing) 786 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1270 1736 (The SAVE PIC button on the control panel can be used to save the image in the 3-D or) 1736 SB
225 1320 1940 (sounding window to a file.  If you are in 'Sounding' mode the sounding window will be saved, any) 1940 SB
225 1370 1936 (other mode will save the 3-D window \(including all displays if multiple displays exist\).  When you) 1936 SB
225 1420 1768 (click on SAVE PIC a pop-up window appears in which you can select the file format and) 1768 SB
225 1470 1780 (filename.  The choices of file formats depends on the computer you're using.  The formats) 1780 SB
225 1520 488 (supported by Vis5D are:) 488 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1619 122 (XWD) 122 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
497 1620 994 ( - X Window Dump, displayable with xwud or xv.) 994 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1669 109 (RGB) 109 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
484 1670 1076 ( - SGI image file format, displayable with ipaste or xv.) 1076 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1719 88 (GIF) 88 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
463 1720 1398 ( - Standard GIF format, displayable with xv and many other programs.) 1398 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1769 221 (PostScript) 221 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
596 1770 1383 ( - may be printed or viewed on-screen with a program like ghostview.) 1383 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
375 1819 354 (Color PostScript) 354 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
729 1820 1181 ( - may be printed or viewed with a ghostview-like program.) 1181 SB
375 1920 1770 (Configurations of Vis5D  using OpenGL directly write XWD files.  To make an RGB file) 1770 SB
225 1970 1880 (the fromxwd program is used.  Unfortunately, the fromxwd program shipped by SGI has a bug) 1880 SB
225 2020 1945 (which causes it to fail.  Since source code for fromxwd is shipped with IRIX we include a patched) 1945 SB
225 2070 1946 (version which works correctly.  To make a gif file requires both fromxwd and togif \(only available) 1946 SB
225 2120 1949 (on SGI systems\).  To make a grayscale PostScript file requires the xpr utility \(standard with X11\).) 1949 SB
225 2170 1826 (To make a color PostScript file the tops program is needed \(only available on SGI systems\).) 1826 SB
375 2270 1748 (If you don't have any of the utilities mentioned above you should try using xv to convert) 1748 SB
225 2320 1645 (your image files.  xv is available by ftp from export.lcs.mit.edu in contrib/ and from) 1645 SB
225 2370 768 (ftp.cis.upenn.edu in the pub/ directory.) 768 SB
375 2470 1778 (To print a Vis5D image, position the mouse pointer over the 3-D window and press the P) 1778 SB
225 2520 1921 (key.  If you are in 'Sounding' mode the sounding window will be printed, any other mode and the) 1921 SB
225 2570 1832 (3-D window will be printed.  You'll be asked to verify your action.  Vis5D uses lpr to send a) 1832 SB
225 2620 1912 (PostScript image file to the default printer or the printer specified by the PRINTER environment) 1912 SB
225 2670 1866 (variable.  To generate the PostScript file Vis5D uses the utilities described above.  If you have) 1866 SB
225 2720 1877 (problems printing you should try to first save your image as a PostScript file then try to print it) 1877 SB
225 2770 1870 (manually using lpr or lp.  Another option is to save your image as an XWD file then use xpr \(a) 1870 SB
225 2820 1186 (standard X11 utility\) to convert it to PostScript and print it.) 1186 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (47) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1793 (To learn more about the xwud, xpr, fromxwd, tops and togif program read the man pages.) 1793 SB
225 270 1294 (Many of these programs have options which you may find useful.) 1294 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 419 470 (6.15 Texture mapping) 470 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 520 1741 (Texture mapping is a term from computer graphics which means to display a 2-D image) 1741 SB
225 570 1883 (over a surface in 3-D.  In Vis5D you can display images over the topography \(or bottom of the) 1883 SB
225 620 25 (3) 25 SB
250 620 1915 (-D box when topography is turned off\) such as satellite or map images.  Texture mapping is only) 1915 SB
225 670 1776 (available on SGI systems and those using the Mesa library.  Hardware support for texture) 1776 SB
225 720 652 (mapping is highly recommended.) 652 SB
225 820 1874 (There are three types of texture/image mapping in Vis5D which can specified on the command) 1874 SB
225 870 570 (line or in the 'Options' menu:) 570 SB
375 970 149 (-area N) 149 SB
675 970 1372 (N is the number of the first of a sequence of McIDAS area files.  The) 1372 SB
675 1020 1346 (number of files read equals the number of timesteps in your datafile.) 1346 SB
675 1070 1360 (Images should all be of the same size.  You must use McIDAS to do) 1360 SB
675 1120 465 (remapping if necessary.) 465 SB
675 1220 1408 (Example:  Suppose your datafile has 4 time steps and you specify -area) 1408 SB
675 1270 1428 (100, then AREA0100, AREA0101, AREA0102 and AREA0103 will be) 1428 SB
675 1320 427 (loaded and displayed.) 427 SB
675 1420 1376 (This option needs the McIDAS library which is only available on SGI) 1376 SB
675 1470 167 (systems.) 167 SB
375 1570 272 (-sequence file) 272 SB
675 1570 1412 (This works like the -area option, except that the data come from a very) 1412 SB
675 1620 1476 (simple file format rather than from McIDAS area files.  The file starts with) 1476 SB
675 1670 1423 (3 int's that contain the number of images in the sequence, the number of) 1423 SB
675 1720 1375 (lines per image, and the number of pixels per line.  The rest of the file) 1375 SB
675 1770 1060 (contains the images, one byte per pixel.  The function) 1060 SB
675 1820 1486 (read_texture_sequence in the image.c file of the src directory reads this file) 1486 SB
675 1870 1487 (and serves as a file format reference for those wishing to create such image) 1487 SB
675 1920 287 (sequence files.) 287 SB
375 2020 231 (-texture file) 231 SB
675 2020 1472 (This options specifies a single image to display over the topography for all) 1472 SB
675 2070 1478 (time steps.  The file format is the SGI RGB format.  The free XV program) 1478 SB
675 2120 1010 (can be used to convert your image to RGB format.) 1010 SB
225 2220 1912 (When a texture map is available the TEXTURE button on the control panel is used to toggle the) 1912 SB
225 2270 638 (display of the imagery on or off.) 638 SB
375 2320 1762 (Note these command line options can be used with each data set named on the command) 1762 SB
225 2370 1932 (line, and can be entered under Options for each display in the display widget window described in) 1932 SB
225 2420 263 (Section 6.20.) 263 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2569 370 (6.16 Tcl scripting) 370 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2670 1743 (Vis5D 5.0 features a scripting facility.  That is, you can control Vis5D with a text file of) 1743 SB
225 2720 1946 (commands using the Tcl language.  Scripting is an advanced subject and documented separately in) 1946 SB
225 2770 1532 (the Vis5D scripting document at http://www.ssec.wisc.edu/~billh/script.html.) 1532 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (48) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1778 (Note that the SAVE and RESTORE buttons on the control panel write and read Tcl files.) 1778 SB
225 270 1331 (You may want to use bits of these files as a basis a new Tcl scripts.) 1331 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 419 539 (6.17 Keyboard Functions) 539 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 520 1715 (The following keyboard functions can be invoked while the mouse pointer is inside the) 1715 SB
225 570 25 (3) 25 SB
250 570 407 (-D viewing window:) 407 SB
32 0 0 50 50 1 0 0 45 /Times-Roman /font32 ANSIFont font
375 670 80 (Key) 80 SB
32 0 0 50 50 1 0 0 45 /Times-Roman /font32 ANSIFont font
455 670 78 (      ) 78 SB
525 670 175 (Function) 175 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 720 52 (F1) 52 SB
525 720 1531 (Raise or lower the control panel window.  This is useful with the -full option.) 1531 SB
375 770 52 (F2) 52 SB
525 770 1510 (Toggle display of system information including memory used and number of) 1510 SB
525 820 502 (graphics to be computed.) 502 SB
375 870 28 (P) 28 SB
525 870 1598 (Print the current window image.  A PostScript printer must be available.  Set the) 1598 SB
525 920 1578 (PRINTER environment variable from your shell to specify which printer to use.) 1578 SB
375 970 28 (S) 28 SB
525 970 1512 (Slower animation - increases the minimum time between frames by 10 msec.) 1512 SB
375 1020 27 (F) 27 SB
525 1020 1504 (Faster animation - decreases the minimum time between frames by 10 msec.) 1504 SB
375 1070 33 (R) 33 SB
525 1070 999 (Reset the clipping planes to there default positions) 999 SB
375 1120 33 (B) 33 SB
525 1120 1558 (Turn of the window borders.\( This is useful when using Sun workstations, an  ) 1558 SB
525 1170 1370 (unsolved bug causes the borders to flash in a very annoying manner!\)) 1370 SB
375 1270 1760 (If you want to program your own keyboard functions look the in the file src/gui.c for the) 1760 SB
225 1320 1901 (func1\(\), func2\(\), func3\(\), etc functions.  They are called when the corresponding function key is) 1901 SB
225 1370 162 (pressed.) 162 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1519 546 (6.18  The Clipping Planes) 546 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1620 1610 (Six new clipping planes has been added in Vis5D version 5.0.  This allows you to) 1610 SB
225 1670 1848 (manipulate the viewing volume in a more precise manner.  Press the 'Clipping' radio button in) 1848 SB
225 1720 654 (order to enter the clipping mode.) 654 SB
375 1820 1769 (There are two horizontal clipping planes the top and bottom.  There are also four vertical) 1769 SB
225 1870 1933 (clipping planes, the north, south, east and west.  Only one clipping plane may be moved at a time.) 1933 SB
225 1920 1794 (The middle mouse button, when clicked in the 3-D display window, will cycle through and) 1794 SB
225 1970 1876 (highlight the six planes.  The clipping planes are then moved in the same manner as the vertical) 1876 SB
225 2020 1847 (and horizontal slices.  Simply click on a corner or midpoint of the clipping slice with the right) 1847 SB
225 2070 1933 (mouse button and drag it.  The clipping planes may set back to there default positions by pressing) 1933 SB
225 2120 219 (the 'R' key.) 219 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2269 309 (6.19 Grouping) 309 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2370 1685 (When there are multiple displays you can group them together in up to 9 groups.  To) 1685 SB
225 2420 1811 (group a display press the desired group number 1..9 on the keypad.  This puts you in group) 1811 SB
225 2470 1877 (toggling mode.  No other mouse or GUI event will be accepted while in this mode.  Then click) 1877 SB
225 2520 1938 (with the left mouse button in a 3-D display window to add it to or delete it from the group.  If the) 1938 SB
225 2570 1840 (display selected is not already in the group it will be added, and 'Group #' will show up in the) 1840 SB
225 2620 1867 (upper right hand corner of the display window.  If the display selected is in a different group it) 1867 SB
225 2670 1816 (will be switched to the current group.  If the selected display is already in the group you are) 1816 SB
225 2720 1921 (toggling for then it will be ungrouped and the 'Group #' message will dissapear.  Any 3-D display) 1921 SB
225 2770 1702 (will be toggled in this manner until you exit group toggling mode by simply pressing a) 1702 SB
225 2820 543 (number 1..9 on the keypad.) 543 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (49) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1521 (If two or more displays are grouped together than the following will happen:) 1521 SB
375 320 17 (-) 17 SB
435 320 1628 (If one display is rotated, zoomed or translated, all displays will change in the same) 1628 SB
435 370 159 (manner.) 159 SB
375 420 17 (-) 17 SB
435 420 1670 (If a graphic for a certain variable is toggled in one display, the same variable name is) 1670 SB
435 470 1595 (searched for in the other displays.  If the variable exists, the same graphic will be) 1595 SB
435 520 163 (toggled.) 163 SB
375 570 17 (-) 17 SB
435 570 738 (Isosurfaces are set to the same value.) 738 SB
375 620 17 (-) 17 SB
435 620 1511 (Slices will move in sync.  They will move to the same geographical position.) 1511 SB
375 670 17 (-) 17 SB
435 670 991 (Many buttons on the control panel will be in sync.) 991 SB
375 720 17 (-) 17 SB
435 720 1363 (The time steps for all grouped displays will be merged for animation.) 1363 SB
375 770 17 (-) 17 SB
435 770 1481 (The probe and sounding cursor will move in the same geographic position.) 1481 SB
375 820 17 (-) 17 SB
435 820 1618 (All of the radio buttons will be in sync.  If sounding mode is chosen, the sounding) 1618 SB
435 870 785 (window for all displays will be mapped.) 785 SB
225 970 1886 (When a display is grouped or ungrouped the buttons on its control panel are set to their default) 1886 SB
225 1020 1941 (settings.  The graphics for every variable are also turned off.  If more than one data set is attached) 1941 SB
225 1070 1892 (to a grouped display and they contain similar named variables, only the first data set can display) 1892 SB
225 1120 507 (graphics for that variable.) 507 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1269 733 (6.20  The Display Widget Window) 733 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1370 1780 (The display widget window is the control center when multiple data sets are loaded and is) 1780 SB
225 1420 1798 (invoked by pressing the 'DISPLAY' button on the main control panel.  A data set is always) 1798 SB
225 1470 1919 (assigned to exactly one display, but a display may contain zero, one or more data sets.  A display) 1919 SB
225 1520 922 (includes a 3-D graphics window and defines a ) 922 SB
32 0 0 50 50 0 0 0 45 /Times-Italic /font31 ANSIFont font
1147 1520 133 (virtual) 133 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1280 1520 828 ( grid space where all the graphics from its) 828 SB
225 1570 1930 (data sets are mapped.  If the data grid is different from the virtual grid the appropriate resampling) 1930 SB
225 1620 1653 (is applied.  In some cases this resampling will cause graphics generation to be slow.) 1653 SB
375 1720 1735 (The display widget window allows you to: change the number of displays and how they) 1735 SB
225 1770 1892 (are arranged, change the assignment of data sets to displays, change the parameters of a display) 1892 SB
225 1820 1506 (which define the virtual grid, and change most of the command line options.) 1506 SB
375 1920 1688 (Each display's user interface includes a set of buttons and type-in fields and a data set) 1688 SB
225 1970 1877 (browser.  At the top of the user interface is the 'Display #' which gives the index of the display.) 1877 SB
225 2020 1844 (Below that is a browser showing a list of data sets attached to that display.  Each entry in the) 1844 SB
225 2070 1896 (browser contains the context index of the data set and the context name. There is a scroll bar to) 1896 SB
225 2120 1932 (the right of the browser which can scroll though the list if it gets larger than the browser window.) 1932 SB
225 2170 1797 (Above the browser is the 'Options' button which is described in section 6.20.4.  Below  the) 1797 SB
225 2220 1947 (browser is the 'SET DISPLAY PARAMETERS' which is described in section it 6.20.3.  Currently) 1947 SB
225 2270 1908 (there can be a total of 16 displays.  Watch out though, opening many displays can eat up a lot of) 1908 SB
225 2320 175 (memory.) 175 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2469 863 (6.20.1 Changing the Number of Displays) 863 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2570 1787 (In the upper left hand corner is the 'Display Matrix' with 9 buttons, '1x1', '1x2', '2x2', '3x2',) 1787 SB
225 2620 1804 ('2x3', '3x3', '3x4', '4x3', and '4x4'.  These buttons control the number and layout of displays.) 1804 SB
225 2670 1883 (Underneath this is the 'Return to Vis5D' button.  This will exit from the display widget window) 1883 SB
225 2720 1866 (and map the 3-D graphics window of each display according to the chosen button matrix.  If a) 1866 SB
225 2770 1687 (display is created but has no data set attached to it then the 3-D window is left blank.) 1687 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (50) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
0 0 0 fC
225 219 1151 (6.20.2 Changing the Display Assignment of a Data Set) 1151 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 320 1748 (In order to change the aassignment a data set to a different display you have to highlight) 1748 SB
225 370 1782 (the desired data set. This is done by simply clicking on the appropriate entry in the display) 1782 SB
225 420 1948 (browser.  You then click inside the data set browser of another display and the data set transfered.) 1948 SB
225 470 1828 (If a data set is transfered to an empty display it may take several seconds while the display is) 1828 SB
225 520 203 (initialized.) 203 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 669 949 (6.20.3 Changing the Parameters of a Display) 949 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 770 1793 ( The parameters of a display define the virtual grid.  These parameters include: the number) 1793 SB
225 820 1884 (of rows, columns and levels of the grid, the map projection, and the vertical coordinate system.) 1884 SB
225 870 1834 (There are three ways of changing these parameters.  When an index number is typed into the) 1834 SB
225 920 1859 ('FROM Context #' field, the parameters are copied from the specified data context over to the) 1859 SB
225 970 1906 (current display.  When an index number is typed into the 'FROM Display #' field, the parameters) 1906 SB
225 1020 1913 (are copied from the specified display over to the current display.  The third option is to manually) 1913 SB
225 1070 1859 (edit one or all of the parameters by pressing the 'User Input' button.  A set of fields associated) 1859 SB
225 1120 1891 (with each parameter will then appear on the left hand side.  When you are finished changing the) 1891 SB
225 1170 1107 (parameters press the 'Done' button found at the bottom.) 1107 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1319 925 (6.20.4 Changing the 'Options' for a Display) 925 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1420 1777 (In Vis5D version 5.0 the command line options \(refer to section 6.1\) can now be changed) 1777 SB
225 1470 1920 (at any time instead of just once while first running vis5d.  When the 'Options' button is pressed at) 1920 SB
225 1520 1788 (the top of the display browser a set of fields will appear on the left hand side.  These fields) 1788 SB
225 1570 765 (correlate to the command line options.) 765 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1719 356 (6.30  Final Notes) 356 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1820 1666 (The SGI version of vis5d uses multiple CPUs if available to compute graphics in the) 1666 SB
225 1870 1823 (background thereby increasing vis5d's speed.  On other systems, vis5d tries to interleave the) 1823 SB
225 1920 1791 (computation of graphics with user interaction.  This results in the user interface being a bit) 1791 SB
225 1970 1257 (sluggish until all pending graphics computations are completed.) 1257 SB
375 2070 1750 (The vis5d user interface may be complex to describe in words, but we have tried hard to) 1750 SB
225 2120 1934 (make it simple in reality.  After a little practice using the sample data sets we hope it feels natural.) 1934 SB
375 2220 1750 (Since version 3.2 of Vis5D there is a user-contributed software directory:  contrib/.  See) 1750 SB
225 2270 1522 (the README file in that directory for a description of current contributions.) 1522 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 2469 628 (7.  THE v5dimport UTILITY) 628 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2570 1682 (The v5dimport utility is a program for converting grid files to v5d format, combining) 1682 SB
225 2620 1948 (multiple source files, resampling to new coordinate systems and culling variables and timesteps.  It) 1948 SB
225 2670 1062 (has both a graphical and command line user interface.) 1062 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (51) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 227 1787 (For example, you may use v5dimport to read 2 McIDAS GR3D files and a 2-D McIDAS) 1787 SB
225 285 1943 (GRID file, resample all the data to a Lambert Conformal projection, omit the CWAT and VORT) 1943 SB
225 343 1384 (variables and then write the data to a Vis5D file called lambert1.v5d.) 1384 SB
225 459 1031 (The basic order of events when using v5dimport is:) 1031 SB
375 517 489 (1. Read the input file\(s\).) 489 SB
375 575 1692 (2. Select grids for output according to timestep, physical variable, map projection or) 1692 SB
450 633 538 (vertical coordinate system.) 538 SB
375 691 1518 (3. Setup a map projection and vertical coordinate system for the output file.) 1518 SB
375 749 1142 (4. Write the output file.  Resampling is done at this time.) 1142 SB
375 807 891 (5. Optionally, start Vis5D on the output file.) 891 SB
225 923 1150 (Currently, v5dimport can read the following file formats:) 1150 SB
375 981 645 (McIDAS GR3D and GRID files) 645 SB
375 1039 576 (Vis5D v5d and comp5d files) 576 SB
375 1097 268 (GRADS files) 268 SB
375 1155 1056 ("UW vis" files \(used at the University of Wisconsin\)) 1056 SB
375 1213 895 (EPA MM4 and RADM files \(on Crays only\)) 895 SB
32 0 0 50 50 0 0 0 48 /Times-Bold /font29 ANSIFont font
225 1388 888 (7.1 Using v5dimport's graphical interface) 888 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1509 742 (Start v5dimport from your shell with) 742 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1623 1020 (v5dimport [-path pathname] [files]) 1020 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1736 1867 (where [files] is an optional list of input files and [-path pathname] specifies that the directory) 1867 SB
225 1794 1938 (named "pathname" is to be used as the default, in place of the current directory, for the input file) 1938 SB
225 1852 734 (browser and for making output files.) 734 SB
225 1968 1569 (When v5dimport has started you'll see its main window appear.  It consists of:) 1569 SB
375 2026 1158 (1. a scrollable list of all grids scanned from the input files) 1158 SB
375 2084 1595 (2. buttons used for selecting/culling grids according to variable name, timestep,) 1595 SB
450 2142 796 (projection or vertical coordinate system) 796 SB
375 2200 1422 (3. buttons and type-in fields for describing and creating the output file.) 1422 SB
32 0 0 50 50 0 0 0 48 /Times-Bold /font29 ANSIFont font
225 2375 541 (7.1.1 Reading input grids) 541 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2496 1748 (You may read additional grid files into v5dimport at any time by clicking on the "Read) 1748 SB
225 2554 1928 (file..." button.  Use the file selector to locate your file and click on OK or CANCEL.  It's best to) 1928 SB
225 2612 1791 (read all input files right at the beginning because whenever a new file is read all grids are) 1791 SB
225 2670 1554 (selected for output, overriding any selections you may have previously made.) 1554 SB
375 2786 1793 (The button labeled "Discard all grids" does exactly what it says.  It's equivalent to exiting) 1793 SB
225 2844 550 (v5dimport and restarting it.) 550 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (52) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 285 1742 (After reading each input file, the list of grids shown in the top half of the window, will) 1742 SB
225 343 793 (be resorted by time then variable name.) 793 SB
225 459 559 (The columns in this list are:) 559 SB
375 517 888 (Grid - grid number \(no significant meaning\)) 888 SB
375 575 787 (YYDDD - the year and date of the grid) 787 SB
375 633 1273 (HHMMSS - the time of the grid in hours, minutes, and seconds) 1273 SB
375 691 571 (Variable - the variable name) 571 SB
375 749 508 (Nr - number of grid rows) 508 SB
375 807 585 (Nc - number of grid columns) 585 SB
375 865 524 (Nl - number of grid levels) 524 SB
375 923 1372 (Proj# - the projection number \(see "Select by projection..." window\)) 1372 SB
375 981 1427 (VCS# - the vertical coordinate system number \(see "Select by VCS..."\)) 1427 SB
375 1039 912 (Filename - name of file the grid was found in) 912 SB
32 0 0 50 50 0 0 0 48 /Times-Bold /font29 ANSIFont font
225 1211 660 (7.1.2 Selecting grids for output) 660 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1332 1789 (It's often the case that one wants to discard some physical variables or timesteps from the) 1789 SB
225 1390 1800 (input file so they aren't written to the output file.  By default, all variables are selected for) 1800 SB
225 1448 141 (output.) 141 SB
375 1564 1720 (To select/cull variables, click on the "Select by variable..." button.  A pop-up window) 1720 SB
225 1622 1878 (will appear which lists all the variables.  The ones that are high lighted are selected for ouput.) 1878 SB
225 1680 1036 (Click on variables names to select or deselect them.) 1036 SB
375 1796 1769 (Similarly, you can select timesteps via the "Select by time..." button.  A pop-up window) 1769 SB
225 1854 1897 (listing all time steps will appear.  Use the mouse to select the time steps you want and unselect) 1897 SB
225 1912 1891 (the timesteps you wish to omit.  Note that you can select/deselect a number of timsteps by just) 1891 SB
225 1970 1037 (dragging the mouse while holding down the button.) 1037 SB
375 2086 1759 (Finally, grids may be selected or discarded according to their map projection or vertical) 1759 SB
225 2144 1786 (coordinate system \(VCS\) via the "Select by projectiion..." and "Select by VCS... buttons.) 1786 SB
375 2260 1727 (Note that as you select/deselect timesteps, variables, projections, or VCSs the effected) 1727 SB
225 2318 1238 (grids will be high-lighted/unhigh-lighted in the main grid list.) 1238 SB
375 2434 1371 (The "Select All" and "Select None" buttons do just what they imply.) 1371 SB
32 0 0 50 50 0 0 0 48 /Times-Bold /font29 ANSIFont font
225 2606 614 (7.1.3 Defining the output file) 614 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2727 1740 (The default parameters for the output file \(grid size, projection, etc\) are taken from the) 1740 SB
225 2785 1930 (first file read in.  You should always review these parameters before making your output file.  It) 1930 SB
225 2843 934 (will often be necessary to change these values.) 934 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (53) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 285 1729 (The number of rows, columns, and levels for the output file is specified by the type-in) 1729 SB
225 343 1931 (fields on the main window labeld "Rows", "Columns" and "Max Levels".  Type in new values if) 1931 SB
225 401 510 (the defaults are incorrect.) 510 SB
375 517 1697 (The map projection for the output file can be viewed and changed by clicking on the) 1697 SB
225 575 1856 ("Map projection..." button.  In this pop-up window you'll be able to choose a map projection) 1856 SB
225 633 1859 (type then enter the specific projection parameters.  There is also a "Guess" button which will) 1859 SB
225 691 1861 (attempt to find a reasonable output projection given the currently selected grid list.  It's often) 1861 SB
225 749 1820 (helpful to have the "Select by Projection" pop-up window on-screen to compare the output) 1820 SB
225 807 693 (projection to the input projections.) 693 SB
375 923 1783 (The vertical coordinate system for the output file can be viewed and changed by clicking) 1783 SB
225 981 1830 (on the "Vertical Coord System..." button.  In this pop-up window you'll be able to choose a) 1830 SB
225 1039 1805 (vertical coordinate system type and enter the specific parameters.  This window also has a) 1805 SB
225 1097 1949 ("Guess" button to try to find a reasonable default.  Similarly, it's often helpful to have the "Select) 1949 SB
225 1155 1662 (by VCS" pop-up window on-screen to compare the output VCS to the input VCSs.) 1662 SB
32 0 0 50 50 0 0 0 48 /Times-Bold /font29 ANSIFont font
225 1327 597 (7.1.4 Making the output file) 597 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1448 1779 (Enter a filename for the output file in the type-in field at the bottom of the main window) 1779 SB
225 1506 1895 (then click on "Make".  Messages will be printed as the file conversion takes place.  If there are) 1895 SB
225 1564 1884 (any errors the process will halt.  Note that generating the output file can be time-consuming if) 1884 SB
225 1622 1899 (data must be resampled from the input grid's coordinate system to a new coordinate system for) 1899 SB
225 1680 295 (the output file.) 295 SB
375 1796 1761 (If you click on "Visualize" this will make the file and then automatically start up Vis5D) 1761 SB
225 1854 1895 (on that file \(i.e., you don't need to click on "Make" first\).  If you type a filename in the type-in) 1895 SB
225 1912 1877 (field, it wil use that name.  Otherwise, it will use your login name followed by ".v5d".  If you) 1877 SB
225 1970 1907 (want command line options on the Vis5D command, put them in a file named "vis5d_options".) 1907 SB
225 2028 494 (For example, "-mbs 64".) 494 SB
32 0 0 50 50 0 0 0 48 /Times-Bold /font29 ANSIFont font
225 2200 413 (7.1.5 Miscellaneous) 413 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2321 1412 (An options window is available by clicking on the "Options..." button.) 1412 SB
375 2437 1650 (The first item controls the "combining of co-located data".  It may be the case that) 1650 SB
225 2495 1873 (several 3-D grids, selected for output, are co-located in space and time.  When computing the) 1873 SB
225 2553 1862 (value to put in the output file you can either choose the data value from the higher resolution) 1862 SB
225 2611 1568 (grid at that location, or take the average of all grid values at that grid location.) 1568 SB
375 2727 1791 (The second item controls how grid data is compressed in the output file.  By default, grid) 1791 SB
225 2785 1945 (values are scaled down to 1-byte integers.  Alternately, you can scale down to 2-byte integers for) 1945 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (54) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 227 1885 (better resolution, or perform no compression/scaling by selecting 4-byte floating point values.) 1885 SB
225 285 1187 (This option respresents a tradeoff in file size and precision.) 1187 SB
32 0 0 50 50 0 0 0 48 /Times-Bold /font29 ANSIFont font
225 457 1159 (7.2 The v5dimport User Interface Embedded in Vis5D) 1159 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 578 1769 (In Vis5d version 5.0 v5dimport has been incorporated into the main control panel and is) 1769 SB
225 636 1851 (invoked by pressing the 'IMPORT' button.  This version of v5dimport is the same as the one) 1851 SB
225 694 1880 (mentioned above except that you can load the newly created v5d file without exiting from the) 1880 SB
225 752 1860 (program.  When the 'Make' button is pressed it will create the file and name it using the field) 1860 SB
225 810 1933 ('File name:'.  If there is a name in the field 'Context name:' the file will be loaded into Vis5d and) 1933 SB
225 868 1896 (attached to the first display.  A number must also be entered into the 'MBS' field to specify the) 1896 SB
225 926 1933 (amout of memory to allocate for the data set.  A filename must always be entered to use for disk) 1933 SB
225 984 510 (backup for caching grids.) 510 SB
32 0 0 50 50 0 0 0 48 /Times-Bold /font29 ANSIFont font
225 1156 766 (7.3 Using v5dimport's text interface) 766 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1277 1702 (The text/type-in interface to v5dimport is useful when X is not availableor when you) 1702 SB
225 1335 1519 (want to run v5dimport with a script.  To start v5dimport in text mode enter:) 1519 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1449 1110 (v5dimport -t [-path pathname] [files]) 1110 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1562 1867 (where [files] is an optional list of input files and [-path pathname] specifies that the directory) 1867 SB
225 1620 1938 (named "pathname" is to be used as the default, in place of the current directory, for the input file) 1938 SB
225 1678 1882 (browser and for making output files.  Through the text interface it's possible to run v5dimport) 1882 SB
225 1736 1215 (with a script by using your shell's import redirection feature:) 1215 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1850 600 (v5dimport -t <script) 600 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1963 1936 (After you've invoked v5dimport with the -t option you'll see a >> prompt at which you can issue) 1936 SB
225 2021 485 (any of these commands:) 485 SB
375 2137 75 (exit) 75 SB
600 2137 297 (exit v5dimport) 297 SB
375 2195 86 (help) 86 SB
600 2195 224 (online help) 224 SB
375 2253 61 (list) 61 SB
600 2253 1364 (show lists of grids, timesteps, variables, map projections, or vertical) 1364 SB
600 2311 394 (coordinate systems.) 394 SB
375 2369 86 (read) 86 SB
600 2369 342 (read an input file) 342 SB
375 2427 200 (keep/omit) 200 SB
600 2427 1544 (used to select which grids, according to timestep, variable, map projection or) 1544 SB
600 2485 1142 (vcs, are to be included in or omitted from the output file.) 1142 SB
375 2543 81 (info) 81 SB
600 2543 652 (display parameters of output file) 652 SB
375 2601 97 (rows) 97 SB
600 2601 862 (specify number of grid rows for output file) 862 SB
375 2659 169 (columns) 169 SB
600 2659 934 (specify number of grid columns for output file) 934 SB
375 2717 116 (levels) 116 SB
600 2717 980 (specify max number of grid levels for output file) 980 SB
375 2775 203 (projection) 203 SB
600 2775 782 (specify the output file's map projection) 782 SB
375 2833 150 (vertical) 150 SB
600 2833 1005 (specify the output file's vertical coordinate system) 1005 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (55) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 227 108 (make) 108 SB
600 227 403 (make the output file) 403 SB
375 285 177 (visualize) 177 SB
600 285 730 (make the output file and start Vis5D) 730 SB
225 401 1691 (Using the text interface to v5dimport is similar in strategy to the graphical interface:) 1691 SB
375 459 368 (1. Read input files) 368 SB
375 517 1781 (2. Select grids by timestep, variable, projection, and/or VCS.  This is typically done by a) 1781 SB
450 575 807 (series of list, omit, and keep commands.) 807 SB
375 633 1702 (3. Set/adjust output file parameters. Typically a series of info, rows, columns, levels,) 1702 SB
450 691 706 (projection, and vertical commands.) 706 SB
375 749 1283 (4. Make the output file, or make the output file and start Vis5D.) 1283 SB
225 865 1359 (Use the help command to learn the exact syntax for each command.) 1359 SB
225 981 1933 (A v5dimport script is simply an ASCII file of v5dimport commands and their arguments.  In the) 1933 SB
225 1039 1190 (simplest case it may contain only a few commands such as:) 1190 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 1153 1350 (# read my file, omit two vars, write v5d file) 1350 SB
375 1206 450 (read mydata.dat) 450 SB
375 1259 330 (omit var CW) 330 SB
375 1312 330 (omit var RW) 330 SB
375 1365 480 (make outdata.v5d) 480 SB
375 1418 120 (exit) 120 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1531 1930 (As v5dimport executes a script it prints each command and its result.  Lines which start with a #) 1930 SB
225 1589 772 (are considered comments and ignored.) 772 SB
32 0 0 50 50 0 0 0 48 /Times-Bold /font29 ANSIFont font
225 1761 832 (7.4 Adding support for new file format) 832 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 1882 1772 (v5dimport was written so that adding code to read new file formats should be easy.  The) 1772 SB
225 1940 1840 (source code for v5dimport is in the import/ subdirectory.  Look for the comment /*** ADD) 1840 SB
225 1998 1888 (NEW FORMATS HERE ***/ to see where code has to be added to support a new file format.) 1888 SB
375 2114 1705 (Basically, you need to write two new functions.  One which scans your file format to) 1705 SB
225 2172 1812 (build a list of grid_info structs.  The other reads the actual grid data from your file given a) 1812 SB
225 2230 1921 (grid_info struct.  These functions should be put in a new file named read_foo.c where foo is the) 1921 SB
225 2288 1861 (name of your file format.  Then, update the file.c file to use your functions.  Use the existing) 1861 SB
225 2346 496 (read_*.c files as a guide.) 496 SB
32 0 0 50 50 0 0 0 48 /Times-Bold /font29 ANSIFont font
225 2518 692 (7.5 Notes on specific file formats) 692 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 2639 1780 (The symbol EPA is defined on the cc command line with -DEPA only on systems which) 1780 SB
225 2697 1936 (can read EPA files.  Currently, only Cray systems can read EPA files because the EPA-provided) 1936 SB
225 2755 1054 (file reading functions only work on Cray computers.) 1054 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (56) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 227 1673 (The symbol MCIDAS is defined on the cc command line with -DMCIDAS only on) 1673 SB
225 285 1815 (systems which can use the libmcidas.a file.  Only SGI's in 32-bit mode are supported now.) 1815 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 501 548 (8. SAMPLE DATA SETS) 548 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 602 1504 (To demonstrate or experiment with Vis5D we provide two sample datasets.) 1504 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 751 1009 (8.1  Bob Schlesinger's thunderstorm simulation) 1009 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 852 1324 (To visualize the Schlensinger thunderstorm file enter the command) 1324 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 958 420 (vis5d SCHL.v5d) 420 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1052 963 (To view an isosurface of QL \(moisture content\):) 963 SB
375 1152 1295 (1. Click on the QL button in the left column of the button matrix.) 1295 SB
375 1202 1363 (2. On the slider, select a value near 1.0, then click on the OK button.) 1363 SB
375 1252 989 (3. Turn on animation with the ANIMATE button.) 989 SB
225 1352 856 (To view a vertical contour line slice of QL:) 856 SB
375 1452 1087 (1. Turn off animation by clicking on ANIMATE again.) 1087 SB
375 1502 914 (2. Click on the QL button in the third column.) 914 SB
375 1552 1702 (3. Move the slice by first selecting the SLICE radio button.  Then use the right mouse) 1702 SB
465 1602 1377 (button to drag any corner of the slice along the edges of the 3-D box.) 1377 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1751 406 (8.2  LAMPS model) 406 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1852 1847 (To visualize a LAMPS \(Limited Area Meso-Scale Prediction System\) model simulation of an) 1847 SB
225 1902 835 (extratropical cyclone, enter the command:) 835 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
375 2008 450 (vis5d LAMPS.v5d) 450 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 2102 1416 (To view an isosurface of wind speed over a topography with map lines:) 1416 SB
375 2202 814 (1. Click on the TOPO and MAP buttons.) 814 SB
375 2252 1786 (2. Click on the SPD button in the first column.  Then select a value near 45.0 on the slider) 1786 SB
465 2302 337 (and click on OK.) 337 SB
375 2352 1660 (3. Turn on ANIMATE and you will see an animation of the 45 m/s wind isosurface.) 1660 SB
225 2452 871 (To make some interactive wind trajectories:) 871 SB
375 2552 1468 (1. Turn off the wind speed isosurface by clicking on the SPD button again) 1468 SB
375 2602 732 (2. Select the TRAJECTORY button.) 732 SB
375 2652 1793 (3. Move the mouse pointer into the 3-D window and press the middle mouse button.  You) 1793 SB
465 2702 1530 (will get a series of white wind trajectory lines passing through the 3-D cursor) 1530 SB
465 2752 172 (location.) 172 SB
375 2802 1747 (4. Move the 3-D cursor by dragging it with the right mouse button then click the middle) 1747 SB
465 2852 664 (button to make more trajectories.) 664 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (57) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
375 220 1623 (5. Select RIBBON and then the SET 2 button and try making some yellow ribbon) 1623 SB
465 270 234 (trajectories.) 234 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 419 839 (8.3  Example McIDAS files and utilities) 839 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
375 520 1697 (The Schlesinger and LAMPS data sets are also available as the 3D McIDAS grid files) 1697 SB
225 570 1898 (named GR3D0001 and GR3D0002.  They are available on the Vis5D ftp site.  See section 2 for) 1898 SB
225 620 358 (more information.) 358 SB
225 720 1677 (To list the grids in GR3D0001 and to see statistics about them, enter the commands:) 1677 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 824 750 (igg3d list 1 190 -gr3df 1) 750 SB
375 874 750 (igg3d info 1 190 -gr3df 1) 750 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 970 1480 (The SCHL.v5d file was made from the GR3D0001 file with the command:) 1480 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 1074 720 (gr3d_to_v5d 1 1 SCHL.v5d) 720 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1220 1677 (To list the grids in GR3D0002 and to see statistics about them, enter the commands:) 1677 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 1324 750 (igg3d list 1 189 -gr3df 2) 750 SB
375 1374 750 (igg3d info 1 189 -gr3df 2) 750 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1470 1518 (The LAMPS.v5d file was made from the GR3D0002 file with the command:) 1518 SB
32 0 0 50 50 0 0 0 41 /Courier-Bold /font9 ANSIFont font
375 1574 750 (gr3d_to_v5d 2 1 LAMPS.v5d) 750 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1670 1561 (A variety of other sample datasets are available on the ftp site or upon request.) 1561 SB
32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font
225 1869 521 (9. VERSION HISTORY) 521 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
225 1970 870 (This is a summary of the versions of Vis5D.) 870 SB
225 2070 438 (1.0  \(December 1988\)) 438 SB
375 2120 1660 (This was the original version of Vis5D for the Stellar GS-1000.  It was used to give) 1660 SB
375 2170 1793 (demonstrations at the ECMWF in December 1988 and at the AMS conference in Anahiem) 1793 SB
375 2220 928 (in January 1989.  It had the following features:) 928 SB
525 2270 1639 (Depict time series of multivariate 3-D grids by animated isosurfaces and horizontal) 1639 SB
675 2320 370 (contour line slices.) 370 SB
525 2370 903 (World topography map with map boundaries.) 903 SB
525 2420 959 (Wind trajectory tracing with the traj5d program.) 959 SB
225 2520 309 (2.0  \(Fall 1991\)) 309 SB
375 2570 979 (This version was only available for the Stellar GS) 979 SB
1354 2570 816 (-1000/2000 and introduced the following) 816 SB
375 2620 171 (features:) 171 SB
525 2720 569 (Faster isosurface generation.) 569 SB
525 2770 1305 (Horizontal and vertical slices moved interactively with the mouse.) 1305 SB
525 2820 293 (Colored slices.) 293 SB
525 2870 712 (Interactive wind trajectory creation.) 712 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (58) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
525 220 390 (Ribbon trajectories.) 390 SB
525 270 481 (Label / text annotations.) 481 SB
525 320 515 ("Pretty" rendering option.) 515 SB
375 420 1797 (The format of the compressed grid file was changed slightly with version 2.0.  Specifically,) 1797 SB
375 470 1651 (the trajectory files of version 1.0 were eliminated, trajectories are now stored in the) 1651 SB
375 520 1789 (compressed grid file itself.  Also, the internal storage representation for surfaces and slices) 1789 SB
375 570 360 (has been changed.) 360 SB
225 670 413 (2.1  \(February 1992\)) 413 SB
375 720 1784 (This is the first version of Vis5D available for the SGI and IBM workstations.  It was also) 1784 SB
375 770 1155 (modified to use less memory during isosurface generation.) 1155 SB
225 870 337 (2.2  \(April 1992\)) 337 SB
375 920 1147 (This version of Vis5D runs on the base SGI Indigo with 8) 1147 SB
1522 920 623 (-bit color though some features) 623 SB
375 970 1073 (not available.  It also has the following improvements:) 1073 SB
525 1070 1585 (The -box option for changing the proportions of the 3-D box \(SGI and Stardent) 1585 SB
675 1120 115 (only\).) 115 SB
525 1170 1469 (User topography files.  Vis5D now uses the EARTH.TOPO file instead of) 1469 SB
675 1220 1437 (TOPOHRES to make the map.  The maketopo.c program shows how to) 1437 SB
675 1270 968 (make new .TOPO files.  \(SGI and Stardent only\)) 968 SB
225 1370 380 (3.0  \(August 1992\)) 380 SB
375 1420 995 (This version features the following improvements:) 995 SB
525 1470 836 (Horizontal and vertical wind vector slices.) 836 SB
525 1520 929 (Improved SAVE and RESTORE functionality.) 929 SB
525 1570 619 (New trajectory widget options.) 619 SB
525 1620 782 (Separate map and topography controls.) 782 SB
525 1670 452 (CLONE option added.) 452 SB
525 1720 897 (Simultaneous colored and contour line slices.) 897 SB
525 1770 985 (Improved transparency, PRETTY option on SGI.) 985 SB
525 1820 937 (Same source code for SGI, Stardent, and IBM.) 937 SB
525 1870 917 (Improved portability and porting guide added.) 917 SB
525 1920 937 (New video and hardcopy convenience features.) 937 SB
225 2020 315 (3.1  \(July 1993\)) 315 SB
375 2070 278 (New features:) 278 SB
525 2120 626 (User-written analysis functions.) 626 SB
525 2170 996 (SAVE PIC button to save window image to a file.) 996 SB
525 2220 532 (Perspective viewing mode.) 532 SB
525 2270 1622 (New contour line options to draw dashed negative lines and restrict contouring to) 1622 SB
675 2320 511 (a specific range of values.) 511 SB
525 2370 361 (Data Probe mode.) 361 SB
525 2420 521 (Topography color editing.) 521 SB
525 2470 761 (Grid compression done layer-by-layer.) 761 SB
225 2570 380 (3.2  \(August 1993\)) 380 SB
375 2620 533 (New features and changes:) 533 SB
525 2670 1525 (Volumetric rendering on SGI systems with VGX, VGXT, VTX, RE, or RE2) 1525 SB
675 2720 377 (graphics hardware.) 377 SB
525 2770 728 (User-contributed software directory.) 728 SB
525 2820 723 (2-D contour function rewritten in C.) 723 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (59) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
225 220 388 (3.3  \(January 1994\)) 388 SB
375 270 278 (New features:) 278 SB
525 320 1551 (Vis5D ported to HP, DEC, Sun, and Kubota \(DEC Alpha\) workstations.  The) 1551 SB
675 370 1449 (most important part of this work was the enhancement and integration of) 1449 SB
675 420 1468 (the VOGL library.  This work was done by Simon Baas and Hans de Jong) 1468 SB
675 470 1392 (for the Dutch Meteorological Institute, KNMI.  Porting to the Kubota) 1392 SB
675 520 1450 (Denali graphics system was done by Pratish Shah of Kubota Inc.  Thanks) 1450 SB
675 570 108 (guys!) 108 SB
525 620 1590 (-wdpy option now creates a window on the widget display which can be used to) 1590 SB
675 670 567 (move and interact with the 3) 567 SB
1242 670 833 (-D view using the widget display's mouse.) 833 SB
525 720 1444 (SAVEPIC button let's you save the window image in PostScript or color) 1444 SB
675 770 610 (PostScript formats \(SGI only\).) 610 SB
525 820 1635 (-wind2 option added to specify a second set of U,V,W variables for the second set) 1635 SB
675 870 422 (of wind vector slices.) 422 SB
525 920 1592 (-texture option added for a texture mapping an image onto the topography \(SGI) 1592 SB
675 970 115 (only\).) 115 SB
525 1020 1617 (user functions are computed faster on SGI multi-processor systems by computing) 1617 SB
675 1070 418 (time steps in parallel.) 418 SB
225 1170 438 (4.0  \(December 1994\)) 438 SB
375 1220 278 (New features:) 278 SB
525 1270 1066 (Map projections and new vertical coordinate systems.) 1066 SB
525 1320 930 (Type-in formulas for computing new variables.) 930 SB
525 1370 1635 (Time sequences of satellite images can be texture mapped onto the topography for) 1635 SB
675 1420 702 (visual comparison with model data.) 702 SB
525 1470 907 (Data may be displayed over a spherical Earth.) 907 SB
525 1520 1559 (File caching:  compressed grid files which are too large to read into memory in) 1559 SB
675 1570 1415 (their entirety are read in piece-by-piece as needed, a least-recently-used) 1415 SB
675 1620 1227 (replacement policy is used to purge data when memory is full.) 1227 SB
525 1670 1592 (New compressed grid format.  New format allows new header information to be) 1592 SB
675 1720 1386 (added in the future, currently stores additional projection information.) 1386 SB
675 1770 813 (Also allows control of data compression.) 813 SB
525 1820 583 (New command line options:  ) 583 SB
1108 1820 230 (-geometry, ) 230 SB
1338 1820 191 (-trajvars, ) 191 SB
1529 1820 244 (-projection, ) 244 SB
1773 1820 189 (-vertical, ) 189 SB
1962 1820 113 (-area,) 113 SB
675 1870 198 (-sequence) 198 SB
525 1920 1612 (External functions can query the probe position and values with PROBEPOS and) 1612 SB
675 1970 470 (PROBEVAL functions.) 470 SB
525 2020 1184 (Interactive control over animation rate \(using F and S keys\)) 1184 SB
525 2070 1554 (When the "GRID #'s" button is turned on, the probe/trajectory cursor snaps to) 1554 SB
675 2120 393 (discrete grid points.) 393 SB
525 2170 1468 (New utilities for .v5d files:  v5dinfo, v5dstats, v5dedit, comp_to_v5d, and) 1468 SB
675 2220 270 (gr3d_to_v5d.) 270 SB
225 2320 325 (4.1  \(May 1995\)) 325 SB
375 2370 278 (New features:) 278 SB
525 2420 482 (Rotated map projection.) 482 SB
525 2470 373 (Improved widgets.) 373 SB
525 2520 483 (Stored-frame animation.) 483 SB
525 2570 1258 (Better 3-D rendering in software using Mesa instead of VOGL.) 1258 SB
525 2620 1601 (Vis5D files defined as a World Wide Web medium for exchanging model output.) 1601 SB
225 2720 337 (4.2  \(April 1996\)) 337 SB
375 2770 278 (New features:) 278 SB
525 2820 354 (Wind streamlines.) 354 SB
525 2870 723 (Colored isosurfaces and trajectories.) 723 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (60) 42 SB
EJ RS
%%PageTrailer
SS
0 0 25 25 798 1100 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
525 220 371 (Scripting with Tcl.) 371 SB
525 270 447 (UVW variable widget.) 447 SB
525 320 713 (Pressure vertical coordinate system.) 713 SB
525 370 1120 (programmer's API between Vis5D and its user interface.) 1120 SB
525 420 1629 (v5dSetLowLev function allows fields to occupy any sub-interval of vertical levels.) 1629 SB
525 470 1194 (physical units can be specified for each variable in a v5d file.) 1194 SB
525 520 401 (v5dimport program.) 401 SB
225 620 337 (4.3  \(April 1997\)) 337 SB
375 670 278 (New features:) 278 SB
525 720 536 (Vertical sounding window.) 536 SB
225 820 315 (5.0  \(July 1998\)) 315 SB
375 870 278 (New features:) 278 SB
525 920 900 (Display multiple v5d datasets in one window.) 900 SB
525 970 1257 (Display multiple v5d datasets side-by-side in multiple windows.) 1257 SB
525 1020 1018 (Link user interface controls in 'groups' of windows.) 1018 SB
525 1070 1198 (Type-in formulas can combine fields from multiple data sets.) 1198 SB
525 1120 1534 (Open or create new datasets during a Vis5D session \(v5dimport embedded in) 1534 SB
675 1170 158 (Vis5D\).) 158 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1179 3027 42 (61) 42 SB
EJ RS
%%PageTrailer
%%Trailer
SVDoc restore
end
% TrueType font name key:
%    MSTT31c135 = 13b7DTimes New RomanF00000032000002bc0000
%    MSTT31c14c = 13b7DTimes New RomanF00000032000001900000
%    MSTT31c159 = 13b7DTimes New RomanF0000002a000001900000
%    MSTT31c166 = 13b7DCourier NewF00000032000002bc0000
%    MSTT31c172 = 13b7DCourier NewF00000032000001900000
%    MSTT31c17e = 13b7DTimes New RomanF00000032000001900001
%%DocumentSuppliedResources: procset Win35Dict 3 1

%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman

%%EOF
