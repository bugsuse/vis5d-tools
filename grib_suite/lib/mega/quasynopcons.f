c Copyright (C) 2000 

c Questo programma è software libero; è lecito ridistribuirlo e/o
c modificarlo secondo i termini della Licenza Pubblica Generica SMR come
c pubblicata da ARPA SMR ; o la versione 1 della licenza o (a scelta)
c una versione successiva.

c Questo programma è distribuito nella speranza che sia utile, ma SENZA
c ALCUNA GARANZIA; senza neppure la garanzia implicita di
c COMMERCIABILITÀ o di APPLICABILITÀ PER UN PARTICOLARE SCOPO. Si veda
c la Licenza Pubblica Generica SMR per avere maggiori dettagli.

c Ognuno dovrebbe avere ricevuto una copia della Licenza Pubblica
c Generica SMR insieme a questo programma; in caso contrario, la si può
c ottenere da Agenzia Regionale Prevenzione e Ambiente (ARPA) Servizio
c Meteorologico Regionale (SMR), Viale Silvani 6, 40122 Bologna, Italia





	SUBROUTINE QUASYNOPCONS(FLAG,IER)

COMSTART QUASYNOPCONS
C	SUBROUTINE QUASYNOPCONS(FLAG,IER)
C
c	controllo di qualita` sulla consistenza internain un report synop.
c	OGNI VARIABILE SYNOP VIENE CONFRONTATA CON le altre variabili presenti
c	nel report; ogni accoppiamento deve veder soddisfatte alcune condizioni
c	fisiche o inerenti la cifratura.
c
c	FLAG(43)	BYTE	incrementato di uno per ogni accoppiamento
c				tra le 43 variabili synop che ha segnalato
c				un errore
c	IER		I*4	condizione di errore
C			IER=1	tipo messaggio errato
c			IER=-1	non trovo i dati anagrafici della stazione
c				e quindi faccio controlli piu` blandi.

c	COMMON /RRW/RRW
c	RRW(50)		I*2	RRW(50) per passare i dati synop come dichiarato
c				in met$inc:synop.inc
c	COMMON /CODER/CODER	
c	CODER(10)	BYTE	BIT MAP per la segnalazione dell'esito
c				di ogni specifico confronto. In questi otto
c				byte ogni bit e` associato a un particolare
c				accoppiamento tra variabili. Il bit settato
c				a 0 significa che non c'e` stata nessuna
c				segnalazione di errore. Il bit settato
c				a 1 significa che quell'accoppiamento di
c				variabili ha segnalato errore. La posizione
c				del bit da testare e` di seguito descritta.
c				Si consiglia di utilizzare la routine
c				BITR appositamente scritta (vedi propria
c				documentazione).

C	Per indirizzare il vettore FLAG alla variabile interessata si puo`
c	utilizzare, includendo nel proprio programma, il file
c	megainc$dir:quasynop.inc ed utilizzare come indici del vettore le
c	variabili che hanno lo stesso nome della variabile (meteodata)
c	preceduto da 'IN'. Ad esempio:
c	per la temperatura        FLAG(INTATA)

c	I principi generali su cui sono basati questi controlli di qualita`
c	sono stati ricavati con alcuni adattamenti da:

c    1) W.W.W. PLANNING REPORT N.26  'QUALITY CONTROL PROCEDURES 
c       FOR METEOROLOGICAL DATA'
c
c    2) technical note  E.C.M.W.F.- operations department- 
c       'quality control checks applied to observational data'
c
c    3) AERONAUTICA MILITARE ITALIANA REGOLAMENTO DI SERVIZIO N.5 
c       'MESSAGGI METEOROLOGICI' MET RS 5  FM 12-VIII SYNOP
c
c	OGNI VARIABILE VIENE CONFRONTATA CON UNA O PIU` VARIABILI PRESENTI
c	NELLO STESSO REPORT PER VERIFICARNE LA VALIDITA`.
c
cPOSIZIONE	VARIABILE	VARIABILI
cNELLA BIT MAP	DA CONTROLLARE	DI CONFRONTO
c
c   1		TATA		TETE
c   2		TATA		TEMPRS
c   3		TATA		TDTD
c   4		TDTD		TETE
c   5		TDTD		TATA
c   6		TDTD		TEMPRS-TATA
c   7		DD		FF 
c   8		FF 		DD
c   9		FF 		TEMPRS
c  10		PRES 		P0P0
c  11		P0P0 		PRES
c  12		VIS  		TEMPRS
c  13		TEND 		CART
c  14		PRECI  		TEMPRS
c  15		PRECI  		TEMPAS
c  16		TEMPRS 		NTOT  
c  17		TEMPRS 		VIS  
c  18		TEMPRS 		TATA  		
c  19		TEMPRS 		TATA-TDTD-UMID 	
c  20		NTOT 		NH  		
c  21		NTOT 		NH-CH  		
c  22		NTOT 		NH-CM-CH  	
c  23		NTOT 		NH-HH 		
c  24		NTOT 		CL  		
c  25		NTOT 		CM  		
c  26		NTOT 		CM-CH-CL  	
c  27		NTOT 		CH  		
c  28		NTOT 		8 GRUPS		
c  29		NTOT 		TEMPRS		
c  30		NTOT	 	NSS  		
c  31		NTOT 		VIS 		
c  32		NTOT 		HH  		
c  33		TETE   		TATA    	
c  34		TETE   		TDTD    	
c  35		TATA   		TDTD  TEMPRS		
c  36		VIS		NTOT		
c  37		TEMPRS		FF		
c  38		TEMPRS		PRECI		
c  39		TEMPAS		PRECI		
c  40	 	TR		ORA REPORT	
c  41	  	GEOP		P0P0		
c  42	  	CL		8GRUPS		
c  43 		CL		NH		
c  44  		CL		CM NH		
c  45		CL		CH NTOT NH	
c  46		CL		CM CH		
c  47		CM		CH		
c  48		CM		CH NTOT NH		
c  49		CM		CL 8GRUPS	
c  50		CM		NH		
c  51		CM		8GRUPS		
c  52		CH		NTOT		
c  53		CH		CM CL 8GROUPS	
c  54		CH		8GROUP		
c  55		CART		TEND		
c  56		NH		NTOT            
c  57		NH		NTOT CH         
c  58		P0P0		GEOP            
c  59		NH		CL              
c  60		NH		CL CM           
c  61		CL		HH CM           
c  62		NH		CM              
c  63		CM		NH CL           
c  64		CM		HH CL		
c  65		HH		VIS		
c  66		VIS		HH		
c  67		HH		NTOT		
c  68		HH		NH		
c  69		HH		CL CM		
c  70		NH		CH		
c  71		NH		HH		
c  72		NH		8 GRUPS		
c
cVARIABILE	CONFRONTO	CONDIZIONE DI ERRORE
c
cTATA		TETE		TATA>TETE 	ORE 18
c				TATA<TETE	ORE 06
c		TEMPRS		TATA<-20	TEMPRS=20,21,25 		PRECIPITAZIONI LIQUIDE ORA PRECEDENTE
c				TATA<-20	TEMPRS=50-55,58-65,80-82,91,92 	PRECIPITAZIONI LIQUIDE 
c			TATA>60 O TATA<-70	TEMPRS=23,24 			PIOVIGGINE O PIOGGIA MISTA A NEVE O CONGELENTESI
c											ORA PRECEDENTE
c			TATA>60 O TATA<-70	TEMPRS=56,57,66,67,68,69,83,84	PIOVIGGINE O PIOGGIA CONGELANTESI O
c											PIOGGIA O ROVESCIO MISTO A NEVE
c				TATA>60		TEMPRS=22,26			NEVE ORA PRECEDENTE
c				TATA>60		TEMPRS=70-79,85-88		NEVE
c				TATA>40		TEMPRS=48,49			NEBBIA CHE FORMA UNO STRATO DI GHIACCIO
c				TATA>40		TEMPRS=36-39			SCACCIANEVE
c				TATA<40		TEMPRS=30-35			TEMPESTA DI SABBIA
c				TATA<-70	TEMPRS=17,91-99			TEMPORALE
c				TATA<-70	TEMPRS=27,89,90			GRANDINE
c
c		TDTD		TATA<TDTD	
c
c		TDTD-TEMPRS	TATA>TDTD+45	TEMPRS=40,41,50-97,99
c				TATA>TDTD+10	TEMPRS=42-49
c
cTDTD		TETE		TDTD>TETE 	ORE 18
c		TATA		TATA<TDTD
c		TEMPRS-TATA	TATA>TDTD+45	TEMPRS=40,41,50-97,99
c				TATA>TDTD+10	TEMPRS=42-49
c
cDD		FF		C'E` DD E NON C'E` FF
c				DD= 0		FF<>0
c				DD<>0		FF= 0
c				DD=999		FF>6
c
cFF		DD		C'E` FF E NON C'E` DD
c				FF<>0		DD= 0
c				FF= 0		DD<>0
c				FF>6		DD=999
c		TEMPRS		FF<10		TEMPRS=09,30-39
c
cPRES		P0P0		PRES+10<P0P0
c				PRES+10<P	CON P RICALCOLATO CON P0P0 TATA
c				PRES-10>P	E ALTEZZA STAZIONE
c
cP0P0		PRES		PRES+10<P0P0
c				PRES+10<P	CON P RICALCOLATO CON P0P0 TATA
c				PRES-10>P	E ALTEZZA STAZIONE
c
c		GEOP TATA	GEOP+5<G	CON G RICALCOLATO CON P0P0 TATA
c				GEOP-5>G	ALTEZZA STAZ. E LIVELLO STANDARD
c
cGEOP		P0P0 TATA	GEOP+5<G	CON G RICALCOLATO CON P0P0 TATA
c				GEOP-5>G	ALTEZZA STAZ. E LIVELLO STANDARD
c
cVIS		TEMPRS		TEMPRS=00-03	VIS<10
c				05,29,40
c				TEMPRS=41-49,	VIS>10
c				TEMPRS=74,75	VIS>20
c				TEMPRS=10	VIS>100
c
c		NTOT		VIS=>10		NTOT=9
c
!		HH		VIS>100		HH<100
c
cCART		TEND		CART=4		TEND<>0
c				CART=1,2,3,6,
c					7,8	TEND=0
c
cTEND		CART		TEND<>0		CART=4
c				TEND=0		CART=1,2,3,6,7,8
c
cPRECI		TEMPRS		PRECI=0		TEMPRS=20-27,99,50-75,80-97
c
c		TEMPAS          PRECI=0         TEMPAS=5,6,7,8
c
cTR		ORA REPORT	TR<>12		ORA REPORT=06,18
c				TR<>6		ORA REPORT=00,12
c
cTEMPRS		NTOT		TEMPRES=03,	NTOT=0  
c				14-17,
c				50-75,77-99
c				TEMPRS=43,45,	NTOT<>9
c				47,49
c				TEMPRS=0-29,	NTOT=9
c				40,42,44,46,48
c		VIS		TEMPRS=00-03	VIS<10
c				05,29,40
c				TEMPRS=41-49,	VIS>10
c				TEMPRS=74,75	VIS>20
c				TEMPRS=10	VIS>100
c
c		TATA		TATA<-20	TEMPRS=20,21,25 		PRECIPITAZIONI LIQUIDE ORA PRECEDENTE
c				TATA<-20	TEMPRS=50-55,58-65,80-82,91,92 	PRECIPITAZIONI LIQUIDE 
c			TATA>60 O TATA<-70	TEMPRS=23,24 			PIOVIGGINE O PIOGGIA MISTA A NEVE O CONGELENTESI
c											ORA PRECEDENTE
c			TATA>60 O TATA<-70	TEMPRS=56,57,66,67,68,69,83,84	PIOVIGGINE O PIOGGIA CONGELANTESI O
c											PIOGGIA O ROVESCIO MISTO A NEVE
c				TATA>60		TEMPRS=22,26			NEVE ORA PRECEDENTE
c				TATA>60		TEMPRS=70-79,85-88		NEVE
c				TATA>40		TEMPRS=48,49			NEBBIA CHE FORMA UNO STRATO DI GHIACCIO
c				TATA>40		TEMPRS=36-39			SCACCIANEVE
c				TATA<40		TEMPRS=30-35			TEMPESTA DI SABBIA
c				TATA<-70	TEMPRS=17,91-99			TEMPORALE
c				TATA<-70	TEMPRS=27,89,90			GRANDINE
c		TATA-TDTD/UMID  TEMPRS=40,41,	(TATA-TDTD)>45/UMID<85
c				50,97,99
c				TEMPRS=42-49,	(TATA-TDTD)>10/UMID<95
c		FF		TEMPRS=09,30-39	FF<10
c		PRECI		PRECI=0		TEMPRS=20-27,99,50-75,80-97
c
cTEMPAS		PRECI		TEMPAS=5,6,7,8	PRECI=0         
c
cTETE		TATA		TATA>TETE 	ORE 18
c				TATA<TETE	ORE 06
c		TDTD		TDTD>TETE	ORE 18
c
cNTOT		NH		NTOT<NH
c				NTOT=9		NH<9
c
c		NH-CH		NTOT>0 		NH=0, CH=0
c
c		NH-CM-CH	NTOT>NH		CM=0,CH=0
c				NTOT=8		NH<8, CM=CH=MANCANTE
c
c		NH-HH		NTOT<>0		NH=0, HH<2500
c
c		CL		NTOT=0 		CL>0
c				NTOT=9		0<= CL <=9
c
c		CM		NTOT=0 		CM>0
c				NTOT=9 		0<= CM <=9
c
c		CM-CH-CL	NTOT>0		CL=0,CM=0,CH=0
c
c		CH		NTOT=0 		CH>0
c				NTOT=9 		0<= CH <=9
c
c		8 GRUPS		NTOT=0  	8 GRUPS PRESENTI
c
c		TEMPRES		NTOT=0 		TEMPRES=03,14-17,
c				     		50-75,77-99
c				NTOT<>9		TEMPRS=43,45,47,49
c				NTOT=9		TEMPRS=0-29,40,42,
c						44,46,48
c
c		NSS		NTOT=9		NSS<>9
c				NTOT<>9		NSS=9
c				NTOT<NSS
c
c		VIS		NTOT=9		VIS=>10
c
c		HH		NTOT=0		HH<2500
!				NTOT<>9		HH=MANCANTE
c				
cHH		VIS		HH<100		VIS>100
c
c		NTOT		HH=MANCANTE	NTOT<>9
c				HH<2500		NTOT=0
c
c		NH		HH<2500		NH=0
c
c		CL-CM		HH<2500		CL=0, CM=0
c
c
cNH		NTOT		NH>NTOT
c				NH<9		NTOT=9
c
c		NTOT-CH		NH=0		NTOT>0, CH=0
c
c		CL		NH<>9		CL=MANCANTE
c				NH=0		CL<>0
c		CL-CM		NH<>0		CL=0, CM=0
c				NH=8		1=< CL =<9, CM<> MANCANTE
c
c		CM		NH=0		CM<>0
c
c		CH		NH=8		CH<>MANCANTE
c
c		HH		NH=0		HH<2500
!				NH<>9		HH=MANCANTE
c
c		8 GRUPS		NH=0		8 GRUPS PRESENTI  (SOLO SE E` VERO CHE LE NUBI ALTE NON VENGONO CIFRATE NEI GRUPPI 8 ????????
c				1=<NH=<8	8 GRUPS MANCANTI
c
c
cCL		CSS(1-4)	CL=0		CSS(1-4)=>6 IN ALMENO UN GRUPPO
c				CL=3,9		NESSUN CSS(1-4)=9
c		CSS(1)		CL<>0		CSS(1)< 6
c		CM-NH		CL=CM=0		NH<>0
!				1=< CL =<9	NH=9, CM <>MANCANTE
c		NH		CL<>0		NH=0
c		CM-CH		CL=MANCANTE	CM E CH <>MANCANTE	
c		CH-NTOT-NH	CL=CH=0		NTOT<>NH
!		CM-HH		CL=0		CM=0, HH<2500
c
cCM		NH		CM<>0		NH=0
c		CH		CM=MANCANTE	CH<>MANCANTE
c		CL-CSS(1-4)	CM=CL=0		CSS(1-4)=>3 IN ALMENO UN GRUPPO
c		CSS(1-4)	CM=0,MANCANTE	6>CSS(1-4)>2
c		CL-CSS(1)	CM=1-9		CL=0 ,CSS(1)<3 OR CSS(1)>5
c		CH-NTOT-NH	CM=CH=0		NTOT<>NH
!		CL-HH		CM=0		CL=0, HH<2500
c
cCH		CM-CL-CSS(1-4)	CH=CM=CL=0	GRUPPI 8 PRESENTI
c		CSS(1-4)	CH=0,MANCANTE	CSS(1-4)<3
c				CH=1-4		CSS(1-4)<>0 IN TUTTI I GRUPPI
c				CH=5-8		CSS(1-4)<>2 IN TUTTI I GRUPPI
c				CH=9		CSS(1-4)<>1 IN TUTTI I GRUPPI
c		NTOT		CH=7		NTOT<>8
c		CL-CM-CSS(1)    CH=1-9 CL=CM=0  CSS(1)>2
c		



c	08/07/96	considerato caso tracce di precipitazione con TR.



COMEND

	COMMON /RRW/RRW
	COMMON /CODER/CODER

	INCLUDE 'MET$INC:SYNOP.INC'
	INCLUDE 'MET$INC:STAZIONI.INC'	!per common estrastaz
	COMMON /ESTRASTAZ/SEZ2		!per avere SISO

	INTEGER*4 STAZ,DATA(3),ORA(2),TIPO
	BYTE FLAG(43)
	INTEGER*2 RRW(50)
	LOGICAL C_E

	PARAMETER NBYTE=10
	LOGICAL BIT
	BYTE CODER(NBYTE)
	DATA BIT/.TRUE./

	CHARACTER*24 ANOME

	INCLUDE 'MEGAINC$DIR:QUASYNOP.INC/NOLIST'

C	temperatura
	PARAMETER D1A=22,D1B=10,D1C=16,D1D=6,D1E=6,D1F=13,D1G=3,D1H=8
	INTEGER COD1A(D1A),COD1B(D1B),COD1C(D1C),COD1D(D1D),COD1E(D1E),
	1	COD1F(D1F),COD1G(D1G),COD1H(D1H)
	DATA COD1A/20,21,25,50,51,52,53,54,55,58,59,60,61,62,63,64,	!
	1	65,80,81,82,91,92/					!22
	DATA COD1B/23,24,56,57,66,67,68,69,83,84/			!10
	DATA COD1C/22,26,70,71,72,73,74,75,76,77,78,79,85,86,87,88/	!16
	DATA COD1D/48,49,36,37,38,39/					!6
	DATA COD1E/30,31,32,33,34,35/					!6
	DATA COD1F/17,91,92,93,94,95,96,97,98,99,27,89,90/		!13
	DATA COD1G/40,41,99/						!2
	DATA COD1H/42,43,44,45,46,47,48,49/				!8

c	vento
	PARAMETER D2A=11
	INTEGER COD2A(D2A)
	DATA COD2A/09,30,31,32,33,34,35,36,37,38,39/			!11

c	visibilita`
	PARAMETER D3A=30,D3B=9,D3C=2
	INTEGER COD3A(D3A),COD3B(D3B),COD3C(D3C)
	DATA COD3A/00,01,02,03,05,06,07,08,09,10,11,12,13,14,15,16,17,
	1	   18,19,20,21,22,23,24,25,26,27,28,29,40/		!30
	DATA COD3B/41,42,43,44,45,46,47,48,49/				!9
	DATA COD3C/74,75/						!2

C	tendenza
	PARAMETER D4A=6
	INTEGER COD4A(D4A)
	DATA COD4A/1,2,3,6,7,8/						!6

C	precipitazione
	PARAMETER D5A=9,D5B=4
	INTEGER COD5A(D5A),COD5B(D5B)
	DATA COD5A/20,21,22,23,24,25,26,27,99/				!9
	DATA COD5B/5,6,7,8/						!4

C	tempo presente
	PARAMETER D6A=5,D6B=4,D6C=30,D6D=9,D6E=2,
C	1	D6F=24,
	1	D6G=3,D6H=8,D6I=5
	INTEGER COD6A(D6A),COD6B(D6B),COD6C(D6C),COD6D(D6D),COD6E(D6E),
C	1	COD6F(D6F),
	1	COD6G(D6G),COD6H(D6H),COD6I(D6I)

	DATA COD6A/03,14,15,16,17/					!5
	DATA COD6B/43,45,47,49/						!4
	DATA COD6C/00,01,02,03,05,06,07,08,09,10,11,12,13,14,15,16,17,
	1	   18,19,20,21,22,23,24,25,26,27,28,29,40/		!30
	DATA COD6D/41,42,43,44,45,46,47,48,49/				!9
	DATA COD6E/74,75/						!2
C	DATA COD6F/48,49,56,57,66,67,68,69,70,71,72,73,74,75,76,77,78,79,
C	1		83,84,85,86,87,88/				!24
	DATA COD6G/40,41,99/						!3
	DATA COD6H/42,43,44,45,46,47,48,49/				!8
	DATA COD6I/40,42,44,46,48/					!5

C	nuvolosita` totale

	PARAMETER D7A=5,D7B=4,D7C=5
	INTEGER COD7A(D7A),COD7B(D7B),COD7C(D7C)
	DATA COD7A/03,14,15,16,17/					!5
	DATA COD7B/43,45,47,49/						!4
	DATA COD7C/40,42,44,46,48/					!5

C	temperatura di rugiada

	PARAMETER D8A=3,D8B=8
	INTEGER COD8A(D8A),COD8B(D8B)
	DATA COD8A/40,41,99/						!2
	DATA COD8B/42,43,44,45,46,47,48,49/				!8

	PARAMETER IATT=2

	IER=0
	CALL GETHEA (STAZ,DATA,ORA,TIPO,RRW)

	IF (TIPO.NE.1)THEN
		IER=1
		RETURN
	END IF


C	<<<<<<<<<<<<<<<<<<<<<<< CONTROLLO  TEMPERATURA >>>>>>>
C	********  TATA TETE *********

	IF (.NOT.C_E(TATA).OR..NOT.C_E(TETE))GOTO 10
	IF (FLAG(INTATA).GE.IATT.OR.FLAG(INTETE).GE.IATT)GOTO 10

	IF (ORA(1).EQ.18.AND.TATA.GT.TETE)GOTO 1
	IF (ORA(1).EQ.06.AND.TATA.LT.TETE)GOTO 1

	GOTO 10

1	FLAG(INTATA)=FLAG(INTATA)+1
	CALL BITW(CODER,BIT,1)

10	CONTINUE
C	************  TATA TEMPRS *********

	IF (.NOT.C_E(TEMPRS).OR..NOT.C_E(TATA))GOTO 20
	IF (FLAG(INTEMPRS).GE.IATT.OR.FLAG(INTATA).GE.IATT)GOTO 20

	DO I=1,D1A
	IF(TATA.LT.-20.AND.COD1A(I).EQ.TEMPRS)GOTO 2
	END DO

	DO I=1,D1B
	IF((TATA.GT.60.OR.TATA.LT.-70).AND.COD1B(I).EQ.TEMPRS)GOTO 2
	END DO

	DO I=1,D1C
		IF(TATA.GT.60.AND.COD1C(I).EQ.TEMPRS)GOTO 2
	END DO

	DO I=1,D1D
		IF(TATA.GT.40.AND.COD1D(I).EQ.TEMPRS)GOTO 2
	END DO

	DO I=1,D1E
		IF(TATA.LT.40.AND.COD1E(I).EQ.TEMPRS)GOTO 2
	END DO

	DO I=1,D1F
		IF(TATA.LT.-70.AND.COD1F(I).EQ.TEMPRS)GOTO 2
	END DO

	GOTO 20

2	FLAG(INTATA)=FLAG(INTATA)+1
	CALL BITW(CODER,BIT,2)

C	***********  TEMPRS   TATA  **********  !!!!!!!!!!!!!!!!!

	FLAG(INTEMPRS)=FLAG(INTEMPRS)+1
	CALL BITW(CODER,BIT,18)

20	CONTINUE

C	************  TATA TDTD *********

	IF (.NOT.C_E(TATA).OR..NOT.C_E(TDTD))GOTO 30
	IF (FLAG(INTATA).GE.IATT.OR.FLAG(INTDTD).GE.IATT)GOTO 30

	IF (TATA.LT.TDTD)GOTO 3
	
	GOTO 30

3	FLAG(INTATA)=FLAG(INTATA)+1
	CALL BITW(CODER,BIT,3)

30	CONTINUE

C	************  TATA TDTD TEMPRS ***********

	IF (.NOT.C_E(TEMPRS).OR.
	1	.NOT.C_E(TDTD).OR..NOT.C_E(TATA))GOTO 10000
	IF (FLAG(INTEMPRS).GE.IATT.OR.
	1	FLAG(INTDTD).GE.IATT.OR.FLAG(INTATA).GE.IATT)GOTO 10000

	DO I=1,D1G
		IF (TATA.GT.TDTD+45.AND.TEMPRS.EQ.COD1G(I))GOTO 1000
	END DO

	IF (TATA.GT.TDTD+45.AND.TEMPRS.GE.50.AND.TEMPRS.LE.97)GOTO 1000

	DO I=1,D1H
		IF (TATA.GT.TDTD+10.AND.TEMPRS.EQ.COD1H(I))GOTO 1000
	END DO

	GOTO 10000

1000	FLAG(INTATA)=FLAG(INTATA)+1
	CALL BITW(CODER,BIT,35)

10000	CONTINUE


C	<<<<<<<<<<<<< ERRORE TEMPERATURA DI RUGIADA >>>>>>>>>>>
C	********  TDTD TETE *********

	IF (.NOT.C_E(TDTD).OR..NOT.C_E(TETE))GOTO 40
	IF (FLAG(INTDTD).GE.IATT.OR.FLAG(INTETE).GE.IATT)GOTO 40

	IF (ORA(1).EQ.18.AND.TDTD.GT.TETE)GOTO 4

	GOTO 40

4	FLAG(INTDTD)=FLAG(INTDTD)+1
	CALL BITW(CODER,BIT,4)

40	CONTINUE

C	************  TDTD TATA *********

	IF (.NOT.C_E(TATA).OR..NOT.C_E(TDTD))GOTO 50
	IF (FLAG(INTATA).GE.IATT.OR.FLAG(INTDTD).GE.IATT)GOTO 50

	IF (TATA.LT.TDTD)GOTO 5

	GOTO 50

5	FLAG(INTDTD)=FLAG(INTDTD)+1
	CALL BITW(CODER,BIT,5)

50	CONTINUE

C	*************  TDTD TEMPRS TATA **********

	IF (.NOT.C_E(TEMPRS).OR.
	1	.NOT.C_E(TDTD).OR..NOT.C_E(TATA))GOTO 60
	IF (FLAG(INTEMPRS).GE.IATT.OR.
	1	FLAG(INTDTD).GE.IATT.OR.FLAG(INTATA).GE.IATT)GOTO 60

	DO I=1,D8A
		IF (TATA.GT.TDTD+45.AND.TEMPRS.EQ.COD8A(I))GOTO 6
	END DO

	IF (TATA.GT.TDTD+45.AND.TEMPRS.GE.50.AND.TEMPRS.LE.97)GOTO 6

	DO I=1,D8B
		IF (TATA.GT.TDTD+10.AND.TEMPRS.EQ.COD8B(I))GOTO 6
	END DO

	GOTO 60

6	FLAG(INTDTD)=FLAG(INTDTD)+1
	CALL BITW(CODER,BIT,6)

60	CONTINUE

c	<<<<<<<<<<<<<<<<<<<< controllo DD >>>>>>>>>>>>>>>>>

C	*****  DD  FF ********

	IF (.NOT.C_E(DD))GOTO 70
	IF (FLAG(INDD).GE.IATT)GOTO 70

	IF (.NOT.C_E(FF))GOTO 7
	IF (FLAG(INFF).GE.IATT)GOTO 7

	IF (DD.EQ.0.AND.FF.NE.0.OR.DD.NE.0.AND.FF.EQ.0)GOTO 7
	IF (DD.EQ.999.AND.FF.GT.6)GOTO 7
	GOTO 70

7	FLAG(INDD)=FLAG(INDD)+1
	CALL BITW(CODER,BIT,7)

70	CONTINUE

C	<<<<<<<<<<<<  CONTROLLO FF >>>>>>>>>>>>>>

C	************  FF DD ********

	IF (.NOT.C_E(FF))GOTO 80
	IF (FLAG(INFF).GE.IATT)GOTO 80

	IF (.NOT.C_E(DD))GOTO 8
	IF (FLAG(INDD).GE.IATT)GOTO 8

	IF (DD.EQ.0.AND.FF.NE.0.OR.DD.NE.0.AND.FF.EQ.0)GOTO 8
	IF (DD.EQ.999.AND.FF.GT.6)GOTO 8

	GOTO 80

8	FLAG(INFF)=FLAG(INFF)+1
	CALL BITW(CODER,BIT,8)

80	CONTINUE

C	************  FF TEMPRS **********

	IF (.NOT.C_E(DD).OR..NOT.C_E(TEMPRS))GOTO 90
	IF (FLAG(INDD).GE.IATT.OR.FLAG(INTEMPRS).GE.IATT)GOTO 90

	DO I=1,D2A
		IF(COD2A(I).EQ.TEMPRS.AND.FF.LT.10)GOTO 9
	END DO

	GOTO 90

9	FLAG(INFF)=FLAG(INFF)+1
	CALL BITW(CODER,BIT,9)

C	********  TEMPRS  FF   **********      !!!!!!!!!!!!!!!

	FLAG(INTEMPRS)=FLAG(INTEMPRS)+1
	CALL BITW(CODER,BIT,37)

90	CONTINUE

C	<<<<<<<<<<<<<<<<<<  PRESSIONE AL LIVELLO DEL MARE >>>>>>>

	IF (.NOT.C_E(PRES).OR..NOT.C_E(P0P0))GOTO 110
	IF (FLAG(INPRES).GE.IATT.OR.FLAG(INP0P0).GE.IATT)GOTO 110

	IF (C_E(TATA).AND.FLAG(INTATA).LT.IATT)GOTO 105

C	********  PRES P0P0 *****

104	IF (PRES+10.LT.P0P0)GOTO 11

	GOTO 110

C	********  PRES P0P0 TATA  *****

105	CONTINUE
C	leggo i dati anagrafici solo se non sono gia` stati letti

	call GETSTAZ1(staz,ANOME,HHSLM,HHPOZ,ALAT,ALON,IER)
C	
C	Serve ad associare ad una stazione i relativi parametri anagrafici
C	Letti nell' archivio meteodata.
C
C	Input	:	STAZ	= I*4	Codice W.M.O. stazione
C
C	Output	:	ANOME   = C*24	Nome della stazione
C			HHSLM	= R*4	Altezza stazione S.L.M.(m.)
C			HHPOZ	= R*4   Altezza del pozzetto (m.)
C			ALAT	= R*4	Latitudine ( Gradi,primi)
C			ALON	= R*4	Longitudine (Gradi,primi)

c	type*,'estrastaz ier=',ier

	IF (HHPOZ.LT.0.)THEN
		IER=-1
		GOTO 104
	END IF

	IPRES=RIPORTAPRES(FLOAT(P0P0)/10.,FLOAT(TATA)/10.,HHPOZ)*10

	IF(PRES+10.LT.IPRES.OR.PRES-10.GT.IPRES)GOTO 11

	GOTO 110

11	FLAG(INPRES)=FLAG(INPRES)+1
	CALL BITW(CODER,BIT,10)

110	CONTINUE

C	<<<<<<<<<<<<<<<<<<  PRESSIONE AL LIVELLO DELLA STAZIONE >>>>>>>

	IF (.NOT.C_E(PRES).OR..NOT.C_E(P0P0))GOTO 120
	IF (FLAG(INPRES).GE.IATT.OR.FLAG(INP0P0).GE.IATT)GOTO 120

	IF (C_E(TATA).AND.FLAG(INTATA).LT.IATT)GOTO 115

C	********  P0P0 PRES *****

114	IF (PRES+10.LT.P0P0)GOTO 12

	GOTO 120

C	********  P0P0 PRES TATA  *****

115	CONTINUE
C	leggo i dati anagrafici solo se non sono gia` stati letti

	call GETSTAZ1(staz,ANOME,HHSLM,HHPOZ,ALAT,ALON,IER)
C	
C	Serve ad associare ad una stazione i relativi parametri anagrafici
C	Letti nell' archivio meteodata.
C
C	Input	:	STAZ	= I*4	Codice W.M.O. stazione
C
C	Output	:	ANOME   = C*24	Nome della stazione
C			HHSLM	= R*4	Altezza stazione S.L.M.(m.)
C			HHPOZ	= R*4   Altezza del pozzetto (m.)
C			ALAT	= R*4	Latitudine ( Gradi,primi)
C			ALON	= R*4	Longitudine (Gradi,primi)

c	type*,'estrastaz ier=',ier

	IF (HHPOZ.LT.0.)THEN
		IER=-1
		GOTO 114
	END IF

	IPRES=RIPORTAPRES(FLOAT(P0P0)/10.,FLOAT(TATA)/10.,HHPOZ)*10

	IF(PRES+10.LT.IPRES.OR.PRES-10.GT.IPRES)GOTO 12

	GOTO 120

12	FLAG(INP0P0)=FLAG(INP0P0)+1
	CALL BITW(CODER,BIT,11)

120	CONTINUE

C	<<<<<<<<<<<<<<<<<<   VISIBILITA`   >>>>>>>>>>>>>>>>>>>>>>

C	*******  VIS  TEMPRS  ********

	IF (.NOT.C_E(VIS).OR..NOT.C_E(TEMPRS))GOTO 130
	IF (FLAG(INVIS).GE.IATT.OR.FLAG(INTEMPRS).GE.IATT)GOTO 130

	DO I=1,D3A
		IF(TEMPRS.EQ.COD3A(I).AND.VIS.LT.10)GOTO 13
	END DO

	DO I=1,D3B
		IF(TEMPRS.EQ.COD3B(I).AND.VIS.GT.10)GOTO 13
	END DO

	DO I=1,D3C
		IF(TEMPRS.EQ.COD3C(I).AND.VIS.GT.20)GOTO 13
	END DO

	IF (TEMPRS.EQ.10.AND.VIS.GT.100)GOTO 13

	GOTO 130

13	FLAG(INVIS)=FLAG(INVIS)+1
	CALL BITW(CODER,BIT,12)

130	CONTINUE

C	*******  VIS  NTOT  ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(VIS))GOTO 11000
	IF (FLAG(INNTOT).GE.IATT.OR.FLAG(INVIS).GE.IATT)GOTO 11000

	IF(NTOT.EQ.9.AND.VIS.GE.10)GOTO 1100

	GOTO 11000

1100	FLAG(INVIS)=FLAG(INVIS)+1
	CALL BITW(CODER,BIT,36)

11000	CONTINUE

C	<<<<<<<<<<<<<<<<<<   TENDENZA e CARATTERISTICA  >>>>>>>>>>>>>>>>>>>>>>
C                            -------------------------

C	*******  TEND CART  ********

	IF (.NOT.C_E(TEND).OR..NOT.C_E(CART))GOTO 140
	IF (FLAG(INTEND).GE.IATT.OR.FLAG(INCART).GE.IATT)GOTO 140

	IF (CART.EQ.4.AND.TEND.NE.0)GOTO 14

	DO I=1,D4A
		IF (TEND.EQ.0.AND.CART.EQ.COD4A(I))GOTO 14
	END DO	

	GOTO 140

14	FLAG(INTEND)=FLAG(INTEND)+1
	CALL BITW(CODER,BIT,13)

C	*******  CART TEND  ******** !!!!!!!!!!!!!

	FLAG(INCART)=FLAG(INCART)+1
	CALL BITW(CODER,BIT,55)

140	CONTINUE

C	<<<<<<<<<<<<<<<<<<   PRECIPITAZIONE   >>>>>>>>>>>>>>>>>>>>>>

C	*******  PRECI  TEMPRS  ********

	IF (.NOT.C_E(PRECI).OR..NOT.C_E(TEMPRS))GOTO 150
	IF (FLAG(INPRECI).GE.IATT.OR.FLAG(INTEMPRS).GE.IATT)GOTO 150

	DO I=1,D5A
		IF(TEMPRS.EQ.COD5A(I).AND.PRECI.EQ.0.and..not.c_e(tr))GOTO 15
	END DO

	IF (TEMPRS.GE.50.AND.TEMPRS.LE.75.AND.PRECI.EQ.0)GOTO 15
	IF (TEMPRS.GE.80.AND.TEMPRS.LE.97.AND.PRECI.EQ.0)GOTO 15

	GOTO 150

15	FLAG(INPRECI)=FLAG(INPRECI)+1
	CALL BITW(CODER,BIT,14)

C	*********  TEMPRS  PRECI  ********  !!!!!!!!!!!!!!!!

	FLAG(INTEMPRS)=FLAG(INTEMPRS)+1
	CALL BITW(CODER,BIT,38)

150	CONTINUE
C	*******  PRECI  TEMPAS  ********

	IF (.NOT.C_E(PRECI).OR..NOT.C_E(TEMPAS))GOTO 160
	IF (FLAG(INPRECI).GE.IATT.OR.FLAG(INTEMPAS).GE.IATT)GOTO 160

	DO I=1,D5B
		IF(TEMPAS.EQ.COD5B(I).AND.PRECI.EQ.0.and..not.c_e(tr))GOTO 16
	END DO

	GOTO 160

16	FLAG(INPRECI)=FLAG(INPRECI)+1
	CALL BITW(CODER,BIT,15)

C	*********  TEMPAS  PRECI  ********  !!!!!!!!!!!!!!!!

	FLAG(INTEMPAS)=FLAG(INTEMPAS)+1
	CALL BITW(CODER,BIT,39)

160	CONTINUE

c	<<<<<<<<<<<<<<<<<<<<<<<<<  TEMPO PRESENTE  >>>>>>>>>>>>>>

C	*******  TEMPRS NTOT  ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(TEMPRS))GOTO 170
	IF (FLAG(INNTOT).GE.IATT.OR.FLAG(INTEMPRS).GE.IATT)GOTO 170

	IF(NTOT.NE.0)GOTO 171
	IF (TEMPRS.GE.50.AND.TEMPRS.LE.75)GOTO 17	!NTOT.EQ.0
	IF (TEMPRS.GE.77.AND.TEMPRS.LE.99)GOTO 17
	DO I=1,D6A
		IF(TEMPRS.EQ.COD6A(I))GOTO 17
	END DO

171	IF(NTOT.EQ.9)GOTO 172
	DO I=1,D6B					!NTOT.NE.9
		IF(TEMPRS.EQ.COD6B(I))GOTO 17
	END DO

172	IF(NTOT.NE.9)GOTO 173
	IF(TEMPRS.GE.0.AND.TEMPRS.LE.29)GOTO 17		!NTOT.EQ.9
	DO I=1,D6I
		IF(TEMPRS.EQ.COD6I(I))GOTO 17
	END DO

173	GOTO 170

17	FLAG(INTEMPRS)=FLAG(INTEMPRS)+1
	CALL BITW(CODER,BIT,16)

170	CONTINUE

C	*******  TEMPRS VIS  ********

	IF (.NOT.C_E(VIS).OR..NOT.C_E(TEMPRS))GOTO 180
	IF (FLAG(INVIS).GE.IATT.OR.FLAG(INTEMPRS).GE.IATT)GOTO 180

	DO I=1,D6C
		IF(TEMPRS.EQ.COD6C(I).AND.VIS.LT.10)GOTO 18
	END DO

	DO I=1,D6D
		IF(TEMPRS.EQ.COD6D(I).AND.VIS.GT.10)GOTO 18
	END DO

	DO I=1,D6E
		IF(TEMPRS.EQ.COD6E(I).AND.VIS.GT.20)GOTO 18
	END DO

	IF (TEMPRS.EQ.10.AND.VIS.GT.100)GOTO 18

	GOTO 180

18	FLAG(INTEMPRS)=FLAG(INTEMPRS)+1
	CALL BITW(CODER,BIT,17)


180	CONTINUE

CC	*******  TEMPRS TATA  ********
C
C	IF (.NOT.C_E(TATA).OR..NOT.C_E(TEMPRS))GOTO 190
C	IF (FLAG(INTATA).GE.IATT.OR.FLAG(INTEMPRS).GE.IATT)GOTO 190
C
C	DO I=1,D6F
C		IF(TEMPRS.EQ.COD6F(I).AND.TATA.GT.50)GOTO 19
C	END DO
C
C	GOTO 190
C
C19	FLAG(INTEMPRS)=FLAG(INTEMPRS)+1
C	CALL BITW(CODER,BIT,18)
C
C
C190	CONTINUE

C	*******  TEMPRS TATA TDTD UMID ********

	IF (.NOT.C_E(TEMPRS))GOTO 210
	IF (FLAG(INTEMPRS).GE.IATT)GOTO 210

	IF (.NOT.C_E(TATA).OR..NOT.C_E(TDTD))GOTO195
	IF (FLAG(INTATA).GE.IATT.OR.FLAG(INTDTD).GE.IATT)GOTO 195

	DO I=1,D6G
		IF(TATA.GT.TDTD+45.AND.TEMPRS.EQ.COD6G(I))GOTO 21
	END DO
	IF (TATA.GT.TDTD+45.AND.TEMPRS.GE.50.AND.TEMPRS.LE.97)GOTO 21


195	IF (.NOT.C_E(UMID))GOTO 196
	IF (FLAG(INUMID).GE.IATT)GOTO 196

	DO I=1,D6G
		IF(UMID.LT.85.AND.TEMPRS.EQ.COD6G(I))GOTO 21
	END DO

	IF (UMID.LT.85.AND.TEMPRS.GE.50.AND.TEMPRS.LE.97)GOTO 21


196	CONTINUE
	IF (.NOT.C_E(TATA).OR..NOT.C_E(TDTD))GOTO 197
	IF (FLAG(INTATA).GE.IATT.OR.FLAG(INTDTD).GE.IATT)GOTO 197

	DO I=1,D6H
		IF(TEMPRS.EQ.COD6H(I).AND.TATA-TDTD.GT.10)GOTO 21
	END DO

197	IF (.NOT.C_E(UMID))GOTO 210
	IF (FLAG(INUMID).GE.IATT)GOTO 210

	DO I=1,D6H
		IF(TEMPRS.EQ.COD6H(I).AND.UMID.LT.95)GOTO 21
	END DO

	GOTO 210

21	FLAG(INTEMPRS)=FLAG(INTEMPRS)+1
	CALL BITW(CODER,BIT,19)


210	CONTINUE

c	<<<<<<<<<<<<<<<<<<<<<<<<<  NTOT  >>>>>>>>>>>>>>
C	*******  NTOT NH  ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(NH))GOTO 220
	IF (FLAG(INNTOT).GE.IATT.OR.FLAG(INNH).GE.IATT)GOTO 220

	IF(NTOT.LT.NH)GOTO 22
	IF(NTOT.EQ.9.AND.NH.LT.9)GOTO 22

	GOTO 220

22	FLAG(INNTOT)=FLAG(INNTOT)+1
	CALL BITW(CODER,BIT,20)

C	*******  NH  NTOT  ********!!!!!!!!!!!!!

	FLAG(INNH)=FLAG(INNH)+1
	CALL BITW(CODER,BIT,56)

220	CONTINUE
	

C	*******  NTOT NH-CH  ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(NH).OR..NOT.C_E(CH))GOTO 230
	IF (FLAG(INNTOT).GE.IATT.OR.
	1	FLAG(INNH).GE.IATT.OR.FLAG(INCH).GE.IATT)GOTO 230

	IF(NTOT.GT.0.AND.NH.EQ.0.AND.CH.EQ.0)GOTO 23

	GOTO 230

23	FLAG(INNTOT)=FLAG(INNTOT)+1
	CALL BITW(CODER,BIT,21)

C	*******  NH  NTOT  CH  ********!!!!!!!!!!!!

	FLAG(INNH)=FLAG(INNH)+1
	CALL BITW(CODER,BIT,57)


230	CONTINUE
	

C	*******  NTOT NH-CM-CH  ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(NH))GOTO 240
	IF (FLAG(INNTOT).GE.IATT.OR.FLAG(INNH).GE.IATT)GOTO 240

	IF(NTOT.EQ.8.AND.NH.LT.8.AND..NOT.C_E(CM).AND..NOT.C_E(CH))GOTO 24
C			test su flag

	IF(.NOT.C_E(CM).OR..NOT.C_E(CH))GOTO 240
	IF (FLAG(INCM).GE.IATT.OR.FLAG(INCH).GE.IATT)GOTO 240

	IF(NTOT.GT.NH.AND.CM.EQ.0.AND.CH.EQ.0)GOTO 24

	GOTO 240

24	FLAG(INNTOT)=FLAG(INNTOT)+1
	CALL BITW(CODER,BIT,22)

240	CONTINUE
	
C	*******  NTOT NH-HH  ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(NH).OR..NOT.C_E(HH))GOTO 245
	IF (FLAG(INNTOT).GE.IATT.OR.
	1	FLAG(INNH).GE.IATT.OR.FLAG(INHH).GE.IATT)GOTO 245

	IF(NTOT.NE.0.AND.NH.EQ.0.AND.HH.LT.2500)GOTO 246

	GOTO 245

246	FLAG(INNTOT)=FLAG(INNTOT)+1
	CALL BITW(CODER,BIT,23)

245	CONTINUE
	
C	*******  NTOT CL  ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(CL))GOTO 250
	IF (FLAG(INNTOT).GE.IATT.OR.FLAG(INCL).GE.IATT)GOTO 250

	IF(NTOT.EQ.0.AND.CL.GT.0)GOTO 25
	IF(NTOT.EQ.9.AND.CL.GE.0.AND.CL.LE.9)GOTO 25

	GOTO 250

25	FLAG(INNTOT)=FLAG(INNTOT)+1
	CALL BITW(CODER,BIT,24)

250	CONTINUE

C	*******  NTOT CM  ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(CM))GOTO 260
	IF (FLAG(INNTOT).GE.IATT.OR.FLAG(INCM).GE.IATT)GOTO 260

	IF(NTOT.EQ.0.AND.CM.GT.0)GOTO 26
	IF(NTOT.EQ.9.AND.CM.GE.0.AND.CM.LE.9)GOTO 26

	GOTO 260

26	FLAG(INNTOT)=FLAG(INNTOT)+1
	CALL BITW(CODER,BIT,25)


260	CONTINUE

C	*******  NTOT CM-CH-CL  ********

	IF (.NOT.C_E(NTOT).OR.
	1	.NOT.C_E(CM).OR..NOT.C_E(CH).OR..NOT.C_E(CL))GOTO 270
	IF (FLAG(INNTOT).GE.IATT.OR.
	1	FLAG(INCM).GE.IATT.OR.
	1	FLAG(INCH).GE.IATT.OR.FLAG(INCL).GE.IATT)GOTO 270

	IF(NTOT.GT.0.AND.CL.EQ.0.AND.CM.EQ.0.AND.CH.EQ.0)GOTO 27

	GOTO 270

27	FLAG(INNTOT)=FLAG(INNTOT)+1
	CALL BITW(CODER,BIT,26)

270	CONTINUE

C	*******  NTOT CH  ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(CH))GOTO 280
	IF (FLAG(INNTOT).GE.IATT.OR.FLAG(INCH).GE.IATT)GOTO 280

	IF(NTOT.EQ.0.AND.CH.GT.0)GOTO 28
	IF(NTOT.EQ.9.AND.CH.GE.0.AND.CH.LE.9)GOTO 28

	GOTO 280

28	FLAG(INNTOT)=FLAG(INNTOT)+1
	CALL BITW(CODER,BIT,27)

280	CONTINUE

C	*******  NTOT  8 GRUPS  ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(NSS(1)))GOTO 290
	IF (FLAG(INNTOT).GE.IATT.OR.FLAG(INNSS(1)).GE.IATT)GOTO 290

	IF(NTOT.EQ.0)GOTO 29

	GOTO 290

29	FLAG(INNTOT)=FLAG(INNTOT)+1
	CALL BITW(CODER,BIT,28)

290	CONTINUE

C	*******  NTOT  TEMPRS  ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(TEMPRS))GOTO 310
	IF (FLAG(INNTOT).GE.IATT.OR.FLAG(INTEMPRS).GE.IATT)GOTO 310

	IF(NTOT.NE.0)GOTO 311
	IF (TEMPRS.GE.50.AND.TEMPRS.LE.75)GOTO 31	!NTOT.EQ.0
	IF (TEMPRS.GE.77.AND.TEMPRS.LE.99)GOTO 31
	DO I=1,D7A
		IF(TEMPRS.EQ.COD7A(I))GOTO 31
	END DO

311	IF(NTOT.EQ.9)GOTO 312
	DO I=1,D7B					!NTOT.NE.9
		IF(TEMPRS.EQ.COD7B(I))GOTO 31
	END DO

312	IF(NTOT.NE.9)GOTO 313
	IF(TEMPRS.GE.0.AND.TEMPRS.LE.29)GOTO 31		!NTOT.EQ.9
	DO I=1,D7C
		IF(TEMPRS.EQ.COD7C(I))GOTO 31
	END DO

313	GOTO 310

31	FLAG(INNTOT)=FLAG(INNTOT)+1
	CALL BITW(CODER,BIT,29)

310	CONTINUE

C	*******  NTOT  NSS  ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(NSS(1)))GOTO 320
	IF (FLAG(INNTOT).GE.IATT.OR.FLAG(INNSS(1)).GE.IATT)GOTO 320

	IF(NTOT.EQ.9.AND.NSS(1).NE.9)GOTO 32
	IF(NTOT.NE.9.AND.NSS(1).EQ.9)GOTO 32
	IF(NTOT.LT.NSS(1))GOTO 32

	GOTO 320

32	FLAG(INNTOT)=FLAG(INNTOT)+1
	CALL BITW(CODER,BIT,30)

320	CONTINUE
C	*******  NTOT  VIS  ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(VIS))GOTO 330
	IF (FLAG(INNTOT).GE.IATT.OR.FLAG(INVIS).GE.IATT)GOTO 330

	IF(NTOT.EQ.9.AND.VIS.GE.10)GOTO 33

	GOTO 330

33	FLAG(INNTOT)=FLAG(INNTOT)+1
	CALL BITW(CODER,BIT,31)

330	CONTINUE

C	*******  NTOT  HH  ********

	IF (.NOT.C_E(NTOT))GOTO 340
	IF (FLAG(INNTOT).GE.IATT)GOTO 340

	IF (.NOT.C_E(HH).AND.NTOT.NE.9)GOTO 34

	IF (.NOT.C_E(HH))GOTO 340
	IF (FLAG(INHH).GE.IATT)GOTO 340

	IF(NTOT.EQ.0.AND.HH.LT.2500)GOTO 34

	GOTO 340

34	FLAG(INNTOT)=FLAG(INNTOT)+1
	CALL BITW(CODER,BIT,32)

340	CONTINUE

c	<<<<<<<<<<<<<<<<<<<<<<<<<  TETE  >>>>>>>>>>>>>>
C	*******  TETE  TATA  ********

	IF (.NOT.C_E(TETE).OR..NOT.C_E(TATA))GOTO 350
	IF (FLAG(INTETE).GE.IATT.OR.FLAG(INTATA).GE.IATT)GOTO 350

	IF (ORA(1).EQ.18.AND.TATA.GT.TETE)GOTO 35
	IF (ORA(1).EQ.06.AND.TATA.LT.TETE)GOTO 35

	GOTO 350

35	FLAG(INTETE)=FLAG(INTETE)+1
	CALL BITW(CODER,BIT,33)

350	CONTINUE


C	*******  TETE  TDTD  ********

	IF (.NOT.C_E(TETE).OR..NOT.C_E(TDTD))GOTO 360
	IF (FLAG(INTETE).GE.IATT.OR.FLAG(INTDTD).GE.IATT)GOTO 360

	IF (ORA(1).EQ.18.AND.TDTD.GT.TETE)GOTO 36

	GOTO 360

36	FLAG(INTETE)=FLAG(INTETE)+1
	CALL BITW(CODER,BIT,34)

360	CONTINUE

C	<<<<<<<<<<<<<<<<<<<<<<< CONTROLLO  TR  >>>>>>>
C	******** TR - ORA REPORT *********

	IF (.NOT.C_E(TR))GOTO 370
	IF (FLAG(INTR).GE.IATT)GOTO 370

	IF ((ORA(1).EQ.18.OR.ORA(1).EQ.06).AND.TR.NE.12)GOTO 37
	IF ((ORA(1).EQ.0 .OR.ORA(1).EQ.12).AND.TR.NE.6 )GOTO 37

	GOTO 370

37	FLAG(INTR)=FLAG(INTR)+1
	CALL BITW(CODER,BIT,40)

370	CONTINUE

C	<<<<<<<<<<<<<<<<<<<<<<< CONTROLLO  GEOP  >>>>>>>
C	********  GEOP  P0P0  ******

	IF (.NOT.C_E(GEOP).OR..NOT.C_E(P0P0).OR..NOT.C_E(TATA))GOTO 380
	IF (FLAG(INGEOP).GE.IATT.OR.
	1	FLAG(INP0P0).GE.IATT.OR.FLAG(INTATA).GE.IATT)GOTO 380

C	leggo i dati anagrafici solo se non sono gia` stati letti

	call GETSTAZ1(staz,ANOME,HHSLM,HHPOZ,ALAT,ALON,IER)
C	
C	Serve ad associare ad una stazione i relativi parametri anagrafici
C	Letti nell' archivio meteodata.
C
C	Input	:	STAZ	= I*4	Codice W.M.O. stazione
C
C	Output	:	ANOME   = C*24	Nome della stazione
C			HHSLM	= R*4	Altezza stazione S.L.M.(m.)
C			HHPOZ	= R*4   Altezza del pozzetto (m.)
C			ALAT	= R*4	Latitudine ( Gradi,primi)
C			ALON	= R*4	Longitudine (Gradi,primi)

c	type*,'estrastaz ier=',ier

	IF (HHPOZ.LT.0.)THEN
		IER=-1
		GOTO 380
	END IF

c	livello di riferimento per geopotenziale
	IF(SISO.NE.850.AND.SISO.NE.700.AND.SISO.NE.500)GOTO 38

	IGEOP=CALCOLAGEO
	1	(FLOAT(P0P0)/10.,FLOAT(TATA)/10.,HHPOZ,FLOAT(SISO))

	IF(GEOP+5.LT.IGEOP.OR.GEOP-5.GT.IGEOP)GOTO 38

	GOTO 380

38	FLAG(INGEOP)=FLAG(INGEOP)+1
	CALL BITW(CODER,BIT,41)
C	TYPE*,'GEOP= ',GEOP,'   CALCOLATO= ',IGEOP
C	TYPE*,FLOAT(P0P0)/10.,FLOAT(TATA)/10.,HHPOZ,FLOAT(SISO)

C	********  P0P0  GEOP  ******!!!!!!!!!!!!!!!!!!!

	FLAG(INP0P0)=FLAG(INP0P0)+1
	CALL BITW(CODER,BIT,58)

380	CONTINUE


CC	<<<<<<<<<<<<<<<<<<<<<<<< CONTROLLO CL >>>>>>>>>>>>>>>>>>>>>>
C
CC	*************  CL  8GRUPS ******************
C
C	####### CONTROLLA CHE IN ASSENZA DI NUBI SIGLATE COME CL
C	####### NON VENGANO RIPORTATE NUBI BASSE SIGNIFICATIVE NEL REGIONALE

	DO I=1,4
		IF (.NOT.C_E(CL).OR..NOT.C_E(CSS(I)))GOTO 390
		IF (FLAG(INCL).GE.IATT.OR.FLAG(INCSS(I)).GE.IATT)GOTO 390

		IF(CL.EQ.0.AND.CSS(I).GE.6)GOTO 39
	END DO

	GOTO 390

39	FLAG(INCL)=FLAG(INCL)+1
	CALL BITW(CODER,BIT,42)


390	CONTINUE


C       ##### CONTROLLA SE IN PRESENZA DI CUMULI IMPONENTI (CL=3,9)
C	##### ESSI VENGANO RIPORTATI ANCHE NELLE NUBI DEL REGIONALE
C
	DO I=1,4
		IF (.NOT.C_E(CL).OR..NOT.C_E(CSS(I)))GOTO 400	
		IF (FLAG(INCL).GE.IATT.OR.FLAG(INCSS(I)).GE.IATT)GOTO 400

		IF((CL.EQ.3.OR.9).AND.CSS(I).EQ.9)GOTO 400
	END DO

	FLAG(INCL)=FLAG(INCL)+1
	CALL BITW(CODER,BIT,42)

400	CONTINUE


C	####### CONTROLLA CHE SE CL E` PRESENTE (CL=1-9) SIANO RIPORTATE
C	####### NUBI BASSE SIGNIFICATIVE NEL PRIMO GRUPPO NUBI REGIONALE
C
	IF (.NOT.C_E(CL).OR..NOT.C_E(CSS(1)))GOTO 410
	IF (FLAG(INCL).GE.IATT.OR.FLAG(INCSS(1)).GE.IATT)GOTO 410

	IF(CL.GT.0.AND.CSS(1).LE.5)GOTO 41

	GOTO 410

41	FLAG(INCL)=FLAG(INCL)+1
	CALL BITW(CODER,BIT,42) !NON CAMBIO FLAG PERCHE` CONTROLLO STESSI GRUPPI
	
410	CONTINUE

C	*************  CL  NH ******************

	IF (.NOT.C_E(CL).OR..NOT.C_E(NH))GOTO 420
	IF (FLAG(INCL).GE.IATT.OR.FLAG(INNH).GE.IATT)GOTO 420

	IF(CL.GT.0.AND.NH.EQ.0)GOTO 42

	GOTO 420

42	FLAG(INCL)=FLAG(INCL)+1
	CALL BITW(CODER,BIT,43)

420	CONTINUE

C	************  CL CM NH **************
C
C	####### CONTROLLA CHE SE CL=CM=0 NH SIA MAGGIORE DI 0
C	####### + ALTRE COSE
	IF (.NOT.C_E(CL).OR..NOT.C_E(CM).OR..NOT.C_E(NH))GOTO 430
	IF (FLAG(INCL).GE.IATT.OR.
	1	FLAG(INCM).GE.IATT.OR.FLAG(INNH).GE.IATT)GOTO 430

	IF(CL.EQ.0.AND.CM.EQ.0.AND.NH.NE.0)GOTO 43	
	IF(NH.EQ.8.AND.CL.GE.1.AND.CL.LE.9.AND..NOT.C_E(CM))GOTO 43

	GOTO 430

43	FLAG(INCL)=FLAG(INCL)+1
	CALL BITW(CODER,BIT,44)

C	*************  NH  CL  CM ******************!!!!!!!!!!!!

	FLAG(INNH)=FLAG(INNH)+1
	CALL BITW(CODER,BIT,60)

430	CONTINUE

C	***********  CL CH NTOT NH ************
C
C	######### CONTROLLA CHE SE CL=CH=0 NH SIA DIVERSO DA NTOT ######

	IF (.NOT.C_E(CL).OR..NOT.C_E(NTOT).OR.
	1	.NOT.C_E(NH).OR..NOT.C_E(CH))GOTO 440
	IF (FLAG(INCL).GE.IATT.OR.FLAG(INNTOT).GE.IATT.OR.
	1	FLAG(INNH).GE.IATT.OR.FLAG(INCH).GE.IATT)GOTO 440

	IF (CL.EQ.0.AND.CH.EQ.0.AND.NTOT.NE.NH)GOTO 44

	GOTO 440

44	FLAG(INCL)=FLAG(INCL)+1
	CALL BITW(CODER,BIT,45)

440	CONTINUE

C	************  CL CM CH ************
C
C	########## CONTROLLA CHE SE CL E` BARRATO NON SIANO BARRATI 
C	ANCHE CM E CH ##

	IF (.NOT.C_E(CM).AND..NOT.C_E(CH))GOTO 450
	IF (FLAG(INCM).GE.IATT.OR.FLAG(INCH).GE.IATT)GOTO 450

	IF (.NOT.C_E(CL))GOTO 45

	GOTO 450

45	FLAG(INCL)=FLAG(INCL)+1
	CALL BITW(CODER,BIT,46)

450	CONTINUE

C	*******  CL  HH  CM ********

	IF (.NOT.C_E(HH).OR..NOT.C_E(CL).OR..NOT.C_E(CM))GOTO 610
	IF (FLAG(INHH).GE.IATT.OR.FLAG(INCL).GE.IATT.OR.
	1		FLAG(INCM).GE.IATT)GOTO 610

	IF(CL.EQ.0.AND.CM.EQ.0.AND.HH.LT.2500)GOTO 601

	GOTO 610

601	FLAG(INCL)=FLAG(INCL)+1
	CALL BITW(CODER,BIT,61)

610	CONTINUE

C	<<<<<<<<<<<<<<<< CONTROLLO CM  >>>>>>>>>>>>>>>>>>>>>
C
C	****************  CM CH ***************
C
	IF (FLAG(INCH).GE.IATT)GOTO 460
	IF (.NOT.C_E(CM).AND.C_E(CH))GOTO 46

	GOTO 460

46	FLAG(INCM)=FLAG(INCM)+1
	CALL BITW(CODER,BIT,47)

460	CONTINUE


C	************  CM CH NTOT NH ***********	
C
C	######### CONTROLLA CHE SE CM=CH=0 NH SIA DIVERSO DA NTOT ######
C
	IF (.NOT.C_E(CM).OR..NOT.C_E(NTOT).OR.
	1	.NOT.C_E(NH).OR..NOT.C_E(CH))GOTO 470
	IF (FLAG(INCM).GE.IATT.OR.FLAG(INNTOT).GE.IATT.OR.
	1	FLAG(INNH).GE.IATT.OR.FLAG(INCH).GE.IATT)GOTO 470

	IF (CM.EQ.0.AND.CH.EQ.0.AND.NTOT.NE.NH)GOTO 47

	GOTO 470

47	FLAG(INCM)=FLAG(INCM)+1
	CALL BITW(CODER,BIT,48)

470	CONTINUE

C	***********  CM CL 8GRUPS **************
C
C	###### CONTROLLLA CHE SE CL=CM=0 NON CI SIANO 8GRUPS CON CSS>3

	IF (.NOT.C_E(CM).OR..NOT.C_E(CL))GOTO 480	
	IF (FLAG(INCM).GE.IATT.OR.FLAG(INCL).GE.IATT)GOTO 480

	IF(CL.NE.0.OR.CM.NE.0.)GOTO 480

	DO I=1,4
		IF (.NOT.C_E(CSS(I)))GOTO 480
		IF (FLAG(INCSS(I)).GE.IATT)GOTO 480
		IF (CSS(I).GE.3.)GOTO 48	
	END DO

	GOTO 480

48	FLAG(INCM)=FLAG(INCM)+1
	CALL BITW(CODER,BIT,49)

480	CONTINUE

C	########### CONTROLLA CHE QUANDO E` PRESENTE CM E CL E` ZERO
C       ##########  IL CSS(1) SIA COMPRESO TRA 3 E 5

	IF (.NOT.C_E(CM).OR..NOT.C_E(CSS(1)).OR..NOT.C_E(CL))GOTO 490	
	IF (FLAG(INCM).GE.IATT.OR.
	1	FLAG(INCSS(1)).GE.IATT.OR.FLAG(INCL).GE.IATT)GOTO 490

	IF (CM.NE.0.AND.CL.EQ.0.AND.
	1	(CSS(1).LT.3.OR.CSS(1).GT.5))GOTO 49

	GOTO 490

49	FLAG(INCM)=FLAG(INCM)+1
	CALL BITW(CODER,BIT,49)


490	CONTINUE


C	***********  CM NH   ***********

	IF (.NOT.C_E(CM).OR..NOT.C_E(NH))GOTO 500
	IF (FLAG(INCM).GE.IATT.OR.FLAG(INNH).GE.IATT)GOTO 500

	IF(CM.NE.0.AND.NH.EQ.0.)GOTO 501

	GOTO 500

501	FLAG(INCM)=FLAG(INCM)+1
	CALL BITW(CODER,BIT,50)

C	***********  NH  CM  ***********!!!!!!!!!!!!!

	FLAG(INNH)=FLAG(INNH)+1
	CALL BITW(CODER,BIT,62)

500	CONTINUE

C	*************  CM  NH  CL  **************

	IF (.NOT.C_E(CM).OR..NOT.C_E(NH).OR..NOT.C_E(CL))GOTO 640
	IF (FLAG(INCM).GE.IATT.OR.FLAG(INNH).GE.IATT.OR.
	1	FLAG(INCL).GE.IATT)GOTO 640


	IF (CL.EQ.0.AND.CM.EQ.0.AND.NH.NE.0)GOTO 604

	GOTO 640

604	FLAG(INCM)=FLAG(INCM)+1
	CALL BITW(CODER,BIT,63)

640	CONTINUE

C	*******  CM  HH  CL ********

	IF (.NOT.C_E(HH).OR..NOT.C_E(CL).OR..NOT.C_E(CM))GOTO 620
	IF (FLAG(INHH).GE.IATT.OR.FLAG(INCL).GE.IATT.OR.
	1	FLAG(INCM).GE.IATT)GOTO 620

	IF(CL.EQ.0.AND.CM.EQ.0.AND.HH.LT.2500)GOTO 602

	GOTO 620

602	FLAG(INCM)=FLAG(INCM)+1
	CALL BITW(CODER,BIT,64)

620	CONTINUE

C	***********  CM 8GRUPS **************
C

	DO I=1,4
		IF (.NOT.C_E(CSS(I)))GOTO 510
		IF (FLAG(INCSS(I)).GE.IATT)GOTO 510

		IF((CM.EQ.0.OR..NOT.C_E(CM)).AND.
	1	(CSS(I).GE.3.AND.CSS(I).LE.5))GOTO 51

	END DO

	GOTO 510

51	FLAG(INCM)=FLAG(INCM)+1
	CALL BITW(CODER,BIT,51)

510	CONTINUE



C	<<<<<<<<<<< CONTROLLO CH  >>>>>>>>>>>>>>>>
C
C	***********  CH NTOT **********
C	######## CONTROLLO CHE SE CH=7 NTOT DEVE ESSERE=8

	IF (.NOT.C_E(CH).OR..NOT.C_E(NTOT))GOTO 515
	IF (FLAG(INCH).GE.IATT.OR.FLAG(INNTOT).GE.IATT)GOTO 515

	IF (CH.EQ.7.AND.NTOT.NE.8.)GOTO 511

	GOTO 515

511	FLAG(INCH)=FLAG(INCH)+1
	CALL BITW(CODER,BIT,52)

515	CONTINUE


C	**********  CH CM CL 8GROUPS ***************
C
C	######### CONTROLLO CHE SE CL=CM=CH=0 NON SIANO PRESENTI 8GROUPS

	IF (.NOT.C_E(CL).OR..NOT.C_E(CM).OR..NOT.C_E(CH))GOTO 520
	IF (FLAG(INCL).GE.IATT.OR.FLAG(INCM).GE.IATT.OR.
	1	FLAG(INCH).GE.IATT)GOTO 520

	IF (CL.NE.0.OR.CM.NE.0.OR.CH.NE.0)GOTO 520
	
	DO I=1,4
		IF (C_E(CSS(I)))GOTO 52

	END DO

	GOTO 520

52	FLAG(INCH)=FLAG(INCH)+1
	CALL BITW(CODER,BIT,53)



520	CONTINUE


C	######## CONTROLLO CHE SE CI SONO CH E CL=CM=0 IL PRIMO 8GROUPS SI
C	######   RIFERISCA ALLE NUBI ALTE


	IF (.NOT.C_E(CL).OR..NOT.C_E(CM).OR..NOT.C_E(CH).OR..NOT.
	1	C_E(CSS(1)))GOTO 530
	IF (FLAG(INCL).GE.IATT.OR.FLAG(INCM).GE.IATT.OR.
	1	FLAG(INCH).GE.IATT.OR.FLAG(INCSS(1)).GE.IATT)GOTO 530

	IF (CL.EQ.0.AND.CM.EQ.0.AND.CH.GE.1.AND.CH.LE.9.
	1	AND.CSS(1).GT.2)GOTO 53

	GOTO 530

53	FLAG(INCH)=FLAG(INCH)+1
	CALL BITW(CODER,BIT,53)


530	CONTINUE


C	**********  CH 8GROUP ***************

C	########## CONTROLLO CHE SE CH= 1-4  CSS <> 0
C	########## CONTROLLO CHE SE CH= 5-8  CSS <> 2
C	########## CONTROLLO CHE SE CH= 9    CSS <> 1
C
	IF (.NOT.C_E(CH))GOTO 540
	IF (FLAG(INCH).GE.IATT)GOTO 540

	IF (CH.EQ.0)GOTO 540

	DO I=1,4

		IF (.NOT.C_E(CSS(I)))GOTO 54
		IF (CH.GE.1.AND.CH.LE.4.AND.CSS(I).EQ.0)GOTO 540
		IF (CH.GE.5.AND.CH.LE.8.AND.CSS(I).EQ.2)GOTO 540
		IF (CH.EQ.9.            AND.CSS(I).EQ.1)GOTO 540

	END DO

	GOTO 540

54	FLAG(INCH)=FLAG(INCH)+1
	CALL BITW(CODER,BIT,54)
	
540	CONTINUE

C	################ CONTROLLO CHE SE CH=0 O =/ NON CI SIANO NUBI 
C	##########   ALTE NEI REPORT REGIONALI
C

	DO I=1,4

	IF (.NOT.C_E(CSS(I)))GOTO 550
	IF (FLAG(INCSS(I)).GE.IATT)GOTO 550

	IF ((.NOT.C_E(CH).OR.CH.EQ.0).AND.CSS(I).LE.2)GOTO 55

	END DO

	GOTO 550

55	FLAG(INCH)=FLAG(INCH)+1
	CALL BITW(CODER,BIT,54)
	
550	CONTINUE

C[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
C	<<<<<<<<<<< CONTROLLO HH  >>>>>>>>>>>>>>>>
C	***********  HH VIS  ***********

	IF (.NOT.C_E(HH).OR..NOT.C_E(VIS))GOTO 560
	IF (FLAG(INHH).GE.IATT.OR.FLAG(INVIS).GE.IATT)GOTO 560

	IF(CL.NE.0.AND.NH.EQ.0.)GOTO 506

	GOTO 560

506	FLAG(INHH)=FLAG(INHH)+1
	CALL BITW(CODER,BIT,65)

C	***********  VIS HH  ***********!!!!!!!!!!!!!!

	FLAG(INVIS)=FLAG(INVIS)+1
	CALL BITW(CODER,BIT,66)

560	CONTINUE

C	*******  HH  NTOT ********

	IF (.NOT.C_E(NTOT).OR..NOT.C_E(HH))GOTO 570
	IF (FLAG(INNTOT).GE.IATT.OR.FLAG(INHH).GE.IATT)GOTO 570

	IF(NTOT.EQ.0.AND.HH.LT.2500)GOTO 507

	GOTO 570

507	FLAG(INHH)=FLAG(INHH)+1
	CALL BITW(CODER,BIT,67)

570	CONTINUE
C	*******  HH  NH ********

	IF (.NOT.C_E(HH).OR..NOT.C_E(NH))GOTO 580
	IF (FLAG(INHH).GE.IATT.OR.FLAG(INNH).GE.IATT)GOTO 580

	IF(NH.EQ.0.AND.HH.LT.2500)GOTO 508

	GOTO 580

508	FLAG(INHH)=FLAG(INHH)+1
	CALL BITW(CODER,BIT,68)

580	CONTINUE

C	*******  HH  CL CM ********

	IF (.NOT.C_E(HH).OR..NOT.C_E(CL).OR..NOT.C_E(CM))GOTO 590
	IF (FLAG(INHH).GE.IATT.OR.FLAG(INCL).GE.IATT.OR.
	1	FLAG(INCM).GE.IATT)GOTO 590

	IF(CL.EQ.0.AND.CM.EQ.0.AND.HH.LT.2500)GOTO 509

	GOTO 590

509	FLAG(INHH)=FLAG(INHH)+1
	CALL BITW(CODER,BIT,69)

590	CONTINUE

C	<<<<<<<<<<< CONTROLLO NH  >>>>>>>>>>>>>>>>
C	*******  NH  CL ********

	IF (.NOT.C_E(NH))GOTO 630
	IF (FLAG(INNH).GE.IATT)GOTO 630

	IF(NH.LT.9.AND..NOT.C_E(CL))GOTO 603

	IF (.NOT.C_E(CL))GOTO 630
	IF (FLAG(INCL).GE.IATT)GOTO 630

	IF(CL.GT.0.AND.NH.EQ.0)GOTO 603

	GOTO 630

603	FLAG(INNH)=FLAG(INNH)+1
	CALL BITW(CODER,BIT,59)

630	CONTINUE

C	*******  NH  HH  ********

	IF (.NOT.C_E(NH))GOTO 650
	IF (FLAG(INNH).GE.IATT)GOTO 650

	IF (NH.LT.9.AND..NOT.C_E(HH))GOTO 605

	IF (.NOT.C_E(HH)) GOTO 650
	IF (FLAG(INHH).GE.IATT)GOTO 650

	IF(NH.EQ.0.AND.HH.LT.2500)GOTO 605

	GOTO 650

605	FLAG(INNH)=FLAG(INNH)+1
	CALL BITW(CODER,BIT,71)

650	CONTINUE

C	*******  NH  8 GRUPS  ********

	IF (.NOT.C_E(NH))GOTO 660
	IF (FLAG(INNH).GE.IATT)GOTO 660

	IF (NH.GE.1.AND.NH.LE.8.AND..NOT.C_E(NSS(1)))GOTO 606

C??	IF (.NOT.C_E(NSS(1)))GOTO 660	!vedi documentazione
C??	IF (FLAG(INNSS(1)).GE.IATT)GOTO 660
C??
C??	IF(NH.EQ.0)GOTO 606		!solo se nei gruppi 8 non vengono
c??					!riportate le nubi alte

	GOTO 660

606	FLAG(INNH)=FLAG(INNH)+1
	CALL BITW(CODER,BIT,72)

660	CONTINUE

C	*******  NH  CH ********

	IF (.NOT.C_E(NH))GOTO 670
	IF (FLAG(INNH).GE.IATT)GOTO 670

	IF(NH.EQ.8.AND.C_E(CH))GOTO 607

	GOTO 670

607	FLAG(INNH)=FLAG(INNH)+1
	CALL BITW(CODER,BIT,70)

670	CONTINUE

	RETURN
	END
